{
  "contractName": "NFTAttachment",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "anonym",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "attachment",
          "type": "bytes"
        }
      ],
      "name": "AnonymAttachToNFT",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "attachment",
          "type": "bytes"
        }
      ],
      "name": "MinterAttachToNFT",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "attachment",
          "type": "bytes"
        }
      ],
      "name": "OwnerAttachToNFT",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "COLLECTION_MANAGER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "META_TX_FORWARDER",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "freeport",
      "outputs": [
        {
          "internalType": "contract Freeport",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "innerNftId",
          "type": "uint32"
        }
      ],
      "name": "getGlobalNftId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Freeport",
          "name": "_freeport",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "attachment",
          "type": "bytes"
        }
      ],
      "name": "minterAttachToNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "attachment",
          "type": "bytes"
        }
      ],
      "name": "collectionManagerAttachToNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "attachment",
          "type": "bytes"
        }
      ],
      "name": "ownerAttachToNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "attachment",
          "type": "bytes"
        }
      ],
      "name": "anonymAttachToNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "_minterFromNftId",
      "outputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"anonym\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"attachment\",\"type\":\"bytes\"}],\"name\":\"AnonymAttachToNFT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"attachment\",\"type\":\"bytes\"}],\"name\":\"MinterAttachToNFT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"attachment\",\"type\":\"bytes\"}],\"name\":\"OwnerAttachToNFT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"COLLECTION_MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"META_TX_FORWARDER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"_minterFromNftId\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"attachment\",\"type\":\"bytes\"}],\"name\":\"anonymAttachToNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"attachment\",\"type\":\"bytes\"}],\"name\":\"collectionManagerAttachToNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"freeport\",\"outputs\":[{\"internalType\":\"contract Freeport\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"innerNftId\",\"type\":\"uint32\"}],\"name\":\"getGlobalNftId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Freeport\",\"name\":\"_freeport\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"attachment\",\"type\":\"bytes\"}],\"name\":\"minterAttachToNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"attachment\",\"type\":\"bytes\"}],\"name\":\"ownerAttachToNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"events\":{\"AnonymAttachToNFT(address,uint256,bytes)\":{\"notice\":\"The account `anonym` wished to attach data `attachment` to the NFT type `nftId`. There is absolutely no validation. It is the responsibility of the reader of this event to decide who the sender is and what the attachment means.\"},\"MinterAttachToNFT(address,uint256,bytes)\":{\"notice\":\"The account `minter` wished to attach data `attachment` to the NFT type `nftId`. The `minter` is the minter who created this NFT type, or may create it in the future if it does not exist.\"},\"OwnerAttachToNFT(address,uint256,bytes)\":{\"notice\":\"The account `owner` wished to attach data `attachment` to the NFT type `nftId`. The `owner` owned at least one NFT of this type at the time of the event.\"}},\"kind\":\"user\",\"methods\":{\"COLLECTION_MANAGER_ROLE()\":{\"notice\":\"Collection manager role.  Used for configuring the amounts and beneficiaries of royalties on primary and secondary transfers of this NFT.\"},\"_minterFromNftId(uint256)\":{\"notice\":\"Parse an NFT ID into its issuer, its supply, and an arbitrary nonce. This does not imply that the NFTs exist. This is specific to Freeport NFTs. See `freeportParts/Issuance.sol`\"},\"anonymAttachToNFT(uint256,bytes)\":{\"notice\":\"Attach data `attachment` to the NFT type `nftId`, as any account.\"},\"collectionManagerAttachToNFT(uint256,bytes)\":{\"notice\":\"Attach data `attachment` to the NFT type `nftId`, as manager of collection. This only works with NFTs on Collections.\"},\"freeport()\":{\"notice\":\"This attachment contract refers to the NFT contract in this variable.\"},\"getGlobalNftId(uint32)\":{\"notice\":\"Calculate the global ID of an NFT type, identifying its inner nft id.\"},\"initialize(address)\":{\"notice\":\"Set which NFT contract to refer to. The event `MinterAttachToNFT` is only supported for Freeport-compatible NFTs. The event `OwnerAttachToNFT` is supported for ERC-1155 NFTs, including Freeport.\"},\"minterAttachToNFT(uint256,bytes)\":{\"notice\":\"Attach data `attachment` to the NFT type `nftId`, as the minter of this NFT type. This only works for NFT IDs in the Freeport format.\"},\"ownerAttachToNFT(uint256,bytes)\":{\"notice\":\"Attach data `attachment` to the NFT type `nftId`, as a current owner of an NFT of this type. This works for NFTs in the ERC-1155 or Freeport standards.\"}},\"notice\":\"The contract NFTAttachment allows users to attach objects to NFTs. Some application can listen for the events and interpret the objects in some way. There are three roles who can attach objects to an NFT: the minter, any current owner, or any anonymous account. A different event is emitted for each role. The attachment data is meant to identify an object hosted externally, such as a CID, a.k.a. Content Identifier, or a DDC URL. The content may be retrieved from Cere DDC or some other store.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/NFTAttachment.sol\":\"NFTAttachment\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x719f71989e630280a6902f857ef2b038d761ef2d0d51611f9da463be6c7c4be5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eada89c17578d8ffbadd76c7247397d37ccae1f8e0e2b6d26057117d3de2dbed\",\"dweb:/ipfs/QmS3zjZ5SdridEYWAaS7RXtRB9YnKVmN3T5Lq2Q7rjz2oT\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0xda94a85ba0a26d49cd327cc63b8b54fa5dde8f5d1c5f3c942237096ef896eff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a591e20787048963a028302f0157fea70eab83db641f020169a789effc7d7907\",\"dweb:/ipfs/QmXY3LKPvw5BMrjG4JxWZZ15RR2jhUDktNrZqHqyCewXBG\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0xce27d2053e9b7a970532947213c84eed0289ada2d9a91c92b7e1e15f3a466c54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://429b36651fab917b4cdfa5e9431b96c5bd3ba73392a31e62a4d92b4b4ae85184\",\"dweb:/ipfs/QmY1SgWuSbxgYCPAibNHT4phA71QzzqagZRunwC7Gm19wq\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x67d2f282a9678e58e878a0b774041ba7a01e2740a262aea97a3f681339914713\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://297df5725003e586651278a5d021b176457c5bb05a954c8490f21db2754e7352\",\"dweb:/ipfs/QmSe9AHjVnDn39NqT9hkjuCCGUwtc989WuZ5rWTe3GHrUD\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x6014667ab9e057c1810fcb7ef844123c581a34eb8dafc1aaa15f4e0f704620b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3abfde5dc879cf0ef670cd7357410b4fcf2a7ec76306e82f96cb4715b2c51d0\",\"dweb:/ipfs/Qme48SqUCFLhgtgg9ZSpmQuwvitujCkHjDhmDCAtsDgjA3\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol\":{\"keccak256\":\"0xd841c561258151c3c22f05feb68c702fc414b112606bd72b848e8a65af128c30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e949bb10f10df25903b0ec5eb13a8b9878996abd49897884062645a4123ffb2\",\"dweb:/ipfs/QmQ2Z3qegGykZLAf7Wt1y24wCxxnA3stRMHzy1LBFvxhtX\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol\":{\"keccak256\":\"0xa22cd3d499a04af4dbcc1b15877b69b611004ff02a2ab121e42226a6b6a88ab9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47b5420b49ecc4983f2810d413749289c357c58d2b0f3431b5b99cd3242ce17a\",\"dweb:/ipfs/QmUA8ydnDvHSdbXgkPhL3xSBitYj8vcC8XbWRFvKkCtJzH\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol\":{\"keccak256\":\"0x6d0b5e3282b9f7683eb822a01bd5351d01bd9225cd8153e366c9a54e89213165\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://180ac522b70db433d333f1e3998c9ad334d755bfa009ad7d08021bb446f28819\",\"dweb:/ipfs/QmT34uLFrzTEpDgm1SVrFibWcGTBdg8DbSKGNUH7vMRgVi\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol\":{\"keccak256\":\"0x6c06988c1ed8d7a2dac42dc07f78e50e986b4370fd32cbba547bf6e023bae33f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5be24dd44f4e7c634279b804665afc2b4b316bbe841498570498ca9940c47ab1\",\"dweb:/ipfs/QmczQHn9Xx8DnB5qf5x8R3DuUcajFU53zPtpoPXcFatYFo\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol\":{\"keccak256\":\"0x1c45ed26408b2674d1724a95e839627b4b307baaf742b5971aa83716cd9dae1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50d42175f0b0c8c7b0d41f81c5b20045838926645773a33d2340d476932c542\",\"dweb:/ipfs/QmQCD7vFGpkkf9TdszaFy8zddJoF7pxbKrbMC6eMLw8Boa\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x5642ae1d6b33c5c0b71a8412c6c64cbcf2468b84a002bee3e33cdb5644d25cdb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07ba474854eacf022fca2ab63af2b09653f476a9ef2d144ea3d022a0c0b92726\",\"dweb:/ipfs/QmVNfrArMejFSrPMktAtDte64FJ2fGPQHqgSXDz2SH6dse\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x8e9eb503de1189f50c5f16fef327da310b11898d6b9ab3ca937df07c35233b9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9631a7abcad07067f268b6295668a287e205ea9a8dc0fca02c2bf4db6c39431d\",\"dweb:/ipfs/QmUYFfB2AngTZLEsah4u8Z44riaB6yWkUXeasi1oG7ipfS\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0xc15eeb888d421aa4dedf46768a0502590d88911cfe5750d3ab9f644a7e5ada95\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f270653fd8d1a109e3e3aa77d5035a52f175b66604f924e0db1f71a5b38e708\",\"dweb:/ipfs/QmNiP7PvV47ahSvMwxCifeUExVNhyVXdd8Zu2hGz4XC32j\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6964377da5c19ade6b3e96bae0c0e82494d518af70cf12d2cdb3276f78fb3d85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6fdcd89cc451559fcf17eb5b0a657a4d6217809603ece8439f933f836521f31f\",\"dweb:/ipfs/QmU75qTF1VG5KUaxZv2TrFYDPLmkraeTdmAG4P4j1ehoa6\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0x1256e3a5b3acc1bb820c5342c003431117bfc7b9d654e0c0251076b268e6bf7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2851b5639b2525d78869e8aa745e41f7e092ead34bf3276aa71354211b90c211\",\"dweb:/ipfs/QmZbyN1tgnjre8ZJEDhDfC25JjSEanDksDFKbhfLZUmcWX\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x17c9c5d2d6b56527215ee7b3da6dde66b6f23f1b3d5c66cc436e753ef349a97a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd7c775bc6000f44c048796b5e013dbb3ec7592986bc289868b19ff9439ee31d\",\"dweb:/ipfs/QmSuBfTT9z9sEpmEcGihEc5DJGsXery8QyyuNfvub875ej\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0x1c4860acd323e34a67b3e97faab9aaa55fe8e92b1dcf08b5f47f3468d58ce75c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c2746f8ebb4bfb6b8e8a768296c7f85f11b36f4873daabb91933c3602f00590\",\"dweb:/ipfs/QmdumDez8WEdk9FDuP7Jp5pDSJiQeFtFSJw3B5CEHJL4KU\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x456e9b3a2bfe189b5249857f624f4139e59331db518483b456c4e587a20552e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1123c9545decc48a011370ebab4bf53dda98524fa21f9498e68851ba8f0ffc0f\",\"dweb:/ipfs/QmUpgMg8EFDnv87ePKUjXxXpJT3qwHRj9VDNSnRxu7T9sy\"]},\"project:/contracts/Auction.sol\":{\"keccak256\":\"0x84f6fef19fa2e4842b72075e4669979efa171bf8539ead9234820899653436d1\",\"urls\":[\"bzz-raw://aca8a88e91a3a386fe89127e7e01e0e242fbc3d1026564e048282eb2b0005f27\",\"dweb:/ipfs/QmbPs8xrW6u6Dh59jeF2dKqun3NYZBYRHxgHJreL4YVv1z\"]},\"project:/contracts/Collection.sol\":{\"keccak256\":\"0x5793e671ecfcc3db3843eb2a9428b261fdc2c0eec7142d78ccfdfc62df6e90de\",\"urls\":[\"bzz-raw://9b184639d1312e3651280300a51fbfcfcb2aa99b4dbff06d756f660d658bb653\",\"dweb:/ipfs/QmPxwC7LAhZfkyEMfWGciMmNALjAafeg7NCTpMyMB4d2dQ\"]},\"project:/contracts/CollectionFactory.sol\":{\"keccak256\":\"0x694ee4a9c52a0cc881cd6cafa96998a4c7eedfd2a108a62d8c3b44269b253da4\",\"urls\":[\"bzz-raw://ea0209d0a6967255cdf8a899fbe4252c45310d78737e8b4b027633cc411cbcde\",\"dweb:/ipfs/Qmee1tAfMS76XoMbi4SCT84UHkD7RGGN3eFBwpZoBH7aG2\"]},\"project:/contracts/Freeport.sol\":{\"keccak256\":\"0x001501a3c0ca27f755dd356ace2fae4bf88b31eeb2ac39464177861b0d75f9c5\",\"urls\":[\"bzz-raw://81bfe2fa98823dfc4791f279b165492022cca0030927f918294b62589e5a722f\",\"dweb:/ipfs/QmcSjxP44iN1MRHaSocw6aLeySA7g2dWKpsfQ55tH1xbXi\"]},\"project:/contracts/Marketplace.sol\":{\"keccak256\":\"0x636200b8198dd072f81a10b6d5f8118cdd62c03a4e940e939f46ce5ba44fb616\",\"urls\":[\"bzz-raw://18d7f2b3f9621336889344ec22a8c6ee31691e737632b99f7248d63ea946c9b0\",\"dweb:/ipfs/QmRhCAfZ212GAmCjXgZR4SoYqvUKs6XKN5B73Qfx59xyE6\"]},\"project:/contracts/NFTAttachment.sol\":{\"keccak256\":\"0x1cb4cc7780ce925476b399a484180f6b0ee3196142b4003f341d9fc43e3465ab\",\"urls\":[\"bzz-raw://5a56817a0e0932fb98373acccad417cd901ffd3d6b6896f4095b0ab23ffd9b85\",\"dweb:/ipfs/Qme2tG48SWaKCKCk1MZUGnKizqFry8k4AQawmJA4vsa8XA\"]},\"project:/contracts/freeportParts/BaseNFT.sol\":{\"keccak256\":\"0xc09166012757124f4d2d4e0ad2494978bcd1b4a84ea01adfcf8f432530a99231\",\"urls\":[\"bzz-raw://30b3fe581815f568355b077caefdd5a16badbaf7035af3523fdd950a85d9521d\",\"dweb:/ipfs/QmWrsGgCg7CEHPEAZ8eNjvS6e4s8spGbJumQEqLiQFNXXg\"]},\"project:/contracts/freeportParts/BaseTransferOperator.sol\":{\"keccak256\":\"0xe8917a5d6cd52e4bf22df3b73feb59a335fcd876e8b9d2417b4deefa2814abe9\",\"urls\":[\"bzz-raw://e0641f6cfda01b22c789729ef3297835b40a1bfdf4183731bb2674caa25b74d3\",\"dweb:/ipfs/Qme7PakfbWhFi8ZzcG1FbEb5c7N9teF2kRAgupdAEPt1L7\"]},\"project:/contracts/freeportParts/Currency.sol\":{\"keccak256\":\"0x28ddee1edf53f0c103f6e18abe50932ba5e3b7bb66de383cb5b99204a752905d\",\"urls\":[\"bzz-raw://2a645d04e3597368835fe4015d42dcd040fbcf1d91f114ed1060e82bea48ae28\",\"dweb:/ipfs/QmaFYEoSJmHqjWz8jAGBRKqL4r1CsTVxBPSrT6maSPYL1R\"]},\"project:/contracts/freeportParts/ERC20Adapter.sol\":{\"keccak256\":\"0x7298ad1106ffa5af90d35bf47e214dc28c705f99a3796d644e92b3a492d273b7\",\"urls\":[\"bzz-raw://2ad2298e77090a93310f10e78ba2bfdd5712f2183d662328e197665e1e1d8857\",\"dweb:/ipfs/QmWdotY9DB6a6W2m6qkNKDXeuL7M7Shff45QTii2ktwBUm\"]},\"project:/contracts/freeportParts/HasGlobalNftId.sol\":{\"keccak256\":\"0xbc6d72c04d1a8930602388ce7f5319ee7d47bf45844a373d898f9c315ff120d9\",\"urls\":[\"bzz-raw://0976f6e5257cba430a9bd4a059b752f3f020a2f190884dc72c737f9829e13b1c\",\"dweb:/ipfs/QmY5j8b4THqre1FvofbL28VoWiLG1yhqneDn5KHoYFXTuw\"]},\"project:/contracts/freeportParts/Issuance.sol\":{\"keccak256\":\"0x2ad87f9d53ef79b786e42190971299a4f0e39fb79aee633ca0ab469e9de95bc1\",\"urls\":[\"bzz-raw://c9c3a7f4ea314854a765be29600ca30e5433d4fd28db9185c619471206a2a5df\",\"dweb:/ipfs/QmT3V1DywQ6wkvZ32gH6ai3qQrBYB7XsvYPGMkhWCkbTWt\"]},\"project:/contracts/freeportParts/JointAccounts.sol\":{\"keccak256\":\"0xf35f669c65346b421322355b744f2a071275f298a1fa9a630b7a73df91fdf540\",\"urls\":[\"bzz-raw://7ec2c162ecd046754a762d80eff3c113421bb0c82bc888f1caf50314174d706e\",\"dweb:/ipfs/QmNVdvKAaPwRJLvQBBj381fr1xDhuqD1KFoFDbLDs3z9BQ\"]},\"project:/contracts/freeportParts/MetaTxContext.sol\":{\"keccak256\":\"0xdd37428ab4740cc4cba878f25999c0f94949a1446c2d5ee30d164352a909cc20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95c7a0d9223e6d7ef3cf4cbe2d22db198823c11ffb8ed269a7cd31b1c8ba8e1d\",\"dweb:/ipfs/QmWsD5hNAfT6zktKkUbYrMhF1ZGP8t9cC31jk9mUFSkmgY\"]},\"project:/contracts/freeportParts/OpenSeaCollection.sol\":{\"keccak256\":\"0x2494cfdfc3e3794d0751b841b900f2569659fe8a50b1447de639958016332277\",\"urls\":[\"bzz-raw://2ff0eb563b4bb1997edbfa65233d301721bcb3ace2d462e55f4f9e5e42746996\",\"dweb:/ipfs/QmZ4nj4DeAvf6CXSeWXNXj57CR7qepNGSgUXy6D2ap1sVM\"]},\"project:/contracts/freeportParts/SignatureVerifier.sol\":{\"keccak256\":\"0x2f095e0973db386fb308bb32d9d13e543edf13591e2b060d878543a21771177a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e39731e280fb30afda94e1d64f397face2f6c95f853582c86cf2fdb41210e59d\",\"dweb:/ipfs/QmT2iD8EEkgH7631p3TfViWrebdUYgGVudSU9eYBp4CF6e\"]},\"project:/contracts/freeportParts/SimpleExchange.sol\":{\"keccak256\":\"0x8815647aaba57fe5175439ca22f5cfe7adffdf959cf19f74ad6079b329dc46ba\",\"urls\":[\"bzz-raw://999515bd8f5e71417a672e4426d2b1961bc0a94ffa01c9154f8f4907c0afb15f\",\"dweb:/ipfs/QmfZ2tcZT6LoWVLWyaUGUqUa8wU8bvxpmnnEUERJBuc3g5\"]},\"project:/contracts/freeportParts/TransferFees.sol\":{\"keccak256\":\"0xcb640511c6c8316cc452ec87d9cdc2c74b75dacb01d636e1b94b266f7771ca2d\",\"urls\":[\"bzz-raw://7fd1e06a180dc3995714fd50bba969445a0a1164fd2db6b5407b37edee3eb01a\",\"dweb:/ipfs/QmU75hREyE73AiHioN81T7Sp5z3FFPQx55T7t3nwFwi3uQ\"]},\"project:/contracts/freeportParts/TransferOperator.sol\":{\"keccak256\":\"0x430f18b7e8e7a369ec254705a064d2411fe0fe2cd1ce546baaedd03aa965edc2\",\"urls\":[\"bzz-raw://b4f8a0c647e900ec91c0ea26614b8318fdaf6cfccc9234538b99e31c92ef635f\",\"dweb:/ipfs/QmUASapjiTqxuYC1dp5EmBKjs4Nh9VzaQGbs2CPTokM9TQ\"]},\"project:/contracts/freeportParts/Upgradeable.sol\":{\"keccak256\":\"0x6edf744da7d19533558fd19dd9db50151671d137603363efd2c69c6bad46434a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23dedf9f686f3f736a593d0e3f4b7609c1fe919c969ac82036d1ad68d4c04fdd\",\"dweb:/ipfs/QmU7BcQKJHBVQ91kYacbeUKUC8YBuF2GTrGdrYLBDBzdBi\"]},\"project:/contracts/freeportParts/access_control/WithCollectionManager.sol\":{\"keccak256\":\"0xc23a3f3524fa4a6bfefcc4c2ab0fcf4f76e235f712c9ca0e87ea4972d7ccaf86\",\"urls\":[\"bzz-raw://237a4fc77fc7f0bbec0659f840d1e22ce61cd17ce444eb33247ce51950a8fc77\",\"dweb:/ipfs/QmYBRZwAXV8mRj7VxzFQB5ZzCdveZ8qrWyDBkERWDy8vqM\"]},\"project:/contracts/freeportParts/collections/CollectionIdCounter.sol\":{\"keccak256\":\"0x0c6c3a2816b266d89a266f94caa79e95dfea420df65ad2948da716d94b5bbd13\",\"urls\":[\"bzz-raw://dbc62292f243e3224e93b7cbc1b7804cf3365125b9de03b0f944893562ab5623\",\"dweb:/ipfs/QmeHxjEUkSUmcpNSMmeUE9gpt8SPxVjsrqRq8yYhfK4S2K\"]},\"project:/contracts/freeportParts/collections/CollectionIssuance.sol\":{\"keccak256\":\"0x95b4e8f6d8c4f8117ceec59bc9251d7c41765a0103f6e98963562b74d9a03a24\",\"urls\":[\"bzz-raw://24151806317802cea9334ff0377c9a3fc13df4f27e8bf0d9ede4ffb92a6e098a\",\"dweb:/ipfs/QmUXsJKHor6QUqTqtGtQ322c7vfzWiAWvtydgxWN9jPfXC\"]},\"project:/contracts/freeportParts/collections/CollectionNFTAttachment.sol\":{\"keccak256\":\"0xf7b0e87133a98b7004e273c28ca5423fd236f9734239b377ae61ed70c5cb871e\",\"urls\":[\"bzz-raw://ece9ebfc3ae71d087068d7eff2e6d0faa52801e23d6fb4b6d5a2f4fa68562f01\",\"dweb:/ipfs/QmTqho2u3U9ow62uAc8aefnL6bJBxcA5vU23Y9mdagT5Kr\"]},\"project:/contracts/freeportParts/collections/CollectionRoyalties.sol\":{\"keccak256\":\"0xd95f83da914861b25f75c1023f023964514b2d26c0541f7da8735e082d744a97\",\"urls\":[\"bzz-raw://55629eba3ca832bc0ad489c51cb3695fd8783c8c10c3c5cd6974802686783fea\",\"dweb:/ipfs/QmUNgWWSWZpZN2xh5coCKYo8MdJ5qWBF4tLeiYAiA9E56N\"]},\"project:/contracts/freeportParts/delegators/FreeportDelegator.sol\":{\"keccak256\":\"0xa74dba7088d2f0131a1d81da71e3c37088c1f8dab55508206495e8af6ddd67b8\",\"urls\":[\"bzz-raw://b4927ff56e038f396dfcf052a48c11dec7df0ba3de4d52be284c382a2998ffb4\",\"dweb:/ipfs/QmXdpFL2QkGErE7rxsciFEuivW9igXewr7GfP6EQw2EhGj\"]},\"project:/contracts/freeportParts/delegators/NFTAttachmentDelegator.sol\":{\"keccak256\":\"0x47619ff5b4154666f67e1273466c1cacb594d5fbcd2e42f5373d0b608074b178\",\"urls\":[\"bzz-raw://c72c145c6f674451688a9f9d040e3cc9f8f47f88e4a546845eb0f835e09f0f8b\",\"dweb:/ipfs/QmRZP9ACHgphgYWPzZFogRCEfUXKMbt6eBeDhU8Hn8pPLa\"]},\"project:/contracts/token/ERC1155/ERC1155Upgradeable.sol\":{\"keccak256\":\"0x32d8fc9c637e8aab56e9e9af72b7cb2f84e948588b6dbda1a5c4ba87dc567f05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28d6b5c85322949e2cba4de1a5586b05af9938a59794b4b4d33c1db7a98ccf12\",\"dweb:/ipfs/QmdmDq1gw8qvmELz3uAH2NE6UDnospAEdGRuuynPr1jC6X\"]},\"project:/contracts/utils/cryptography/draft-EIP712Upgradeable.sol\":{\"keccak256\":\"0x00d6daeecaae0a4963565c001ad5ee757e77893c1d38b3e5c87bd9a459332bb9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da7212640f457acb3349c532a555ceab6f350a9016a88a90b910e018c3e4a4f5\",\"dweb:/ipfs/QmbUJYCjpN1J9SHqmWWauTKRTdj4Tm3Bx8dgFP6eyr31Ge\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506117a3806100206000396000f3fe6080604052600436106100ef5760003560e01c806301ffc9a7146100f45780631d250fa9146101295780632210023d1461014b578063248a9ca31461017b578063288809c71461019b5780632f2ff15d146101ca57806336568abe146101ea5780633659cfe61461020a5780634f1ef2861461022a578063572b6c051461023d57806391d148541461025d5780639470ad851461027d5780639a86e8ce146102aa578063a217fddf146102cc578063b85f8ca9146102e1578063c0ba9f5514610301578063c4d66de814610321578063d2e9277b14610341578063d547741f14610362578063f9715b8f14610382575b600080fd5b34801561010057600080fd5b5061011461010f3660046113ad565b6103a2565b60405190151581526020015b60405180910390f35b34801561013557600080fd5b506101496101443660046113ed565b6103d9565b005b34801561015757600080fd5b5061016d60008051602061172e83398151915281565b604051908152602001610120565b34801561018757600080fd5b5061016d610196366004611366565b61057e565b3480156101a757600080fd5b5061016d6101b6366004611463565b60401b63ffffffff60401b163060601b1790565b3480156101d657600080fd5b506101496101e536600461137e565b610593565b3480156101f657600080fd5b5061014961020536600461137e565b6105bc565b34801561021657600080fd5b5061014961022536600461126c565b61064a565b610149610238366004611288565b610671565b34801561024957600080fd5b5061011461025836600461126c565b610686565b34801561026957600080fd5b5061011461027836600461137e565b61069c565b34801561028957600080fd5b5060fb5461029d906001600160a01b031681565b6040516101209190611512565b3480156102b657600080fd5b5061016d60008051602061174e83398151915281565b3480156102d857600080fd5b5061016d600081565b3480156102ed57600080fd5b506101496102fc3660046113ed565b6106c7565b34801561030d57600080fd5b5061014961031c3660046113ed565b610786565b34801561032d57600080fd5b5061014961033c36600461126c565b6108b8565b34801561034d57600080fd5b5061029d61035c366004611366565b60601c90565b34801561036e57600080fd5b5061014961037d36600461137e565b61095a565b34801561038e57600080fd5b5061014961039d3660046113ed565b610979565b60006001600160e01b03198216637965db0b60e01b14806103d357506301ffc9a760e01b6001600160e01b03198316145b92915050565b606083901c604084901c63ffffffff166001600160401b038516801561045c5760405162461bcd60e51b815260206004820152602d60248201527f4e465420666f726d6174206973206e6f7420636f6d70617469626c652077697460448201526c6820436f6c6c656374696f6e7360981b60648201526084015b60405180910390fd5b60006104666109ec565b604051632474521560e21b815260008051602061172e83398151915260048201526001600160a01b038083166024830152919250908516906391d148549060440160206040518083038186803b1580156104bf57600080fd5b505afa1580156104d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f79190611346565b6105435760405162461bcd60e51b815260206004820181905260248201527f73656e646572206973206e6f7420636f6c6c656374696f6e206d616e616765726044820152606401610453565b86816001600160a01b03166000805160206116c7833981519152888860405161056d929190611526565b60405180910390a350505050505050565b600090815260c9602052604090206001015490565b61059c8261057e565b6105ad816105a86109ec565b610a0e565b6105b78383610a72565b505050565b6105c46109ec565b6001600160a01b0316816001600160a01b03161461063c5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610453565b6106468282610af9565b5050565b61065381610b7e565b61066e81604051806020016040528060008152506000610bc2565b50565b61067a82610b7e565b61064682826001610bc2565b60006103d360008051602061174e833981519152835b600091825260c9602090815260408084206001600160a01b0393909316845291905290205460ff1690565b826106e45760405162461bcd60e51b8152600401610453906115d6565b60006106ee6109ec565b905060006106fc8560601c90565b9050806001600160a01b0316826001600160a01b03161461074d5760405162461bcd60e51b815260206004820152600b60248201526a27b7363c9036b4b73a32b960a91b6044820152606401610453565b84826001600160a01b03166000805160206116c78339815191528686604051610777929190611526565b60405180910390a35050505050565b826107a35760405162461bcd60e51b8152600401610453906115d6565b60006107ad6109ec565b60fb54604051627eeac760e11b81526001600160a01b038084166004830152602482018890529293506000929091169062fdd58e9060440160206040518083038186803b1580156107fd57600080fd5b505afa158015610811573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083591906113d5565b90506000811161087c5760405162461bcd60e51b815260206004820152601260248201527127b7363c9031bab93932b73a1037bbb732b960711b6044820152606401610453565b84826001600160a01b03167f70b7e5963956c4cbfbe79063259fc0996d3333c155342ae9110ca45e85995a558686604051610777929190611526565b600054610100900460ff16806108d1575060005460ff16155b6108ed5760405162461bcd60e51b815260040161045390611588565b600054610100900460ff1615801561090f576000805461ffff19166101011790555b610917610d3e565b6001600160a01b03821661092a57600080fd5b60fb80546001600160a01b0319166001600160a01b0384161790558015610646576000805461ff00191690555050565b6109638261057e565b61096f816105a86109ec565b6105b78383610af9565b826109965760405162461bcd60e51b8152600401610453906115d6565b60006109a06109ec565b905083816001600160a01b03167f4d1230ca9d634685a91b90e38709c77299e0c7591f7ac427d6cd88cf0f6114bf85856040516109de929190611526565b60405180910390a350505050565b60006109f733610686565b15610a09575060131936013560601c90565b503390565b610a18828261069c565b61064657610a30816001600160a01b03166014610d48565b610a3b836020610d48565b604051602001610a4c9291906114a3565b60408051601f198184030181529082905262461bcd60e51b825261045391600401611555565b610a7c828261069c565b61064657600082815260c9602090815260408083206001600160a01b03851684529091529020805460ff19166001179055610ab56109ec565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b610b03828261069c565b1561064657600082815260c9602090815260408083206001600160a01b03851684529091529020805460ff19169055610b3a6109ec565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b610b8960003361069c565b61066e5760405162461bcd60e51b815260206004820152600a60248201526927b7363c9020b236b4b760b11b6044820152606401610453565b6000610bcc610f30565b9050610bd784610f4c565b600083511180610be45750815b15610bf557610bf38484610fdf565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff16610d3757805460ff19166001178155604051610c70908690610c41908590602401611512565b60408051601f198184030181529190526020810180516001600160e01b0316631b2ce7f360e11b179052610fdf565b50805460ff19168155610c81610f30565b6001600160a01b0316826001600160a01b031614610cf95760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201526e75727468657220757067726164657360881b6064820152608401610453565b610d0285610f4c565b6040516001600160a01b038616907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a25b5050505050565b610d466110ca565b565b60606000610d5783600261161f565b610d62906002611607565b6001600160401b03811115610d8757634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610db1576020820181803683370190505b509050600360fc1b81600081518110610dda57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610e1757634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000610e3b84600261161f565b610e46906001611607565b90505b6001811115610eda576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610e8857634e487b7160e01b600052603260045260246000fd5b1a60f81b828281518110610eac57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c93610ed38161166e565b9050610e49565b508315610f295760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610453565b9392505050565b6000805160206116e7833981519152546001600160a01b031690565b803b610fb05760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610453565b6000805160206116e783398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060823b61103e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610453565b600080846001600160a01b0316846040516110599190611487565b600060405180830381855af49150503d8060008114611094576040519150601f19603f3d011682016040523d82523d6000602084013e611099565b606091505b50915091506110c18282604051806060016040528060278152602001611707602791396110e5565b95945050505050565b6110d261111e565b6110da611199565b610d466000336111f8565b606083156110f4575081610f29565b8251156111045782518084602001fd5b8160405162461bcd60e51b81526004016104539190611555565b600054610100900460ff1680611137575060005460ff16155b6111535760405162461bcd60e51b815260040161045390611588565b600054610100900460ff16158015611175576000805461ffff19166101011790555b61117d611202565b611185611202565b801561066e576000805461ff001916905550565b600054610100900460ff16806111b2575060005460ff16155b6111ce5760405162461bcd60e51b815260040161045390611588565b600054610100900460ff161580156111f0576000805461ffff19166101011790555b611175611202565b6106468282610a72565b600054610100900460ff168061121b575060005460ff16155b6112375760405162461bcd60e51b815260040161045390611588565b600054610100900460ff16158015611185576000805461ffff1916610101179055801561066e576000805461ff001916905550565b60006020828403121561127d578081fd5b8135610f29816116b1565b6000806040838503121561129a578081fd5b82356112a5816116b1565b915060208301356001600160401b03808211156112c0578283fd5b818501915085601f8301126112d3578283fd5b8135818111156112e5576112e561169b565b604051601f8201601f19908116603f0116810190838211818310171561130d5761130d61169b565b81604052828152886020848701011115611325578586fd5b82602086016020830137856020848301015280955050505050509250929050565b600060208284031215611357578081fd5b81518015158114610f29578182fd5b600060208284031215611377578081fd5b5035919050565b60008060408385031215611390578182fd5b8235915060208301356113a2816116b1565b809150509250929050565b6000602082840312156113be578081fd5b81356001600160e01b031981168114610f29578182fd5b6000602082840312156113e6578081fd5b5051919050565b600080600060408486031215611401578081fd5b8335925060208401356001600160401b038082111561141e578283fd5b818601915086601f830112611431578283fd5b81358181111561143f578384fd5b876020828501011115611450578384fd5b6020830194508093505050509250925092565b600060208284031215611474578081fd5b813563ffffffff81168114610f29578182fd5b6000825161149981846020870161163e565b9190910192915050565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b8152600083516114d581601785016020880161163e565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161150681602884016020880161163e565b01602801949350505050565b6001600160a01b0391909116815260200190565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b602081526000825180602084015261157481604085016020870161163e565b601f01601f19169190910160400192915050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252601790820152760c081a5cc81b9bdd0818481d985b1a5908139195081251604a1b604082015260600190565b6000821982111561161a5761161a611685565b500190565b600081600019048311821515161561163957611639611685565b500290565b60005b83811015611659578181015183820152602001611641565b83811115611668576000848401525b50505050565b60008161167d5761167d611685565b506000190190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461066e57600080fdfe5dc5ea79bba163c4e3f9a2bb5350dbe8490685a9191001c5b4422b37f880d322360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564592c958fd52390f51665f668ae132c07938e885cabed2dc56aba7c2b264880953d2e894c222ba979e2dce2c7d940c0e9bb14306669e9f034eb1bb3979a2069d8a26469706673582212207b01da9c9a89c998e6d6096e52e290a6be8a8e539b4135f1c285c422da27dd9a64736f6c63430008040033",
  "deployedBytecode": "0x6080604052600436106100ef5760003560e01c806301ffc9a7146100f45780631d250fa9146101295780632210023d1461014b578063248a9ca31461017b578063288809c71461019b5780632f2ff15d146101ca57806336568abe146101ea5780633659cfe61461020a5780634f1ef2861461022a578063572b6c051461023d57806391d148541461025d5780639470ad851461027d5780639a86e8ce146102aa578063a217fddf146102cc578063b85f8ca9146102e1578063c0ba9f5514610301578063c4d66de814610321578063d2e9277b14610341578063d547741f14610362578063f9715b8f14610382575b600080fd5b34801561010057600080fd5b5061011461010f3660046113ad565b6103a2565b60405190151581526020015b60405180910390f35b34801561013557600080fd5b506101496101443660046113ed565b6103d9565b005b34801561015757600080fd5b5061016d60008051602061172e83398151915281565b604051908152602001610120565b34801561018757600080fd5b5061016d610196366004611366565b61057e565b3480156101a757600080fd5b5061016d6101b6366004611463565b60401b63ffffffff60401b163060601b1790565b3480156101d657600080fd5b506101496101e536600461137e565b610593565b3480156101f657600080fd5b5061014961020536600461137e565b6105bc565b34801561021657600080fd5b5061014961022536600461126c565b61064a565b610149610238366004611288565b610671565b34801561024957600080fd5b5061011461025836600461126c565b610686565b34801561026957600080fd5b5061011461027836600461137e565b61069c565b34801561028957600080fd5b5060fb5461029d906001600160a01b031681565b6040516101209190611512565b3480156102b657600080fd5b5061016d60008051602061174e83398151915281565b3480156102d857600080fd5b5061016d600081565b3480156102ed57600080fd5b506101496102fc3660046113ed565b6106c7565b34801561030d57600080fd5b5061014961031c3660046113ed565b610786565b34801561032d57600080fd5b5061014961033c36600461126c565b6108b8565b34801561034d57600080fd5b5061029d61035c366004611366565b60601c90565b34801561036e57600080fd5b5061014961037d36600461137e565b61095a565b34801561038e57600080fd5b5061014961039d3660046113ed565b610979565b60006001600160e01b03198216637965db0b60e01b14806103d357506301ffc9a760e01b6001600160e01b03198316145b92915050565b606083901c604084901c63ffffffff166001600160401b038516801561045c5760405162461bcd60e51b815260206004820152602d60248201527f4e465420666f726d6174206973206e6f7420636f6d70617469626c652077697460448201526c6820436f6c6c656374696f6e7360981b60648201526084015b60405180910390fd5b60006104666109ec565b604051632474521560e21b815260008051602061172e83398151915260048201526001600160a01b038083166024830152919250908516906391d148549060440160206040518083038186803b1580156104bf57600080fd5b505afa1580156104d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f79190611346565b6105435760405162461bcd60e51b815260206004820181905260248201527f73656e646572206973206e6f7420636f6c6c656374696f6e206d616e616765726044820152606401610453565b86816001600160a01b03166000805160206116c7833981519152888860405161056d929190611526565b60405180910390a350505050505050565b600090815260c9602052604090206001015490565b61059c8261057e565b6105ad816105a86109ec565b610a0e565b6105b78383610a72565b505050565b6105c46109ec565b6001600160a01b0316816001600160a01b03161461063c5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610453565b6106468282610af9565b5050565b61065381610b7e565b61066e81604051806020016040528060008152506000610bc2565b50565b61067a82610b7e565b61064682826001610bc2565b60006103d360008051602061174e833981519152835b600091825260c9602090815260408084206001600160a01b0393909316845291905290205460ff1690565b826106e45760405162461bcd60e51b8152600401610453906115d6565b60006106ee6109ec565b905060006106fc8560601c90565b9050806001600160a01b0316826001600160a01b03161461074d5760405162461bcd60e51b815260206004820152600b60248201526a27b7363c9036b4b73a32b960a91b6044820152606401610453565b84826001600160a01b03166000805160206116c78339815191528686604051610777929190611526565b60405180910390a35050505050565b826107a35760405162461bcd60e51b8152600401610453906115d6565b60006107ad6109ec565b60fb54604051627eeac760e11b81526001600160a01b038084166004830152602482018890529293506000929091169062fdd58e9060440160206040518083038186803b1580156107fd57600080fd5b505afa158015610811573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083591906113d5565b90506000811161087c5760405162461bcd60e51b815260206004820152601260248201527127b7363c9031bab93932b73a1037bbb732b960711b6044820152606401610453565b84826001600160a01b03167f70b7e5963956c4cbfbe79063259fc0996d3333c155342ae9110ca45e85995a558686604051610777929190611526565b600054610100900460ff16806108d1575060005460ff16155b6108ed5760405162461bcd60e51b815260040161045390611588565b600054610100900460ff1615801561090f576000805461ffff19166101011790555b610917610d3e565b6001600160a01b03821661092a57600080fd5b60fb80546001600160a01b0319166001600160a01b0384161790558015610646576000805461ff00191690555050565b6109638261057e565b61096f816105a86109ec565b6105b78383610af9565b826109965760405162461bcd60e51b8152600401610453906115d6565b60006109a06109ec565b905083816001600160a01b03167f4d1230ca9d634685a91b90e38709c77299e0c7591f7ac427d6cd88cf0f6114bf85856040516109de929190611526565b60405180910390a350505050565b60006109f733610686565b15610a09575060131936013560601c90565b503390565b610a18828261069c565b61064657610a30816001600160a01b03166014610d48565b610a3b836020610d48565b604051602001610a4c9291906114a3565b60408051601f198184030181529082905262461bcd60e51b825261045391600401611555565b610a7c828261069c565b61064657600082815260c9602090815260408083206001600160a01b03851684529091529020805460ff19166001179055610ab56109ec565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b610b03828261069c565b1561064657600082815260c9602090815260408083206001600160a01b03851684529091529020805460ff19169055610b3a6109ec565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b610b8960003361069c565b61066e5760405162461bcd60e51b815260206004820152600a60248201526927b7363c9020b236b4b760b11b6044820152606401610453565b6000610bcc610f30565b9050610bd784610f4c565b600083511180610be45750815b15610bf557610bf38484610fdf565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff16610d3757805460ff19166001178155604051610c70908690610c41908590602401611512565b60408051601f198184030181529190526020810180516001600160e01b0316631b2ce7f360e11b179052610fdf565b50805460ff19168155610c81610f30565b6001600160a01b0316826001600160a01b031614610cf95760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201526e75727468657220757067726164657360881b6064820152608401610453565b610d0285610f4c565b6040516001600160a01b038616907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a25b5050505050565b610d466110ca565b565b60606000610d5783600261161f565b610d62906002611607565b6001600160401b03811115610d8757634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610db1576020820181803683370190505b509050600360fc1b81600081518110610dda57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610e1757634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000610e3b84600261161f565b610e46906001611607565b90505b6001811115610eda576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610e8857634e487b7160e01b600052603260045260246000fd5b1a60f81b828281518110610eac57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c93610ed38161166e565b9050610e49565b508315610f295760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610453565b9392505050565b6000805160206116e7833981519152546001600160a01b031690565b803b610fb05760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610453565b6000805160206116e783398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060823b61103e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610453565b600080846001600160a01b0316846040516110599190611487565b600060405180830381855af49150503d8060008114611094576040519150601f19603f3d011682016040523d82523d6000602084013e611099565b606091505b50915091506110c18282604051806060016040528060278152602001611707602791396110e5565b95945050505050565b6110d261111e565b6110da611199565b610d466000336111f8565b606083156110f4575081610f29565b8251156111045782518084602001fd5b8160405162461bcd60e51b81526004016104539190611555565b600054610100900460ff1680611137575060005460ff16155b6111535760405162461bcd60e51b815260040161045390611588565b600054610100900460ff16158015611175576000805461ffff19166101011790555b61117d611202565b611185611202565b801561066e576000805461ff001916905550565b600054610100900460ff16806111b2575060005460ff16155b6111ce5760405162461bcd60e51b815260040161045390611588565b600054610100900460ff161580156111f0576000805461ffff19166101011790555b611175611202565b6106468282610a72565b600054610100900460ff168061121b575060005460ff16155b6112375760405162461bcd60e51b815260040161045390611588565b600054610100900460ff16158015611185576000805461ffff1916610101179055801561066e576000805461ff001916905550565b60006020828403121561127d578081fd5b8135610f29816116b1565b6000806040838503121561129a578081fd5b82356112a5816116b1565b915060208301356001600160401b03808211156112c0578283fd5b818501915085601f8301126112d3578283fd5b8135818111156112e5576112e561169b565b604051601f8201601f19908116603f0116810190838211818310171561130d5761130d61169b565b81604052828152886020848701011115611325578586fd5b82602086016020830137856020848301015280955050505050509250929050565b600060208284031215611357578081fd5b81518015158114610f29578182fd5b600060208284031215611377578081fd5b5035919050565b60008060408385031215611390578182fd5b8235915060208301356113a2816116b1565b809150509250929050565b6000602082840312156113be578081fd5b81356001600160e01b031981168114610f29578182fd5b6000602082840312156113e6578081fd5b5051919050565b600080600060408486031215611401578081fd5b8335925060208401356001600160401b038082111561141e578283fd5b818601915086601f830112611431578283fd5b81358181111561143f578384fd5b876020828501011115611450578384fd5b6020830194508093505050509250925092565b600060208284031215611474578081fd5b813563ffffffff81168114610f29578182fd5b6000825161149981846020870161163e565b9190910192915050565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b8152600083516114d581601785016020880161163e565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161150681602884016020880161163e565b01602801949350505050565b6001600160a01b0391909116815260200190565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b602081526000825180602084015261157481604085016020870161163e565b601f01601f19169190910160400192915050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252601790820152760c081a5cc81b9bdd0818481d985b1a5908139195081251604a1b604082015260600190565b6000821982111561161a5761161a611685565b500190565b600081600019048311821515161561163957611639611685565b500290565b60005b83811015611659578181015183820152602001611641565b83811115611668576000848401525b50505050565b60008161167d5761167d611685565b506000190190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461066e57600080fdfe5dc5ea79bba163c4e3f9a2bb5350dbe8490685a9191001c5b4422b37f880d322360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564592c958fd52390f51665f668ae132c07938e885cabed2dc56aba7c2b264880953d2e894c222ba979e2dce2c7d940c0e9bb14306669e9f034eb1bb3979a2069d8a26469706673582212207b01da9c9a89c998e6d6096e52e290a6be8a8e539b4135f1c285c422da27dd9a64736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:13298:65",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:65",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:187:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:65"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:65"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "165:36:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "191:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "178:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "178:23:65"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "169:5:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "235:5:65"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "210:24:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:31:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "210:31:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "250:15:65",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "260:5:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "250:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:65",
                "type": ""
              }
            ],
            "src": "14:257:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "372:1005:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "418:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "427:6:65"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "435:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "420:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "420:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "420:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "393:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "402:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "389:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "389:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "414:2:65",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "385:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "385:32:65"
                  },
                  "nodeType": "YulIf",
                  "src": "382:2:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "453:36:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "479:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "466:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "466:23:65"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "457:5:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "523:5:65"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "498:24:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "498:31:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "498:31:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "538:15:65",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "548:5:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "538:6:65"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "562:46:65",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "593:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "604:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "589:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "589:18:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "576:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "576:32:65"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "566:6:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "617:28:65",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "635:2:65",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "639:1:65",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "631:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:10:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "643:1:65",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "627:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "627:18:65"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "621:2:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "672:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "681:6:65"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "689:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "674:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "674:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "674:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "660:6:65"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "668:2:65"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "657:2:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "657:14:65"
                  },
                  "nodeType": "YulIf",
                  "src": "654:2:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "707:32:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "721:9:65"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "732:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "717:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "717:22:65"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "711:2:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "787:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "796:6:65"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "804:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "789:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "789:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "789:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "766:2:65"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "770:4:65",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "762:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "762:13:65"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "777:7:65"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "758:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "758:27:65"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "751:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "751:35:65"
                  },
                  "nodeType": "YulIf",
                  "src": "748:2:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "822:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "845:2:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "832:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "832:16:65"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "826:2:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "871:22:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "873:16:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "873:18:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "873:18:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "863:2:65"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "867:2:65"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "860:2:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "860:10:65"
                  },
                  "nodeType": "YulIf",
                  "src": "857:2:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "902:17:65",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "916:2:65",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "912:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "912:7:65"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "906:2:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "928:23:65",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "948:2:65",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "942:5:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "942:9:65"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "932:6:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "960:71:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "982:6:65"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "1006:2:65"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1010:4:65",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1002:3:65"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1002:13:65"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1017:2:65"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "998:3:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "998:22:65"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1022:2:65",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "994:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "994:31:65"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "1027:2:65"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "990:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "990:40:65"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "978:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "978:53:65"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "964:10:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1090:22:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1092:16:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1092:18:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1092:18:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1049:10:65"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1061:2:65"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1046:2:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1046:18:65"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1069:10:65"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1081:6:65"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1066:2:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1066:22:65"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1043:2:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1043:46:65"
                  },
                  "nodeType": "YulIf",
                  "src": "1040:2:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1128:2:65",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1132:10:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1121:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1121:22:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1121:22:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1159:6:65"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1167:2:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1152:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1152:18:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1152:18:65"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1216:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1225:6:65"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1233:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1218:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1218:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1218:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1193:2:65"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1197:2:65"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1189:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1189:11:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1202:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1185:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1185:20:65"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1207:7:65"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1182:2:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1182:33:65"
                  },
                  "nodeType": "YulIf",
                  "src": "1179:2:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1268:6:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1276:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1264:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1264:15:65"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1285:2:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1289:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1281:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1281:11:65"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1294:2:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "1251:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1251:46:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1251:46:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1321:6:65"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1329:2:65"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1317:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1317:15:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1334:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1313:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1313:24:65"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1339:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1306:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1306:40:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1306:40:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1355:16:65",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1365:6:65"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1355:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "330:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "341:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "353:6:65",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "361:6:65",
                "type": ""
              }
            ],
            "src": "276:1101:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1460:219:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1506:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1515:6:65"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1523:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1508:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1508:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1508:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1481:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1490:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1477:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1477:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1502:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1473:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1473:32:65"
                  },
                  "nodeType": "YulIf",
                  "src": "1470:2:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1541:29:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1560:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1554:5:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1554:16:65"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1545:5:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1623:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1632:6:65"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1640:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1625:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1625:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1625:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1592:5:65"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1613:5:65"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1606:6:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1606:13:65"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1599:6:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1599:21:65"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1589:2:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1589:32:65"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1582:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1582:40:65"
                  },
                  "nodeType": "YulIf",
                  "src": "1579:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1658:15:65",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1668:5:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1658:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1426:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1437:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1449:6:65",
                "type": ""
              }
            ],
            "src": "1382:297:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1754:120:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1800:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1809:6:65"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1817:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1802:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1802:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1802:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1775:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1784:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1771:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1771:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1796:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1767:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1767:32:65"
                  },
                  "nodeType": "YulIf",
                  "src": "1764:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1835:33:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1858:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1845:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1845:23:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1835:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1720:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1731:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1743:6:65",
                "type": ""
              }
            ],
            "src": "1684:190:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1966:238:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2012:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2021:6:65"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2029:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2014:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2014:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2014:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1987:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1996:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1983:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1983:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2008:2:65",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1979:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1979:32:65"
                  },
                  "nodeType": "YulIf",
                  "src": "1976:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2047:33:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2070:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2057:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2057:23:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2047:6:65"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2089:45:65",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2119:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2130:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2115:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2115:18:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2102:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2102:32:65"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2093:5:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2168:5:65"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2143:24:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2143:31:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2143:31:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2183:15:65",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2193:5:65"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2183:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1924:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1935:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1947:6:65",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1955:6:65",
                "type": ""
              }
            ],
            "src": "1879:325:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2278:237:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2324:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2333:6:65"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2341:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2326:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2326:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2326:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2299:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2308:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2295:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2295:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2320:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2291:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2291:32:65"
                  },
                  "nodeType": "YulIf",
                  "src": "2288:2:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2359:36:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2385:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2372:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2372:23:65"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2363:5:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2459:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2468:6:65"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2476:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2461:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2461:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2461:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2417:5:65"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2428:5:65"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2439:3:65",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2444:10:65",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2435:3:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2435:20:65"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2424:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2424:32:65"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2414:2:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2414:43:65"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2407:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2407:51:65"
                  },
                  "nodeType": "YulIf",
                  "src": "2404:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2494:15:65",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2504:5:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2494:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2244:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2255:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2267:6:65",
                "type": ""
              }
            ],
            "src": "2209:306:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2607:187:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2653:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2662:6:65"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2670:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2655:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2655:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2655:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2628:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2637:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2624:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2624:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2649:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2620:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2620:32:65"
                  },
                  "nodeType": "YulIf",
                  "src": "2617:2:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2688:36:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2714:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2701:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2701:23:65"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2692:5:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2758:5:65"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2733:24:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2733:31:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2733:31:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2773:15:65",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2783:5:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2773:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_Freeport_$5574",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2573:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2584:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2596:6:65",
                "type": ""
              }
            ],
            "src": "2520:274:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2869:120:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2915:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2924:6:65"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2932:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2917:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2917:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2917:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2890:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2899:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2886:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2886:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2911:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2882:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2882:32:65"
                  },
                  "nodeType": "YulIf",
                  "src": "2879:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2950:33:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2973:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2960:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2960:23:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2950:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2835:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2846:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2858:6:65",
                "type": ""
              }
            ],
            "src": "2799:190:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3075:113:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3121:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3130:6:65"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3138:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3123:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3123:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3123:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3096:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3105:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3092:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3092:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3117:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3088:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3088:32:65"
                  },
                  "nodeType": "YulIf",
                  "src": "3085:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3156:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3172:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3166:5:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3166:16:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3156:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3041:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3052:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3064:6:65",
                "type": ""
              }
            ],
            "src": "2994:194:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3299:603:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3345:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "3354:6:65"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "3362:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3347:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3347:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3347:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3320:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3329:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3316:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3316:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3341:2:65",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3312:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3312:32:65"
                  },
                  "nodeType": "YulIf",
                  "src": "3309:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3380:33:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3403:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3390:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3390:23:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3380:6:65"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3422:46:65",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3453:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3464:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3449:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3449:18:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3436:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3436:32:65"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "3426:6:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3477:28:65",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3495:2:65",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3499:1:65",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3491:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3491:10:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3503:1:65",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3487:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3487:18:65"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3481:2:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3532:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "3541:6:65"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "3549:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3534:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3534:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3534:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3520:6:65"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3528:2:65"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3517:2:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3517:14:65"
                  },
                  "nodeType": "YulIf",
                  "src": "3514:2:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3567:32:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3581:9:65"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3592:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3577:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3577:22:65"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "3571:2:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3647:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "3656:6:65"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "3664:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3649:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3649:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3649:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "3626:2:65"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3630:4:65",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3622:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3622:13:65"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3637:7:65"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3618:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3618:27:65"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3611:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3611:35:65"
                  },
                  "nodeType": "YulIf",
                  "src": "3608:2:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3682:30:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "3709:2:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3696:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3696:16:65"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3686:6:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3739:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "3748:6:65"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "3756:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3741:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3741:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3741:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3727:6:65"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3735:2:65"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3724:2:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3724:14:65"
                  },
                  "nodeType": "YulIf",
                  "src": "3721:2:65"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3815:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "3824:6:65"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "3832:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3817:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3817:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3817:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "3788:2:65"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "3792:6:65"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3784:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3784:15:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3801:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3780:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3780:24:65"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3806:7:65"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3777:2:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3777:37:65"
                  },
                  "nodeType": "YulIf",
                  "src": "3774:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3850:21:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "3864:2:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3868:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3860:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3860:11:65"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3850:6:65"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3880:16:65",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "3890:6:65"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3880:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3249:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3260:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3272:6:65",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3280:6:65",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3288:6:65",
                "type": ""
              }
            ],
            "src": "3193:709:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3976:227:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4022:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4031:6:65"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4039:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4024:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4024:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4024:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3997:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4006:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3993:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3993:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4018:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3989:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3989:32:65"
                  },
                  "nodeType": "YulIf",
                  "src": "3986:2:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4057:36:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4083:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4070:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4070:23:65"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4061:5:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4147:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4156:6:65"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4164:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4149:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4149:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4149:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4115:5:65"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4126:5:65"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4133:10:65",
                                "type": "",
                                "value": "0xffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4122:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4122:22:65"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4112:2:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4112:33:65"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4105:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4105:41:65"
                  },
                  "nodeType": "YulIf",
                  "src": "4102:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4182:15:65",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4192:5:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4182:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3942:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3953:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3965:6:65",
                "type": ""
              }
            ],
            "src": "3907:296:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4345:137:65",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4355:27:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4375:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4369:5:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4369:13:65"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4359:6:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4417:6:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4425:4:65",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4413:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4413:17:65"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4432:3:65"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4437:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "4391:21:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4391:53:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4391:53:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4453:23:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4464:3:65"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4469:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4460:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4460:16:65"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4453:3:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4321:3:65",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4326:6:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4337:3:65",
                "type": ""
              }
            ],
            "src": "4208:274:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4876:397:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4893:3:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4898:25:65",
                        "type": "",
                        "value": "AccessControl: account "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4886:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4886:38:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4886:38:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4933:27:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4953:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4947:5:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4947:13:65"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4937:6:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4995:6:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5003:4:65",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4991:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4991:17:65"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5014:3:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5019:2:65",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5010:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5010:12:65"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5024:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "4969:21:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4969:62:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4969:62:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5040:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5054:3:65"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5059:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5050:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5050:16:65"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5044:2:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5086:2:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5090:2:65",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5082:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5082:11:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5095:19:65",
                        "type": "",
                        "value": " is missing role "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5075:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5075:40:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5075:40:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5124:29:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5146:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5140:5:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5140:13:65"
                  },
                  "variables": [
                    {
                      "name": "length_1",
                      "nodeType": "YulTypedName",
                      "src": "5128:8:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "5188:6:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5196:4:65",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5184:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5184:17:65"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5207:2:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5211:2:65",
                            "type": "",
                            "value": "40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5203:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5203:11:65"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "5216:8:65"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "5162:21:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5162:63:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5162:63:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5234:33:65",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5249:2:65"
                          },
                          {
                            "name": "length_1",
                            "nodeType": "YulIdentifier",
                            "src": "5253:8:65"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5245:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5245:17:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5264:2:65",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5241:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5241:26:65"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5234:3:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4844:3:65",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4849:6:65",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4857:6:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4868:3:65",
                "type": ""
              }
            ],
            "src": "4487:786:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5379:102:65",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5389:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5401:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5412:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5397:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5397:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5389:4:65"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5431:9:65"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5446:6:65"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5462:3:65",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5467:1:65",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "5458:3:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5458:11:65"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5471:1:65",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5454:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5454:19:65"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5442:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5442:32:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5424:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5424:51:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5424:51:65"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5348:9:65",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5359:6:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5370:4:65",
                "type": ""
              }
            ],
            "src": "5278:203:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5615:145:65",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5625:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5637:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5648:2:65",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5633:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5633:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5625:4:65"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5667:9:65"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5682:6:65"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5698:3:65",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5703:1:65",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "5694:3:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5694:11:65"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5707:1:65",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5690:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5690:19:65"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5678:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5678:32:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5660:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5660:51:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5660:51:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5731:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5742:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5727:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5727:18:65"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5747:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5720:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5720:34:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5720:34:65"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5576:9:65",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5587:6:65",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5595:6:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5606:4:65",
                "type": ""
              }
            ],
            "src": "5486:274:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5860:92:65",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5870:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5882:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5893:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5878:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5878:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5870:4:65"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5912:9:65"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5937:6:65"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5930:6:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5930:14:65"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5923:6:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5923:22:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5905:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5905:41:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5905:41:65"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5829:9:65",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5840:6:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5851:4:65",
                "type": ""
              }
            ],
            "src": "5765:187:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6058:76:65",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6068:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6080:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6091:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6076:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6076:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6068:4:65"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6110:9:65"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6121:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6103:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6103:25:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6103:25:65"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6027:9:65",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6038:6:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6049:4:65",
                "type": ""
              }
            ],
            "src": "5957:177:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6268:145:65",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6278:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6290:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6301:2:65",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6286:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6286:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6278:4:65"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6320:9:65"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6331:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6313:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6313:25:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6313:25:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6358:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6369:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6354:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6354:18:65"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "6378:6:65"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6394:3:65",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6399:1:65",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "6390:3:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6390:11:65"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6403:1:65",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "6386:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6386:19:65"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6374:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6374:32:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6347:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6347:60:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6347:60:65"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6229:9:65",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6240:6:65",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6248:6:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6259:4:65",
                "type": ""
              }
            ],
            "src": "6139:274:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6547:262:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6564:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6575:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6557:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6557:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6557:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6598:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6609:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6594:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6594:18:65"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6614:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6587:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6587:34:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6587:34:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6647:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6658:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6643:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6643:18:65"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6663:6:65"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6671:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "6630:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6630:48:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6630:48:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6702:9:65"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "6713:6:65"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6698:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6698:22:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6722:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6694:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6694:31:65"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6727:4:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6687:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6687:45:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6687:45:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6741:62:65",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6757:9:65"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "6776:6:65"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6784:2:65",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6772:3:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6772:15:65"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6793:2:65",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "6789:3:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6789:7:65"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "6768:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6768:29:65"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6753:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6753:45:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6800:2:65",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6749:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6749:54:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6741:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6508:9:65",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6519:6:65",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6527:6:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6538:4:65",
                "type": ""
              }
            ],
            "src": "6418:391:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6932:102:65",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6942:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6954:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6965:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6950:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6950:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6942:4:65"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6984:9:65"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6999:6:65"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7015:3:65",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7020:1:65",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "7011:3:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7011:11:65"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7024:1:65",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "7007:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7007:19:65"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6995:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6995:32:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6977:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6977:51:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6977:51:65"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Freeport_$5574__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6901:9:65",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6912:6:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6923:4:65",
                "type": ""
              }
            ],
            "src": "6814:220:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7160:262:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7177:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7188:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7170:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7170:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7170:21:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7200:27:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7220:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7214:5:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7214:13:65"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "7204:6:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7247:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7258:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7243:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7243:18:65"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7263:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7236:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7236:34:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7236:34:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7305:6:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7313:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7301:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7301:15:65"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7322:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7333:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7318:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7318:18:65"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7338:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "7279:21:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7279:66:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7279:66:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7354:62:65",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7370:9:65"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "7389:6:65"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7397:2:65",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7385:3:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7385:15:65"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7406:2:65",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "7402:3:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7402:7:65"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "7381:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7381:29:65"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7366:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7366:45:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7413:2:65",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7362:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7362:54:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7354:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7129:9:65",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7140:6:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7151:4:65",
                "type": ""
              }
            ],
            "src": "7039:383:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7601:182:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7618:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7629:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7611:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7611:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7611:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7652:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7663:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7648:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7648:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7668:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7641:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7641:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7641:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7691:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7702:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7687:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7687:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7707:34:65",
                        "type": "",
                        "value": "Strings: hex length insufficient"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7680:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7680:62:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7680:62:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7751:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7763:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7774:2:65",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7759:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7759:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7751:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7578:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7592:4:65",
                "type": ""
              }
            ],
            "src": "7427:356:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7962:168:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7979:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7990:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7972:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7972:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7972:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8013:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8024:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8009:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8009:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8029:2:65",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8002:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8002:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8002:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8052:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8063:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8048:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8048:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8068:20:65",
                        "type": "",
                        "value": "Only current owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8041:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8041:48:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8041:48:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8098:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8110:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8121:2:65",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8106:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8106:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8098:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_111b7c5d2b16684041cedd75c064e2306dd9ae18e93fc76a7b5be4886458a40b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7939:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7953:4:65",
                "type": ""
              }
            ],
            "src": "7788:342:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8309:237:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8326:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8337:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8319:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8319:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8319:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8360:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8371:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8356:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8356:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8376:2:65",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8349:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8349:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8349:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8399:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8410:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8395:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8395:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8415:34:65",
                        "type": "",
                        "value": "ERC1967Upgrade: upgrade breaks f"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8388:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8388:62:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8388:62:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8470:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8481:2:65",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8466:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8466:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8486:17:65",
                        "type": "",
                        "value": "urther upgrades"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8459:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8459:45:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8459:45:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8513:27:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8525:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8536:3:65",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8521:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8521:19:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8513:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2425ea74e68e4bcd365d89824a06e1475543dcbb6a12bf699e5abf6b11b9b6ed__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8286:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8300:4:65",
                "type": ""
              }
            ],
            "src": "8135:411:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8725:235:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8742:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8753:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8735:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8735:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8735:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8776:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8787:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8772:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8772:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8792:2:65",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8765:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8765:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8765:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8815:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8826:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8811:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8811:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8831:34:65",
                        "type": "",
                        "value": "NFT format is not compatible wit"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8804:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8804:62:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8804:62:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8886:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8897:2:65",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8882:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8882:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8902:15:65",
                        "type": "",
                        "value": "h Collections"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8875:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8875:43:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8875:43:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8927:27:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8939:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8950:3:65",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8935:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8935:19:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8927:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_50d498e1bffeddda2687492473fae8648f1dd5f3e06221a4b00d5d69c75de74f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8702:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8716:4:65",
                "type": ""
              }
            ],
            "src": "8551:409:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9139:161:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9156:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9167:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9149:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9149:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9149:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9190:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9201:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9186:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9186:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9206:2:65",
                        "type": "",
                        "value": "11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9179:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9179:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9179:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9229:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9240:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9225:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9225:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9245:13:65",
                        "type": "",
                        "value": "Only minter"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9218:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9218:41:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9218:41:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9268:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9280:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9291:2:65",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9276:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9276:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9268:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_578cb4a41adb75340d2cbfbdb0c6610ff4519d15e645cc9b4cc4c64336da99c6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9116:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9130:4:65",
                "type": ""
              }
            ],
            "src": "8965:335:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9479:236:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9496:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9507:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9489:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9489:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9489:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9530:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9541:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9526:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9526:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9546:2:65",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9519:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9519:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9519:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9569:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9580:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9565:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9565:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9585:34:65",
                        "type": "",
                        "value": "Initializable: contract is alrea"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9558:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9558:62:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9558:62:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9640:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9651:2:65",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9636:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9636:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9656:16:65",
                        "type": "",
                        "value": "dy initialized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9629:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9629:44:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9629:44:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9682:27:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9694:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9705:3:65",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9690:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9690:19:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9682:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9456:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9470:4:65",
                "type": ""
              }
            ],
            "src": "9305:410:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9894:235:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9911:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9922:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9904:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9904:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9904:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9945:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9956:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9941:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9941:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9961:2:65",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9934:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9934:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9934:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9984:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9995:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9980:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9980:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10000:34:65",
                        "type": "",
                        "value": "ERC1967: new implementation is n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9973:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9973:62:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9973:62:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10055:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10066:2:65",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10051:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10051:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10071:15:65",
                        "type": "",
                        "value": "ot a contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10044:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10044:43:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10044:43:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10096:27:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10108:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10119:3:65",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10104:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10104:19:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10096:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9871:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9885:4:65",
                "type": ""
              }
            ],
            "src": "9720:409:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10308:173:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10325:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10336:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10318:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10318:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10318:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10359:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10370:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10355:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10355:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10375:2:65",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10348:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10348:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10348:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10398:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10409:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10394:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10394:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10414:25:65",
                        "type": "",
                        "value": "0 is not a valid NFT ID"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10387:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10387:53:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10387:53:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10449:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10461:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10472:2:65",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10457:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10457:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10449:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10285:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10299:4:65",
                "type": ""
              }
            ],
            "src": "10134:347:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10660:228:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10677:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10688:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10670:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10670:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10670:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10711:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10722:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10707:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10707:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10727:2:65",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10700:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10700:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10700:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10750:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10761:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10746:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10746:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10766:34:65",
                        "type": "",
                        "value": "Address: delegate call to non-co"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10739:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10739:62:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10739:62:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10821:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10832:2:65",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10817:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10817:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10837:8:65",
                        "type": "",
                        "value": "ntract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10810:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10810:36:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10810:36:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10855:27:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10867:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10878:3:65",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10863:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10863:19:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10855:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10637:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10651:4:65",
                "type": ""
              }
            ],
            "src": "10486:402:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11067:160:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11084:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11095:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11077:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11077:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11077:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11118:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11129:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11114:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11114:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11134:2:65",
                        "type": "",
                        "value": "10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11107:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11107:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11107:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11157:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11168:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11153:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11153:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11173:12:65",
                        "type": "",
                        "value": "Only Admin"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11146:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11146:40:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11146:40:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11195:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11207:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11218:2:65",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11203:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11203:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11195:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c13c296baebb1f79b18541a06c39b3d56ce1654fd26fe72a62e2fb7efe67be9a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11044:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11058:4:65",
                "type": ""
              }
            ],
            "src": "10893:334:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11406:182:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11423:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11434:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11416:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11416:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11416:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11457:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11468:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11453:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11453:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11473:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11446:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11446:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11446:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11496:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11507:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11492:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11492:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11512:34:65",
                        "type": "",
                        "value": "sender is not collection manager"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11485:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11485:62:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11485:62:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11556:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11568:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11579:2:65",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11564:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11564:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11556:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c185758ad32283425b0465b5186ef5621a0f09a62aaaa687db5199ecbad2dafa__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11383:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11397:4:65",
                "type": ""
              }
            ],
            "src": "11232:356:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11767:237:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11784:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11795:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11777:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11777:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11777:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11818:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11829:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11814:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11814:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11834:2:65",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11807:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11807:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11807:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11857:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11868:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11853:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11853:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11873:34:65",
                        "type": "",
                        "value": "AccessControl: can only renounce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11846:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11846:62:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11846:62:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11928:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11939:2:65",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11924:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11924:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11944:17:65",
                        "type": "",
                        "value": " roles for self"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11917:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11917:45:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11917:45:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11971:27:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11983:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11994:3:65",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11979:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11979:19:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11971:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11744:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11758:4:65",
                "type": ""
              }
            ],
            "src": "11593:411:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12110:76:65",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12120:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12132:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12143:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12128:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12128:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12120:4:65"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12162:9:65"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12173:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12155:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12155:25:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12155:25:65"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12079:9:65",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12090:6:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12101:4:65",
                "type": ""
              }
            ],
            "src": "12009:177:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12239:80:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12266:22:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12268:16:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12268:18:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12268:18:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12255:1:65"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "12262:1:65"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "12258:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12258:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "12252:2:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12252:13:65"
                  },
                  "nodeType": "YulIf",
                  "src": "12249:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12297:16:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12308:1:65"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12311:1:65"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12304:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12304:9:65"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "12297:3:65"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "12222:1:65",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "12225:1:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "12231:3:65",
                "type": ""
              }
            ],
            "src": "12191:128:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12376:116:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12435:22:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12437:16:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12437:18:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12437:18:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "12407:1:65"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "12400:6:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12400:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "12393:6:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12393:17:65"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "12415:1:65"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12426:1:65",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "12422:3:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12422:6:65"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "12430:1:65"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "12418:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12418:14:65"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "12412:2:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12412:21:65"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "12389:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12389:45:65"
                  },
                  "nodeType": "YulIf",
                  "src": "12386:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12466:20:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12481:1:65"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12484:1:65"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "12477:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12477:9:65"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "12466:7:65"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "12355:1:65",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "12358:1:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "12364:7:65",
                "type": ""
              }
            ],
            "src": "12324:168:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12550:205:65",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12560:10:65",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "12569:1:65",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "12564:1:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12629:63:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "12654:3:65"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "12659:1:65"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "12650:3:65"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12650:11:65"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "12673:3:65"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "12678:1:65"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "12669:3:65"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "12669:11:65"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "12663:5:65"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12663:18:65"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "12643:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12643:39:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12643:39:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "12590:1:65"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "12593:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "12587:2:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12587:13:65"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "12601:19:65",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "12603:15:65",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "12612:1:65"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12615:2:65",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "12608:3:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12608:10:65"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "12603:1:65"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "12583:3:65",
                    "statements": []
                  },
                  "src": "12579:113:65"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12718:31:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "12731:3:65"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "12736:6:65"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "12727:3:65"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12727:16:65"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12745:1:65",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "12720:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12720:27:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12720:27:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "12707:1:65"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "12710:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "12704:2:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12704:13:65"
                  },
                  "nodeType": "YulIf",
                  "src": "12701:2:65"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "12528:3:65",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "12533:3:65",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "12538:6:65",
                "type": ""
              }
            ],
            "src": "12497:258:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12807:89:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12834:22:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12836:16:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12836:18:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12836:18:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12827:5:65"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12820:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12820:13:65"
                  },
                  "nodeType": "YulIf",
                  "src": "12817:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12865:25:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12876:5:65"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12887:1:65",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "12883:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12883:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12872:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12872:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "12865:3:65"
                    }
                  ]
                }
              ]
            },
            "name": "decrement_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12789:5:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "12799:3:65",
                "type": ""
              }
            ],
            "src": "12760:136:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12933:95:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12950:1:65",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12957:3:65",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12962:10:65",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "12953:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12953:20:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12943:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12943:31:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12943:31:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12990:1:65",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12993:4:65",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12983:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12983:15:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12983:15:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13014:1:65",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13017:4:65",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "13007:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13007:15:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13007:15:65"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "12901:127:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13065:95:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13082:1:65",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13089:3:65",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13094:10:65",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "13085:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13085:20:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13075:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13075:31:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13075:31:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13122:1:65",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13125:4:65",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13115:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13115:15:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13115:15:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13146:1:65",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13149:4:65",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "13139:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13139:15:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13139:15:65"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "13033:127:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13210:86:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13274:16:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13283:1:65",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13286:1:65",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13276:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13276:12:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13276:12:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "13233:5:65"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "13244:5:65"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13259:3:65",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13264:1:65",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "13255:3:65"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13255:11:65"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13268:1:65",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "13251:3:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13251:19:65"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "13240:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13240:31:65"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "13230:2:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13230:42:65"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "13223:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13223:50:65"
                  },
                  "nodeType": "YulIf",
                  "src": "13220:2:65"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13199:5:65",
                "type": ""
              }
            ],
            "src": "13165:131:65"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(value1, value1) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value1, value1) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(value1, value1) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), value1)\n        value1 := memPtr\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_Freeport_$5574(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value2, value2) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(value2, value2) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value2, value2) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(value2, value2) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(value2, value2) }\n        value1 := add(_2, 32)\n        value2 := length\n    }\n    function abi_decode_tuple_t_uint32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), value1)\n        calldatacopy(add(headStart, 64), value0, value1)\n        mstore(add(add(headStart, value1), 64), tail)\n        tail := add(add(headStart, and(add(value1, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_contract$_Freeport_$5574__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_111b7c5d2b16684041cedd75c064e2306dd9ae18e93fc76a7b5be4886458a40b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Only current owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2425ea74e68e4bcd365d89824a06e1475543dcbb6a12bf699e5abf6b11b9b6ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: upgrade breaks f\")\n        mstore(add(headStart, 96), \"urther upgrades\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_50d498e1bffeddda2687492473fae8648f1dd5f3e06221a4b00d5d69c75de74f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"NFT format is not compatible wit\")\n        mstore(add(headStart, 96), \"h Collections\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_578cb4a41adb75340d2cbfbdb0c6610ff4519d15e645cc9b4cc4c64336da99c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Only minter\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"0 is not a valid NFT ID\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: delegate call to non-co\")\n        mstore(add(headStart, 96), \"ntract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c13c296baebb1f79b18541a06c39b3d56ce1654fd26fe72a62e2fb7efe67be9a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"Only Admin\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c185758ad32283425b0465b5186ef5621a0f09a62aaaa687db5199ecbad2dafa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"sender is not collection manager\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
      "id": 65,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "698:4541:35:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "698:4541:35:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4473:225:0;;;;;;;;;;-1:-1:-1;4473:225:0;;;;;:::i;:::-;;:::i;:::-;;;5930:14:65;;5923:22;5905:41;;5893:2;5878:18;4473:225:0;;;;;;;;3409:488:35;;;;;;;;;;-1:-1:-1;3409:488:35;;;;;:::i;:::-;;:::i;:::-;;1188:86;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1188:86:35;;;;;6103:25:65;;;6091:2;6076:18;1188:86:35;6058:76:65;5781:121:0;;;;;;;;;;-1:-1:-1;5781:121:0;;;;;:::i;:::-;;:::i;229:320:46:-;;;;;;;;;;-1:-1:-1;229:320:46;;;;;:::i;:::-;499:2;476:25;-1:-1:-1;;;476:25:46;443:4;455:7;419:44;418:84;;229:320;6152:145:0;;;;;;;;;;-1:-1:-1;6152:145:0;;;;;:::i;:::-;;:::i;7169:214::-;;;;;;;;;;-1:-1:-1;7169:214:0;;;;;:::i;:::-;;:::i;882:186:4:-;;;;;;;;;;-1:-1:-1;882:186:4;;;;;:::i;:::-;;:::i;1074:214::-;;;;;;:::i;:::-;;:::i;426:143:49:-;;;;;;;;;;-1:-1:-1;426:143:49;;;;;:::i;:::-;;:::i;4785:137:0:-;;;;;;;;;;-1:-1:-1;4785:137:0;;;;;:::i;:::-;;:::i;868:24:35:-;;;;;;;;;;-1:-1:-1;868:24:35;;;;-1:-1:-1;;;;;868:24:35;;;;;;;;;;:::i;345:74:49:-;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;345:74:49;;2794:49:0;;;;;;;;;;-1:-1:-1;2794:49:0;2839:4;2794:49;;2895:360:35;;;;;;;;;;-1:-1:-1;2895:360:35;;;;;:::i;:::-;;:::i;4085:356::-;;;;;;;;;;-1:-1:-1;4085:356:35;;;;;:::i;:::-;;:::i;1520:180::-;;;;;;;;;;-1:-1:-1;1520:180:35;;;;;:::i;:::-;;:::i;5005:232::-;;;;;;;;;;-1:-1:-1;5005:232:35;;;;;:::i;:::-;5197:7;5119:86;;5005:232;6531:147:0;;;;;;;;;;-1:-1:-1;6531:147:0;;;;;:::i;:::-;;:::i;4529:248:35:-;;;;;;;;;;-1:-1:-1;4529:248:35;;;;;:::i;:::-;;:::i;4473:225:0:-;4558:4;-1:-1:-1;;;;;;4581:58:0;;-1:-1:-1;;;4581:58:0;;:110;;-1:-1:-1;;;;;;;;;;1127:51:15;;;4655:36:0;4574:117;4473:225;-1:-1:-1;;4473:225:0:o;3409:488:35:-;905:7:46;827:86;;;1027:2;950:79;;;;;-1:-1:-1;;;;;1066:71:46;;3604:15:35;;3596:73;;;;-1:-1:-1;;;3596:73:35;;8753:2:65;3596:73:35;;;8735:21:65;8792:2;8772:18;;;8765:30;8831:34;8811:18;;;8804:62;-1:-1:-1;;;8882:18:65;;;8875:43;8935:19;;3596:73:35;;;;;;;;;3680:15;3698:12;:10;:12::i;:::-;3728:64;;-1:-1:-1;;;3728:64:35;;-1:-1:-1;;;;;;;;;;;3728:64:35;;;6313:25:65;-1:-1:-1;;;;;6374:32:65;;;6354:18;;;6347:60;3680:30:35;;-1:-1:-1;3728:30:35;;;;;;6286:18:65;;3728:64:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3720:109;;;;-1:-1:-1;;;3720:109:35;;11434:2:65;3720:109:35;;;11416:21:65;;;11453:18;;;11446:30;11512:34;11492:18;;;11485:62;11564:18;;3720:109:35;11406:182:65;3720:109:35;3872:5;3863:7;-1:-1:-1;;;;;3845:45:35;-1:-1:-1;;;;;;;;;;;3879:10:35;;3845:45;;;;;;;:::i;:::-;;;;;;;;3409:488;;;;;;;:::o;5781:121:0:-;5847:7;5873:12;;;:6;:12;;;;;:22;;;;5781:121::o;6152:145::-;6235:18;6248:4;6235:12;:18::i;:::-;4358:30;4369:4;4375:12;:10;:12::i;:::-;4358:10;:30::i;:::-;6265:25:::1;6276:4;6282:7;6265:10;:25::i;:::-;6152:145:::0;;;:::o;7169:214::-;7275:12;:10;:12::i;:::-;-1:-1:-1;;;;;7264:23:0;:7;-1:-1:-1;;;;;7264:23:0;;7256:83;;;;-1:-1:-1;;;7256:83:0;;11795:2:65;7256:83:0;;;11777:21:65;11834:2;11814:18;;;11807:30;11873:34;11853:18;;;11846:62;-1:-1:-1;;;11924:18:65;;;11917:45;11979:19;;7256:83:0;11767:237:65;7256:83:0;7350:26;7362:4;7368:7;7350:11;:26::i;:::-;7169:214;;:::o;882:186:4:-;955:36;973:17;955;:36::i;:::-;1001:60;1025:17;1044:9;;;;;;;;;;;;1055:5;1001:23;:60::i;:::-;882:186;:::o;1074:214::-;1181:36;1199:17;1181;:36::i;:::-;1227:54;1251:17;1270:4;1276;1227:23;:54::i;426:143:49:-;502:4;525:37;-1:-1:-1;;;;;;;;;;;552:9:49;4785:137:0;4863:4;4886:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;4886:29:0;;;;;;;;;;;;;;;4785:137::o;2895:360:35:-;2993:17;2985:53;;;;-1:-1:-1;;;2985:53:35;;;;;;;:::i;:::-;3048:14;3065:12;:10;:12::i;:::-;3048:29;;3087:20;3110:23;3127:5;5197:7;5119:86;;5005:232;3110:23;3087:46;;3161:12;-1:-1:-1;;;;;3151:22:35;:6;-1:-1:-1;;;;;3151:22:35;;3143:46;;;;-1:-1:-1;;;3143:46:35;;9167:2:65;3143:46:35;;;9149:21:65;9206:2;9186:18;;;9179:30;-1:-1:-1;;;9225:18:65;;;9218:41;9276:18;;3143:46:35;9139:161:65;3143:46:35;3230:5;3222:6;-1:-1:-1;;;;;3204:44:35;-1:-1:-1;;;;;;;;;;;3237:10:35;;3204:44;;;;;;;:::i;:::-;;;;;;;;2895:360;;;;;:::o;4085:356::-;4182:17;4174:53;;;;-1:-1:-1;;;4174:53:35;;;;;;;:::i;:::-;4237:13;4253:12;:10;:12::i;:::-;4293:8;;:32;;-1:-1:-1;;;4293:32:35;;-1:-1:-1;;;;;5678:32:65;;;4293::35;;;5660:51:65;5727:18;;;5720:34;;;4237:28:35;;-1:-1:-1;4275:15:35;;4293:8;;;;:18;;5633::65;;4293:32:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4275:50;;4353:1;4343:7;:11;4335:42;;;;-1:-1:-1;;;4335:42:35;;7990:2:65;4335:42:35;;;7972:21:65;8029:2;8009:18;;;8002:30;-1:-1:-1;;;8048:18:65;;;8041:48;8106:18;;4335:42:35;7962:168:65;4335:42:35;4416:5;4409;-1:-1:-1;;;;;4392:42:35;;4423:10;;4392:42;;;;;;;:::i;1520:180::-;1456:13:3;;;;;;;;:30;;-1:-1:-1;1474:12:3;;;;1473:13;1456:30;1448:89;;;;-1:-1:-1;;;1448:89:3;;;;;;;:::i;:::-;1548:19;1571:13;;;;;;1570:14;1594:98;;;;1628:13;:20;;-1:-1:-1;;1662:19:3;;;;;1594:98;1589:22:35::1;:20;:22::i;:::-;-1:-1:-1::0;;;;;1630:32:35;::::1;1622:41;;;::::0;::::1;;1673:8;:20:::0;;-1:-1:-1;;;;;;1673:20:35::1;-1:-1:-1::0;;;;;1673:20:35;::::1;;::::0;;1714:66:3;;;;1764:5;1748:21;;-1:-1:-1;;1748:21:3;;;1520:180:35;;:::o;6531:147:0:-;6615:18;6628:4;6615:12;:18::i;:::-;4358:30;4369:4;4375:12;:10;:12::i;4358:30::-;6645:26:::1;6657:4;6663:7;6645:11;:26::i;4529:248:35:-:0;4627:17;4619:53;;;;-1:-1:-1;;;4619:53:35;;;;;;;:::i;:::-;4682:14;4699:12;:10;:12::i;:::-;4682:29;;4752:5;4744:6;-1:-1:-1;;;;;4726:44:35;;4759:10;;4726:44;;;;;;;:::i;:::-;;;;;;;;4529:248;;;;:::o;575:371:49:-;637:14;667:30;686:10;667:18;:30::i;:::-;663:277;;;-1:-1:-1;;;852:14:49;848:23;835:37;831:2;827:46;575:371;:::o;816:58::-;-1:-1:-1;901:10:11;;575:371:49:o;5203:397:0:-;5282:22;5290:4;5296:7;5282;:22::i;:::-;5278:316;;5411:52;5450:7;-1:-1:-1;;;;;5411:52:0;5460:2;5411:30;:52::i;:::-;5518:49;5557:4;5564:2;5518:30;:49::i;:::-;5334:247;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5334:247:0;;;;;;;;;;-1:-1:-1;;;5320:263:0;;;;;;;:::i;8381:224::-;8455:22;8463:4;8469:7;8455;:22::i;:::-;8450:149;;8493:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8493:29:0;;;;;;;;;:36;;-1:-1:-1;;8493:36:0;8525:4;8493:36;;;8575:12;:10;:12::i;:::-;-1:-1:-1;;;;;8548:40:0;8566:7;-1:-1:-1;;;;;8548:40:0;8560:4;8548:40;;;;;;;;;;8381:224;;:::o;8611:225::-;8685:22;8693:4;8699:7;8685;:22::i;:::-;8681:149;;;8755:5;8723:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8723:29:0;;;;;;;;;:37;;-1:-1:-1;;8723:37:0;;;8806:12;:10;:12::i;:::-;-1:-1:-1;;;;;8779:40:0;8797:7;-1:-1:-1;;;;;8779:40:0;8791:4;8779:40;;;;;;;;;;8611:225;;:::o;575:151:55:-;665:39;2839:4:0;693:10:55;665:7;:39::i;:::-;657:62;;;;-1:-1:-1;;;657:62:55;;11095:2:65;657:62:55;;;11077:21:65;11134:2;11114:18;;;11107:30;-1:-1:-1;;;11153:18:65;;;11146:40;11203:18;;657:62:55;11067:160:65;2851:1322:1;2965:25;2993:20;:18;:20::i;:::-;2965:48;;3066:37;3085:17;3066:18;:37::i;:::-;3131:1;3117:4;:11;:15;:28;;;;3136:9;3117:28;3113:105;;;3161:46;3183:17;3202:4;3161:21;:46::i;:::-;;3113:105;844:66;3417:21;;;;3412:755;;3530:28;;-1:-1:-1;;3530:28:1;3554:4;3530:28;;;3646:122;;3572:210;;3611:17;;3646:122;;3733:17;;3646:122;;;:::i;:::-;;;;-1:-1:-1;;3646:122:1;;;;;;;;;;;;;;-1:-1:-1;;;;;3646:122:1;-1:-1:-1;;;3646:122:1;;;3572:21;:210::i;:::-;-1:-1:-1;3796:29:1;;-1:-1:-1;;3796:29:1;;;3912:20;:18;:20::i;:::-;-1:-1:-1;;;;;3891:41:1;:17;-1:-1:-1;;;;;3891:41:1;;3883:101;;;;-1:-1:-1;;;3883:101:1;;8337:2:65;3883:101:1;;;8319:21:65;8376:2;8356:18;;;8349:30;8415:34;8395:18;;;8388:62;-1:-1:-1;;;8466:18:65;;;8459:45;8521:19;;3883:101:1;8309:237:65;3883:101:1;4073:37;4092:17;4073:18;:37::i;:::-;4129:27;;-1:-1:-1;;;;;4129:27:1;;;;;;;;3412:755;2851:1322;;;;;:::o;261:78:49:-;312:20;:18;:20::i;:::-;261:78::o;1542:437:13:-;1617:13;1642:19;1674:10;1678:6;1674:1;:10;:::i;:::-;:14;;1687:1;1674:14;:::i;:::-;-1:-1:-1;;;;;1664:25:13;;;;;-1:-1:-1;;;1664:25:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1664:25:13;;1642:47;;-1:-1:-1;;;1699:6:13;1706:1;1699:9;;;;;;-1:-1:-1;;;1699:9:13;;;;;;;;;;;;:15;-1:-1:-1;;;;;1699:15:13;;;;;;;;;-1:-1:-1;;;1724:6:13;1731:1;1724:9;;;;;;-1:-1:-1;;;1724:9:13;;;;;;;;;;;;:15;-1:-1:-1;;;;;1724:15:13;;;;;;;;-1:-1:-1;1754:9:13;1766:10;1770:6;1766:1;:10;:::i;:::-;:14;;1779:1;1766:14;:::i;:::-;1754:26;;1749:128;1786:1;1782;:5;1749:128;;;-1:-1:-1;;;1829:5:13;1837:3;1829:11;1820:21;;;;;-1:-1:-1;;;1820:21:13;;;;;;;;;;;;1808:6;1815:1;1808:9;;;;;;-1:-1:-1;;;1808:9:13;;;;;;;;;;;;:33;-1:-1:-1;;;;;1808:33:13;;;;;;;;-1:-1:-1;1865:1:13;1855:11;;;;;1789:3;;;:::i;:::-;;;1749:128;;;-1:-1:-1;1894:10:13;;1886:55;;;;-1:-1:-1;;;1886:55:13;;7629:2:65;1886:55:13;;;7611:21:65;;;7648:18;;;7641:30;7707:34;7687:18;;;7680:62;7759:18;;1886:55:13;7601:182:65;1886:55:13;1965:6;1542:437;-1:-1:-1;;;1542:437:13:o;1456:151:1:-;-1:-1:-1;;;;;;;;;;;1535:65:1;-1:-1:-1;;;;;1535:65:1;;1456:151::o;1698:281::-;1089:20:10;;1771:106:1;;;;-1:-1:-1;;;1771:106:1;;9922:2:65;1771:106:1;;;9904:21:65;9961:2;9941:18;;;9934:30;10000:34;9980:18;;;9973:62;-1:-1:-1;;;10051:18:65;;;10044:43;10104:19;;1771:106:1;9894:235:65;1771:106:1;-1:-1:-1;;;;;;;;;;;1887:85:1;;-1:-1:-1;;;;;;1887:85:1;-1:-1:-1;;;;;1887:85:1;;;;;;;;;;1698:281::o;7352:437::-;7435:12;1089:20:10;;7459:88:1;;;;-1:-1:-1;;;7459:88:1;;10688:2:65;7459:88:1;;;10670:21:65;10727:2;10707:18;;;10700:30;10766:34;10746:18;;;10739:62;-1:-1:-1;;;10817:18:65;;;10810:36;10863:19;;7459:88:1;10660:228:65;7459:88:1;7618:12;7632:23;7659:6;-1:-1:-1;;;;;7659:19:1;7679:4;7659:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7617:67;;;;7701:81;7719:7;7728:10;7701:81;;;;;;;;;;;;;;;;;:17;:81::i;:::-;7694:88;7352:437;-1:-1:-1;;;;;7352:437:1:o;404:165:55:-;453:24;:22;:24::i;:::-;487:22;:20;:22::i;:::-;520:42;2839:4:0;551:10:55;520;:42::i;7795:725:1:-;7910:12;7938:7;7934:580;;;-1:-1:-1;7968:10:1;7961:17;;7934:580;8079:17;;:21;8075:429;;8337:10;8331:17;8397:15;8384:10;8380:2;8376:19;8369:44;8286:145;8476:12;8469:20;;-1:-1:-1;;;8469:20:1;;;;;;;;:::i;650:149:4:-;1456:13:3;;;;;;;;:30;;-1:-1:-1;1474:12:3;;;;1473:13;1456:30;1448:89;;;;-1:-1:-1;;;1448:89:3;;;;;;;:::i;:::-;1548:19;1571:13;;;;;;1570:14;1594:98;;;;1628:13;:20;;-1:-1:-1;;1662:19:3;;;;;1594:98;715:33:4::1;:31;:33::i;:::-;758:34;:32;:34::i;:::-;1718:14:3::0;1714:66;;;1764:5;1748:21;;-1:-1:-1;;1748:21:3;;;650:149:4;:::o;2390:173:0:-;1456:13:3;;;;;;;;:30;;-1:-1:-1;1474:12:3;;;;1473:13;1456:30;1448:89;;;;-1:-1:-1;;;1448:89:3;;;;;;;:::i;:::-;1548:19;1571:13;;;;;;1570:14;1594:98;;;;1628:13;:20;;-1:-1:-1;;1662:19:3;;;;;1594:98;2453:26:0::1;:24;:26::i;7948:110::-:0;8026:25;8037:4;8043:7;8026:10;:25::i;647:71:1:-;1456:13:3;;;;;;;;:30;;-1:-1:-1;1474:12:3;;;;1473:13;1456:30;1448:89;;;;-1:-1:-1;;;1448:89:3;;;;;;;:::i;:::-;1548:19;1571:13;;;;;;1570:14;1594:98;;;;1628:13;:20;;-1:-1:-1;;1662:19:3;;;;;1714:66;;;;1764:5;1748:21;;-1:-1:-1;;1748:21:3;;;647:71:1;:::o;14:257:65:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:31;235:5;210:31;:::i;276:1101::-;353:6;361;414:2;402:9;393:7;389:23;385:32;382:2;;;435:6;427;420:22;382:2;479:9;466:23;498:31;523:5;498:31;:::i;:::-;548:5;-1:-1:-1;604:2:65;589:18;;576:32;-1:-1:-1;;;;;657:14:65;;;654:2;;;689:6;681;674:22;654:2;732:6;721:9;717:22;707:32;;777:7;770:4;766:2;762:13;758:27;748:2;;804:6;796;789:22;748:2;845;832:16;867:2;863;860:10;857:2;;;873:18;;:::i;:::-;948:2;942:9;916:2;1002:13;;-1:-1:-1;;998:22:65;;;1022:2;994:31;990:40;978:53;;;1046:18;;;1066:22;;;1043:46;1040:2;;;1092:18;;:::i;:::-;1132:10;1128:2;1121:22;1167:2;1159:6;1152:18;1207:7;1202:2;1197;1193;1189:11;1185:20;1182:33;1179:2;;;1233:6;1225;1218:22;1179:2;1294;1289;1285;1281:11;1276:2;1268:6;1264:15;1251:46;1339:6;1334:2;1329;1321:6;1317:15;1313:24;1306:40;1365:6;1355:16;;;;;;;372:1005;;;;;:::o;1382:297::-;1449:6;1502:2;1490:9;1481:7;1477:23;1473:32;1470:2;;;1523:6;1515;1508:22;1470:2;1560:9;1554:16;1613:5;1606:13;1599:21;1592:5;1589:32;1579:2;;1640:6;1632;1625:22;1684:190;1743:6;1796:2;1784:9;1775:7;1771:23;1767:32;1764:2;;;1817:6;1809;1802:22;1764:2;-1:-1:-1;1845:23:65;;1754:120;-1:-1:-1;1754:120:65:o;1879:325::-;1947:6;1955;2008:2;1996:9;1987:7;1983:23;1979:32;1976:2;;;2029:6;2021;2014:22;1976:2;2070:9;2057:23;2047:33;;2130:2;2119:9;2115:18;2102:32;2143:31;2168:5;2143:31;:::i;:::-;2193:5;2183:15;;;1966:238;;;;;:::o;2209:306::-;2267:6;2320:2;2308:9;2299:7;2295:23;2291:32;2288:2;;;2341:6;2333;2326:22;2288:2;2372:23;;-1:-1:-1;;;;;;2424:32:65;;2414:43;;2404:2;;2476:6;2468;2461:22;2994:194;3064:6;3117:2;3105:9;3096:7;3092:23;3088:32;3085:2;;;3138:6;3130;3123:22;3085:2;-1:-1:-1;3166:16:65;;3075:113;-1:-1:-1;3075:113:65:o;3193:709::-;3272:6;3280;3288;3341:2;3329:9;3320:7;3316:23;3312:32;3309:2;;;3362:6;3354;3347:22;3309:2;3390:23;;;-1:-1:-1;3464:2:65;3449:18;;3436:32;-1:-1:-1;;;;;3517:14:65;;;3514:2;;;3549:6;3541;3534:22;3514:2;3592:6;3581:9;3577:22;3567:32;;3637:7;3630:4;3626:2;3622:13;3618:27;3608:2;;3664:6;3656;3649:22;3608:2;3709;3696:16;3735:2;3727:6;3724:14;3721:2;;;3756:6;3748;3741:22;3721:2;3806:7;3801:2;3792:6;3788:2;3784:15;3780:24;3777:37;3774:2;;;3832:6;3824;3817:22;3774:2;3868;3864;3860:11;3850:21;;3890:6;3880:16;;;;;3299:603;;;;;:::o;3907:296::-;3965:6;4018:2;4006:9;3997:7;3993:23;3989:32;3986:2;;;4039:6;4031;4024:22;3986:2;4083:9;4070:23;4133:10;4126:5;4122:22;4115:5;4112:33;4102:2;;4164:6;4156;4149:22;4208:274;4337:3;4375:6;4369:13;4391:53;4437:6;4432:3;4425:4;4417:6;4413:17;4391:53;:::i;:::-;4460:16;;;;;4345:137;-1:-1:-1;;4345:137:65:o;4487:786::-;-1:-1:-1;;;4893:3:65;4886:38;4868:3;4953:6;4947:13;4969:62;5024:6;5019:2;5014:3;5010:12;5003:4;4995:6;4991:17;4969:62;:::i;:::-;-1:-1:-1;;;5090:2:65;5050:16;;;5082:11;;;5075:40;5140:13;;5162:63;5140:13;5211:2;5203:11;;5196:4;5184:17;;5162:63;:::i;:::-;5245:17;5264:2;5241:26;;4876:397;-1:-1:-1;;;;4876:397:65:o;5278:203::-;-1:-1:-1;;;;;5442:32:65;;;;5424:51;;5412:2;5397:18;;5379:102::o;6418:391::-;6575:2;6564:9;6557:21;6614:6;6609:2;6598:9;6594:18;6587:34;6671:6;6663;6658:2;6647:9;6643:18;6630:48;6538:4;6698:22;;;6722:2;6694:31;;;6687:45;;;;6793:2;6772:15;;;-1:-1:-1;;6768:29:65;6753:45;6749:54;;6547:262;-1:-1:-1;6547:262:65:o;7039:383::-;7188:2;7177:9;7170:21;7151:4;7220:6;7214:13;7263:6;7258:2;7247:9;7243:18;7236:34;7279:66;7338:6;7333:2;7322:9;7318:18;7313:2;7305:6;7301:15;7279:66;:::i;:::-;7406:2;7385:15;-1:-1:-1;;7381:29:65;7366:45;;;;7413:2;7362:54;;7160:262;-1:-1:-1;;7160:262:65:o;9305:410::-;9507:2;9489:21;;;9546:2;9526:18;;;9519:30;9585:34;9580:2;9565:18;;9558:62;-1:-1:-1;;;9651:2:65;9636:18;;9629:44;9705:3;9690:19;;9479:236::o;10134:347::-;10336:2;10318:21;;;10375:2;10355:18;;;10348:30;-1:-1:-1;;;10409:2:65;10394:18;;10387:53;10472:2;10457:18;;10308:173::o;12191:128::-;12231:3;12262:1;12258:6;12255:1;12252:13;12249:2;;;12268:18;;:::i;:::-;-1:-1:-1;12304:9:65;;12239:80::o;12324:168::-;12364:7;12430:1;12426;12422:6;12418:14;12415:1;12412:21;12407:1;12400:9;12393:17;12389:45;12386:2;;;12437:18;;:::i;:::-;-1:-1:-1;12477:9:65;;12376:116::o;12497:258::-;12569:1;12579:113;12593:6;12590:1;12587:13;12579:113;;;12669:11;;;12663:18;12650:11;;;12643:39;12615:2;12608:10;12579:113;;;12710:6;12707:1;12704:13;12701:2;;;12745:1;12736:6;12731:3;12727:16;12720:27;12701:2;;12550:205;;;:::o;12760:136::-;12799:3;12827:5;12817:2;;12836:18;;:::i;:::-;-1:-1:-1;;;12872:18:65;;12807:89::o;12901:127::-;12962:10;12957:3;12953:20;12950:1;12943:31;12993:4;12990:1;12983:15;13017:4;13014:1;13007:15;13033:127;13094:10;13089:3;13085:20;13082:1;13075:31;13125:4;13122:1;13115:15;13149:4;13146:1;13139:15;13165:131;-1:-1:-1;;;;;13240:31:65;;13230:42;;13220:2;;13286:1;13283;13276:12",
  "source": "pragma solidity ^0.8.0;\n\nimport \"./freeportParts/MetaTxContext.sol\";\nimport \"./freeportParts/HasGlobalNftId.sol\";\nimport \"./Collection.sol\";\nimport \"./Freeport.sol\";\n\n/** The contract NFTAttachment allows users to attach objects to NFTs.\n * Some application can listen for the events and interpret the objects in some way.\n *\n * There are three roles who can attach objects to an NFT:\n * the minter, any current owner, or any anonymous account.\n * A different event is emitted for each role.\n *\n * The attachment data is meant to identify an object hosted externally,\n * such as a CID, a.k.a. Content Identifier, or a DDC URL.\n * The content may be retrieved from Cere DDC or some other store.\n */\ncontract NFTAttachment is /* AccessControl, */ MetaTxContext, HasGlobalNftId {\n\n    /** This attachment contract refers to the NFT contract in this variable.\n     */\n    Freeport public freeport;\n\n    /** The token ID that represents the internal currency for all payments in Freeport. */\n    uint256 constant CURRENCY = 0;\n\n    /** Collection manager role.\n     *  Used for configuring the amounts and beneficiaries of royalties on primary and secondary transfers of this NFT.\n     */\n    bytes32 public constant COLLECTION_MANAGER_ROLE = keccak256(\"COLLECTION_MANAGER_ROLE\");\n\n    /** Set which NFT contract to refer to.\n     *\n     * The event `MinterAttachToNFT` is only supported for Freeport-compatible NFTs.\n     *\n     * The event `OwnerAttachToNFT` is supported for ERC-1155 NFTs, including Freeport.\n     */\n    function initialize(Freeport _freeport) public initializer {\n        __MetaTxContext_init();\n\n        require(address(_freeport) != address(0));\n        freeport = _freeport;\n    }\n\n    /** The account `minter` wished to attach data `attachment` to the NFT type `nftId`.\n     *\n     * The `minter` is the minter who created this NFT type, or may create it in the future if it does not exist.\n     */\n    event MinterAttachToNFT(\n        address indexed minter,\n        uint256 indexed nftId,\n        bytes attachment);\n\n    /** The account `owner` wished to attach data `attachment` to the NFT type `nftId`.\n     *\n     * The `owner` owned at least one NFT of this type at the time of the event.\n     */\n    event OwnerAttachToNFT(\n        address indexed owner,\n        uint256 indexed nftId,\n        bytes attachment);\n\n    /** The account `anonym` wished to attach data `attachment` to the NFT type `nftId`.\n     *\n     * There is absolutely no validation. It is the responsibility of the reader of this event to decide\n     * who the sender is and what the attachment means.\n     */\n    event AnonymAttachToNFT(\n        address indexed anonym,\n        uint256 indexed nftId,\n        bytes attachment);\n\n    /** Attach data `attachment` to the NFT type `nftId`, as the minter of this NFT type.\n     *\n     * This only works for NFT IDs in the Freeport format.\n     */\n    function minterAttachToNFT(uint256 nftId, bytes calldata attachment)\n    public {\n        require(nftId != CURRENCY, \"0 is not a valid NFT ID\");\n        address minter = _msgSender();\n        address actualMinter = _minterFromNftId(nftId);\n        require(minter == actualMinter, \"Only minter\");\n        emit MinterAttachToNFT(minter, nftId, attachment);\n    }\n\n    /** Attach data `attachment` to the NFT type `nftId`, as manager of collection.\n     *\n     * This only works with NFTs on Collections.\n     */\n    function collectionManagerAttachToNFT(uint256 nftId, bytes calldata attachment)\n    public {\n        (address collection, uint32 innerId, uint64 zeroSupply) = _parseNftId(nftId);\n        require(zeroSupply == 0, \"NFT format is not compatible with Collections\");\n\n        address manager = _msgSender();\n        require(Collection(collection).hasRole(COLLECTION_MANAGER_ROLE, manager), \"sender is not collection manager\");\n\n        emit MinterAttachToNFT(manager, nftId, attachment);\n    }\n\n    /** Attach data `attachment` to the NFT type `nftId`, as a current owner of an NFT of this type.\n     *\n     * This works for NFTs in the ERC-1155 or Freeport standards.\n     */\n    function ownerAttachToNFT(uint256 nftId, bytes calldata attachment)\n    public {\n        require(nftId != CURRENCY, \"0 is not a valid NFT ID\");\n        address owner = _msgSender();\n        uint256 balance = freeport.balanceOf(owner, nftId);\n        require(balance > 0, \"Only current owner\");\n        emit OwnerAttachToNFT(owner, nftId, attachment);\n    }\n\n    /** Attach data `attachment` to the NFT type `nftId`, as any account.\n     */\n    function anonymAttachToNFT(uint256 nftId, bytes calldata attachment)\n    public {\n        require(nftId != CURRENCY, \"0 is not a valid NFT ID\");\n        address anonym = _msgSender();\n        emit AnonymAttachToNFT(anonym, nftId, attachment);\n    }\n\n    /** Parse an NFT ID into its issuer, its supply, and an arbitrary nonce.\n     *\n     * This does not imply that the NFTs exist.\n     *\n     * This is specific to Freeport NFTs. See `freeportParts/Issuance.sol`\n     */\n    function _minterFromNftId(uint256 id)\n    public pure returns (address minter) {\n        minter = address(uint160((id & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000) >> (32 + 64)));\n        return minter;\n    }\n}\n",
  "sourcePath": "/Users/evgenysvirsky/GitHub/Cerebellum-Network/Freeport-Smart-Contracts/contracts/NFTAttachment.sol",
  "ast": {
    "absolutePath": "project:/contracts/NFTAttachment.sol",
    "exportedSymbols": {
      "AccessControlUpgradeable": [
        395
      ],
      "AddressUpgradeable": [
        1519
      ],
      "BaseNFT": [
        11642
      ],
      "Collection": [
        4633
      ],
      "ContextUpgradeable": [
        1564
      ],
      "Currency": [
        11798
      ],
      "ERC1155Upgradeable": [
        15184
      ],
      "ERC165Upgradeable": [
        2017
      ],
      "ERC1967UpgradeUpgradeable": [
        829
      ],
      "ERC20Adapter": [
        11926
      ],
      "Freeport": [
        5574
      ],
      "HasGlobalNftId": [
        12032
      ],
      "IAccessControlUpgradeable": [
        44
      ],
      "IBeaconUpgradeable": [
        839
      ],
      "IERC1155MetadataURIUpgradeable": [
        1137
      ],
      "IERC1155ReceiverUpgradeable": [
        1000
      ],
      "IERC1155Upgradeable": [
        1122
      ],
      "IERC165Upgradeable": [
        2029
      ],
      "IERC20": [
        2982
      ],
      "Initializable": [
        885
      ],
      "Issuance": [
        12246
      ],
      "JointAccounts": [
        12590
      ],
      "MetaTxContext": [
        12667
      ],
      "NFTAttachment": [
        6231
      ],
      "SimpleExchange": [
        12947
      ],
      "StorageSlotUpgradeable": [
        1624
      ],
      "StringsUpgradeable": [
        1827
      ],
      "TransferFees": [
        13563
      ],
      "TransferOperator": [
        13607
      ],
      "UUPSUpgradeable": [
        959
      ],
      "Upgradeable": [
        13648
      ]
    },
    "id": 6232,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5965,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:35"
      },
      {
        "absolutePath": "project:/contracts/freeportParts/MetaTxContext.sol",
        "file": "./freeportParts/MetaTxContext.sol",
        "id": 5966,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6232,
        "sourceUnit": 12668,
        "src": "25:43:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/freeportParts/HasGlobalNftId.sol",
        "file": "./freeportParts/HasGlobalNftId.sol",
        "id": 5967,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6232,
        "sourceUnit": 12033,
        "src": "69:44:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Collection.sol",
        "file": "./Collection.sol",
        "id": 5968,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6232,
        "sourceUnit": 4634,
        "src": "114:26:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Freeport.sol",
        "file": "./Freeport.sol",
        "id": 5969,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6232,
        "sourceUnit": 5575,
        "src": "141:24:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5971,
              "name": "MetaTxContext",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12667,
              "src": "745:13:35"
            },
            "id": 5972,
            "nodeType": "InheritanceSpecifier",
            "src": "745:13:35"
          },
          {
            "baseName": {
              "id": 5973,
              "name": "HasGlobalNftId",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12032,
              "src": "760:14:35"
            },
            "id": 5974,
            "nodeType": "InheritanceSpecifier",
            "src": "760:14:35"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5970,
          "nodeType": "StructuredDocumentation",
          "src": "167:530:35",
          "text": "The contract NFTAttachment allows users to attach objects to NFTs.\n Some application can listen for the events and interpret the objects in some way.\n There are three roles who can attach objects to an NFT:\n the minter, any current owner, or any anonymous account.\n A different event is emitted for each role.\n The attachment data is meant to identify an object hosted externally,\n such as a CID, a.k.a. Content Identifier, or a DDC URL.\n The content may be retrieved from Cere DDC or some other store."
        },
        "fullyImplemented": true,
        "id": 6231,
        "linearizedBaseContracts": [
          6231,
          12032,
          12667,
          13648,
          395,
          2017,
          2029,
          44,
          1564,
          959,
          829,
          885
        ],
        "name": "NFTAttachment",
        "nameLocation": "707:13:35",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 5975,
              "nodeType": "StructuredDocumentation",
              "src": "782:81:35",
              "text": "This attachment contract refers to the NFT contract in this variable."
            },
            "functionSelector": "9470ad85",
            "id": 5978,
            "mutability": "mutable",
            "name": "freeport",
            "nameLocation": "884:8:35",
            "nodeType": "VariableDeclaration",
            "scope": 6231,
            "src": "868:24:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Freeport_$5574",
              "typeString": "contract Freeport"
            },
            "typeName": {
              "id": 5977,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 5976,
                "name": "Freeport",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5574,
                "src": "868:8:35"
              },
              "referencedDeclaration": 5574,
              "src": "868:8:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Freeport_$5574",
                "typeString": "contract Freeport"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 5979,
              "nodeType": "StructuredDocumentation",
              "src": "899:87:35",
              "text": "The token ID that represents the internal currency for all payments in Freeport. "
            },
            "id": 5982,
            "mutability": "constant",
            "name": "CURRENCY",
            "nameLocation": "1008:8:35",
            "nodeType": "VariableDeclaration",
            "scope": 6231,
            "src": "991:29:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5980,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "991:7:35",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 5981,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1019:1:35",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "documentation": {
              "id": 5983,
              "nodeType": "StructuredDocumentation",
              "src": "1027:156:35",
              "text": "Collection manager role.\n  Used for configuring the amounts and beneficiaries of royalties on primary and secondary transfers of this NFT."
            },
            "functionSelector": "2210023d",
            "id": 5988,
            "mutability": "constant",
            "name": "COLLECTION_MANAGER_ROLE",
            "nameLocation": "1212:23:35",
            "nodeType": "VariableDeclaration",
            "scope": 6231,
            "src": "1188:86:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 5984,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1188:7:35",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "434f4c4c454354494f4e5f4d414e414745525f524f4c45",
                  "id": 5986,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1248:25:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_592c958fd52390f51665f668ae132c07938e885cabed2dc56aba7c2b26488095",
                    "typeString": "literal_string \"COLLECTION_MANAGER_ROLE\""
                  },
                  "value": "COLLECTION_MANAGER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_592c958fd52390f51665f668ae132c07938e885cabed2dc56aba7c2b26488095",
                    "typeString": "literal_string \"COLLECTION_MANAGER_ROLE\""
                  }
                ],
                "id": 5985,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "1238:9:35",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 5987,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1238:36:35",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 6016,
              "nodeType": "Block",
              "src": "1579:121:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5997,
                      "name": "__MetaTxContext_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12602,
                      "src": "1589:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 5998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1589:22:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5999,
                  "nodeType": "ExpressionStatement",
                  "src": "1589:22:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 6003,
                              "name": "_freeport",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5992,
                              "src": "1638:9:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Freeport_$5574",
                                "typeString": "contract Freeport"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Freeport_$5574",
                                "typeString": "contract Freeport"
                              }
                            ],
                            "id": 6002,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1630:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6001,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1630:7:35",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1630:18:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 6007,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1660:1:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6006,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1652:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6005,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1652:7:35",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1652:10:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1630:32:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 6000,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1622:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 6010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1622:41:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6011,
                  "nodeType": "ExpressionStatement",
                  "src": "1622:41:35"
                },
                {
                  "expression": {
                    "id": 6014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6012,
                      "name": "freeport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5978,
                      "src": "1673:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freeport_$5574",
                        "typeString": "contract Freeport"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6013,
                      "name": "_freeport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5992,
                      "src": "1684:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freeport_$5574",
                        "typeString": "contract Freeport"
                      }
                    },
                    "src": "1673:20:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freeport_$5574",
                      "typeString": "contract Freeport"
                    }
                  },
                  "id": 6015,
                  "nodeType": "ExpressionStatement",
                  "src": "1673:20:35"
                }
              ]
            },
            "documentation": {
              "id": 5989,
              "nodeType": "StructuredDocumentation",
              "src": "1281:234:35",
              "text": "Set which NFT contract to refer to.\n The event `MinterAttachToNFT` is only supported for Freeport-compatible NFTs.\n The event `OwnerAttachToNFT` is supported for ERC-1155 NFTs, including Freeport."
            },
            "functionSelector": "c4d66de8",
            "id": 6017,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5995,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5994,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 884,
                  "src": "1567:11:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "1567:11:35"
              }
            ],
            "name": "initialize",
            "nameLocation": "1529:10:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5993,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5992,
                  "mutability": "mutable",
                  "name": "_freeport",
                  "nameLocation": "1549:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 6017,
                  "src": "1540:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Freeport_$5574",
                    "typeString": "contract Freeport"
                  },
                  "typeName": {
                    "id": 5991,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5990,
                      "name": "Freeport",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5574,
                      "src": "1540:8:35"
                    },
                    "referencedDeclaration": 5574,
                    "src": "1540:8:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freeport_$5574",
                      "typeString": "contract Freeport"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1539:20:35"
            },
            "returnParameters": {
              "id": 5996,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1579:0:35"
            },
            "scope": 6231,
            "src": "1520:180:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 6018,
              "nodeType": "StructuredDocumentation",
              "src": "1706:213:35",
              "text": "The account `minter` wished to attach data `attachment` to the NFT type `nftId`.\n The `minter` is the minter who created this NFT type, or may create it in the future if it does not exist."
            },
            "id": 6026,
            "name": "MinterAttachToNFT",
            "nameLocation": "1930:17:35",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6020,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "1973:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 6026,
                  "src": "1957:22:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6019,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1957:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6022,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "2005:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 6026,
                  "src": "1989:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6021,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1989:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6024,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "2026:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 6026,
                  "src": "2020:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6023,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2020:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1947:90:35"
            },
            "src": "1924:114:35"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 6027,
              "nodeType": "StructuredDocumentation",
              "src": "2044:179:35",
              "text": "The account `owner` wished to attach data `attachment` to the NFT type `nftId`.\n The `owner` owned at least one NFT of this type at the time of the event."
            },
            "id": 6035,
            "name": "OwnerAttachToNFT",
            "nameLocation": "2234:16:35",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6034,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6029,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "2276:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 6035,
                  "src": "2260:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6028,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2260:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6031,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "2307:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 6035,
                  "src": "2291:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6030,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2291:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6033,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "2328:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 6035,
                  "src": "2322:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6032,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2322:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2250:89:35"
            },
            "src": "2228:112:35"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 6036,
              "nodeType": "StructuredDocumentation",
              "src": "2346:260:35",
              "text": "The account `anonym` wished to attach data `attachment` to the NFT type `nftId`.\n There is absolutely no validation. It is the responsibility of the reader of this event to decide\n who the sender is and what the attachment means."
            },
            "id": 6044,
            "name": "AnonymAttachToNFT",
            "nameLocation": "2617:17:35",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6043,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6038,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "anonym",
                  "nameLocation": "2660:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 6044,
                  "src": "2644:22:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6037,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2644:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6040,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "2692:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 6044,
                  "src": "2676:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6039,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2676:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6042,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "2713:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 6044,
                  "src": "2707:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6041,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2707:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2634:90:35"
            },
            "src": "2611:114:35"
          },
          {
            "body": {
              "id": 6083,
              "nodeType": "Block",
              "src": "2975:280:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6053,
                          "name": "nftId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6047,
                          "src": "2993:5:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 6054,
                          "name": "CURRENCY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5982,
                          "src": "3002:8:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2993:17:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "30206973206e6f7420612076616c6964204e4654204944",
                        "id": 6056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3012:25:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        },
                        "value": "0 is not a valid NFT ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        }
                      ],
                      "id": 6052,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2985:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2985:53:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6058,
                  "nodeType": "ExpressionStatement",
                  "src": "2985:53:35"
                },
                {
                  "assignments": [
                    6060
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6060,
                      "mutability": "mutable",
                      "name": "minter",
                      "nameLocation": "3056:6:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 6083,
                      "src": "3048:14:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 6059,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3048:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6063,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 6061,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12639
                      ],
                      "referencedDeclaration": 12639,
                      "src": "3065:10:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 6062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3065:12:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3048:29:35"
                },
                {
                  "assignments": [
                    6065
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6065,
                      "mutability": "mutable",
                      "name": "actualMinter",
                      "nameLocation": "3095:12:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 6083,
                      "src": "3087:20:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 6064,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3087:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6069,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 6067,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6047,
                        "src": "3127:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6066,
                      "name": "_minterFromNftId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6230,
                      "src": "3110:16:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) pure returns (address)"
                      }
                    },
                    "id": 6068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3110:23:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3087:46:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6071,
                          "name": "minter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6060,
                          "src": "3151:6:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 6072,
                          "name": "actualMinter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6065,
                          "src": "3161:12:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3151:22:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206d696e746572",
                        "id": 6074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3175:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_578cb4a41adb75340d2cbfbdb0c6610ff4519d15e645cc9b4cc4c64336da99c6",
                          "typeString": "literal_string \"Only minter\""
                        },
                        "value": "Only minter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_578cb4a41adb75340d2cbfbdb0c6610ff4519d15e645cc9b4cc4c64336da99c6",
                          "typeString": "literal_string \"Only minter\""
                        }
                      ],
                      "id": 6070,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3143:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3143:46:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6076,
                  "nodeType": "ExpressionStatement",
                  "src": "3143:46:35"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 6078,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6060,
                        "src": "3222:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6079,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6047,
                        "src": "3230:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6080,
                        "name": "attachment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6049,
                        "src": "3237:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 6077,
                      "name": "MinterAttachToNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6026,
                      "src": "3204:17:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 6081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3204:44:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6082,
                  "nodeType": "EmitStatement",
                  "src": "3199:49:35"
                }
              ]
            },
            "documentation": {
              "id": 6045,
              "nodeType": "StructuredDocumentation",
              "src": "2731:159:35",
              "text": "Attach data `attachment` to the NFT type `nftId`, as the minter of this NFT type.\n This only works for NFT IDs in the Freeport format."
            },
            "functionSelector": "b85f8ca9",
            "id": 6084,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "minterAttachToNFT",
            "nameLocation": "2904:17:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6047,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "2930:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 6084,
                  "src": "2922:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6046,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2922:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6049,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "2952:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 6084,
                  "src": "2937:25:35",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6048,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2937:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2921:42:35"
            },
            "returnParameters": {
              "id": 6051,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2975:0:35"
            },
            "scope": 6231,
            "src": "2895:360:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6131,
              "nodeType": "Block",
              "src": "3500:397:35",
              "statements": [
                {
                  "assignments": [
                    6093,
                    6095,
                    6097
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6093,
                      "mutability": "mutable",
                      "name": "collection",
                      "nameLocation": "3519:10:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 6131,
                      "src": "3511:18:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 6092,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3511:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 6095,
                      "mutability": "mutable",
                      "name": "innerId",
                      "nameLocation": "3538:7:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 6131,
                      "src": "3531:14:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 6094,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3531:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 6097,
                      "mutability": "mutable",
                      "name": "zeroSupply",
                      "nameLocation": "3554:10:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 6131,
                      "src": "3547:17:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 6096,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "3547:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6101,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 6099,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6087,
                        "src": "3580:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6098,
                      "name": "_parseNftId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12031,
                      "src": "3568:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_address_$_t_uint32_$_t_uint64_$",
                        "typeString": "function (uint256) pure returns (address,uint32,uint64)"
                      }
                    },
                    "id": 6100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3568:18:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint32_$_t_uint64_$",
                      "typeString": "tuple(address,uint32,uint64)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3510:76:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 6105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6103,
                          "name": "zeroSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6097,
                          "src": "3604:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 6104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3618:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3604:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e465420666f726d6174206973206e6f7420636f6d70617469626c65207769746820436f6c6c656374696f6e73",
                        "id": 6106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3621:47:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_50d498e1bffeddda2687492473fae8648f1dd5f3e06221a4b00d5d69c75de74f",
                          "typeString": "literal_string \"NFT format is not compatible with Collections\""
                        },
                        "value": "NFT format is not compatible with Collections"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_50d498e1bffeddda2687492473fae8648f1dd5f3e06221a4b00d5d69c75de74f",
                          "typeString": "literal_string \"NFT format is not compatible with Collections\""
                        }
                      ],
                      "id": 6102,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3596:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3596:73:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6108,
                  "nodeType": "ExpressionStatement",
                  "src": "3596:73:35"
                },
                {
                  "assignments": [
                    6110
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6110,
                      "mutability": "mutable",
                      "name": "manager",
                      "nameLocation": "3688:7:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 6131,
                      "src": "3680:15:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 6109,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3680:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6113,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 6111,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12639
                      ],
                      "referencedDeclaration": 12639,
                      "src": "3698:10:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 6112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3698:12:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3680:30:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 6119,
                            "name": "COLLECTION_MANAGER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5988,
                            "src": "3759:23:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 6120,
                            "name": "manager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6110,
                            "src": "3784:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 6116,
                                "name": "collection",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6093,
                                "src": "3739:10:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 6115,
                              "name": "Collection",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4633,
                              "src": "3728:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Collection_$4633_$",
                                "typeString": "type(contract Collection)"
                              }
                            },
                            "id": 6117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3728:22:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Collection_$4633",
                              "typeString": "contract Collection"
                            }
                          },
                          "id": 6118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hasRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 170,
                          "src": "3728:30:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view external returns (bool)"
                          }
                        },
                        "id": 6121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3728:64:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "73656e646572206973206e6f7420636f6c6c656374696f6e206d616e61676572",
                        "id": 6122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3794:34:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c185758ad32283425b0465b5186ef5621a0f09a62aaaa687db5199ecbad2dafa",
                          "typeString": "literal_string \"sender is not collection manager\""
                        },
                        "value": "sender is not collection manager"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c185758ad32283425b0465b5186ef5621a0f09a62aaaa687db5199ecbad2dafa",
                          "typeString": "literal_string \"sender is not collection manager\""
                        }
                      ],
                      "id": 6114,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3720:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3720:109:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6124,
                  "nodeType": "ExpressionStatement",
                  "src": "3720:109:35"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 6126,
                        "name": "manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6110,
                        "src": "3863:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6127,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6087,
                        "src": "3872:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6128,
                        "name": "attachment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6089,
                        "src": "3879:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 6125,
                      "name": "MinterAttachToNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6026,
                      "src": "3845:17:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 6129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3845:45:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6130,
                  "nodeType": "EmitStatement",
                  "src": "3840:50:35"
                }
              ]
            },
            "documentation": {
              "id": 6085,
              "nodeType": "StructuredDocumentation",
              "src": "3261:143:35",
              "text": "Attach data `attachment` to the NFT type `nftId`, as manager of collection.\n This only works with NFTs on Collections."
            },
            "functionSelector": "1d250fa9",
            "id": 6132,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "collectionManagerAttachToNFT",
            "nameLocation": "3418:28:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6090,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6087,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "3455:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 6132,
                  "src": "3447:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6086,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3447:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6089,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "3477:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 6132,
                  "src": "3462:25:35",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6088,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3462:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3446:42:35"
            },
            "returnParameters": {
              "id": 6091,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3500:0:35"
            },
            "scope": 6231,
            "src": "3409:488:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6173,
              "nodeType": "Block",
              "src": "4164:277:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6141,
                          "name": "nftId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6135,
                          "src": "4182:5:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 6142,
                          "name": "CURRENCY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5982,
                          "src": "4191:8:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4182:17:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "30206973206e6f7420612076616c6964204e4654204944",
                        "id": 6144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4201:25:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        },
                        "value": "0 is not a valid NFT ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        }
                      ],
                      "id": 6140,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4174:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4174:53:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6146,
                  "nodeType": "ExpressionStatement",
                  "src": "4174:53:35"
                },
                {
                  "assignments": [
                    6148
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6148,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "4245:5:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 6173,
                      "src": "4237:13:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 6147,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4237:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6151,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 6149,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12639
                      ],
                      "referencedDeclaration": 12639,
                      "src": "4253:10:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 6150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4253:12:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4237:28:35"
                },
                {
                  "assignments": [
                    6153
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6153,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "4283:7:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 6173,
                      "src": "4275:15:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6152,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4275:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6159,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 6156,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6148,
                        "src": "4312:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6157,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6135,
                        "src": "4319:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6154,
                        "name": "freeport",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5978,
                        "src": "4293:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Freeport_$5574",
                          "typeString": "contract Freeport"
                        }
                      },
                      "id": 6155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14173,
                      "src": "4293:18:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 6158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4293:32:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4275:50:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6161,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6153,
                          "src": "4343:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 6162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4353:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4343:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792063757272656e74206f776e6572",
                        "id": 6164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4356:20:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_111b7c5d2b16684041cedd75c064e2306dd9ae18e93fc76a7b5be4886458a40b",
                          "typeString": "literal_string \"Only current owner\""
                        },
                        "value": "Only current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_111b7c5d2b16684041cedd75c064e2306dd9ae18e93fc76a7b5be4886458a40b",
                          "typeString": "literal_string \"Only current owner\""
                        }
                      ],
                      "id": 6160,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4335:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4335:42:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6166,
                  "nodeType": "ExpressionStatement",
                  "src": "4335:42:35"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 6168,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6148,
                        "src": "4409:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6169,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6135,
                        "src": "4416:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6170,
                        "name": "attachment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6137,
                        "src": "4423:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 6167,
                      "name": "OwnerAttachToNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6035,
                      "src": "4392:16:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 6171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4392:42:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6172,
                  "nodeType": "EmitStatement",
                  "src": "4387:47:35"
                }
              ]
            },
            "documentation": {
              "id": 6133,
              "nodeType": "StructuredDocumentation",
              "src": "3903:177:35",
              "text": "Attach data `attachment` to the NFT type `nftId`, as a current owner of an NFT of this type.\n This works for NFTs in the ERC-1155 or Freeport standards."
            },
            "functionSelector": "c0ba9f55",
            "id": 6174,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerAttachToNFT",
            "nameLocation": "4094:16:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6135,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "4119:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 6174,
                  "src": "4111:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6134,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4111:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6137,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "4141:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 6174,
                  "src": "4126:25:35",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6136,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4126:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4110:42:35"
            },
            "returnParameters": {
              "id": 6139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4164:0:35"
            },
            "scope": 6231,
            "src": "4085:356:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6200,
              "nodeType": "Block",
              "src": "4609:168:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6183,
                          "name": "nftId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6177,
                          "src": "4627:5:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 6184,
                          "name": "CURRENCY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5982,
                          "src": "4636:8:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4627:17:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "30206973206e6f7420612076616c6964204e4654204944",
                        "id": 6186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4646:25:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        },
                        "value": "0 is not a valid NFT ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        }
                      ],
                      "id": 6182,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4619:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4619:53:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6188,
                  "nodeType": "ExpressionStatement",
                  "src": "4619:53:35"
                },
                {
                  "assignments": [
                    6190
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6190,
                      "mutability": "mutable",
                      "name": "anonym",
                      "nameLocation": "4690:6:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 6200,
                      "src": "4682:14:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 6189,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4682:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6193,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 6191,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12639
                      ],
                      "referencedDeclaration": 12639,
                      "src": "4699:10:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 6192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4699:12:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4682:29:35"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 6195,
                        "name": "anonym",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6190,
                        "src": "4744:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6196,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6177,
                        "src": "4752:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6197,
                        "name": "attachment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6179,
                        "src": "4759:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 6194,
                      "name": "AnonymAttachToNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6044,
                      "src": "4726:17:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 6198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4726:44:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6199,
                  "nodeType": "EmitStatement",
                  "src": "4721:49:35"
                }
              ]
            },
            "documentation": {
              "id": 6175,
              "nodeType": "StructuredDocumentation",
              "src": "4447:77:35",
              "text": "Attach data `attachment` to the NFT type `nftId`, as any account."
            },
            "functionSelector": "f9715b8f",
            "id": 6201,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "anonymAttachToNFT",
            "nameLocation": "4538:17:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6177,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "4564:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 6201,
                  "src": "4556:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6176,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4556:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6179,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "4586:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 6201,
                  "src": "4571:25:35",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6178,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4571:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4555:42:35"
            },
            "returnParameters": {
              "id": 6181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4609:0:35"
            },
            "scope": 6231,
            "src": "4529:248:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6229,
              "nodeType": "Block",
              "src": "5084:153:35",
              "statements": [
                {
                  "expression": {
                    "id": 6225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6209,
                      "name": "minter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6207,
                      "src": "5094:6:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 6222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 6216,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 6214,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6204,
                                      "src": "5120:2:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&",
                                    "rightExpression": {
                                      "hexValue": "307846464646464646464646464646464646464646464646464646464646464646464646464646464646303030303030303030303030303030303030303030303030",
                                      "id": 6215,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5125:66:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665561335876943319670319585689600_by_1",
                                        "typeString": "int_const 1157...(70 digits omitted)...9600"
                                      },
                                      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000"
                                    },
                                    "src": "5120:71:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 6217,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "5119:73:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">>",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_rational_96_by_1",
                                      "typeString": "int_const 96"
                                    },
                                    "id": 6220,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "3332",
                                      "id": 6218,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5197:2:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_32_by_1",
                                        "typeString": "int_const 32"
                                      },
                                      "value": "32"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "hexValue": "3634",
                                      "id": 6219,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5202:2:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_64_by_1",
                                        "typeString": "int_const 64"
                                      },
                                      "value": "64"
                                    },
                                    "src": "5197:7:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_96_by_1",
                                      "typeString": "int_const 96"
                                    }
                                  }
                                ],
                                "id": 6221,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "5196:9:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_96_by_1",
                                  "typeString": "int_const 96"
                                }
                              },
                              "src": "5119:86:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 6213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5111:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint160_$",
                              "typeString": "type(uint160)"
                            },
                            "typeName": {
                              "id": 6212,
                              "name": "uint160",
                              "nodeType": "ElementaryTypeName",
                              "src": "5111:7:35",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5111:95:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        ],
                        "id": 6211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5103:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 6210,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5103:7:35",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 6224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5103:104:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5094:113:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6226,
                  "nodeType": "ExpressionStatement",
                  "src": "5094:113:35"
                },
                {
                  "expression": {
                    "id": 6227,
                    "name": "minter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6207,
                    "src": "5224:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 6208,
                  "id": 6228,
                  "nodeType": "Return",
                  "src": "5217:13:35"
                }
              ]
            },
            "documentation": {
              "id": 6202,
              "nodeType": "StructuredDocumentation",
              "src": "4783:217:35",
              "text": "Parse an NFT ID into its issuer, its supply, and an arbitrary nonce.\n This does not imply that the NFTs exist.\n This is specific to Freeport NFTs. See `freeportParts/Issuance.sol`"
            },
            "functionSelector": "d2e9277b",
            "id": 6230,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_minterFromNftId",
            "nameLocation": "5014:16:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6204,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "5039:2:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 6230,
                  "src": "5031:10:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6203,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5031:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5030:12:35"
            },
            "returnParameters": {
              "id": 6208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6207,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "5076:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 6230,
                  "src": "5068:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6206,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5068:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5067:16:35"
            },
            "scope": 6231,
            "src": "5005:232:35",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 6232,
        "src": "698:4541:35",
        "usedErrors": []
      }
    ],
    "src": "0:5240:35"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {
    "137": {
      "events": {},
      "links": {},
      "address": "0x651f2C6942F1c290632Ad5bB61D9ece789f82f35",
      "transactionHash": "0xef845d373ce27fdd9561113a6c4600bdc790c0ba64e7fb82680fcdb748be6e3a"
    },
    "80001": {
      "events": {},
      "links": {},
      "address": "0x39B27a0bc81C1366E2b05E02642Ef343a4f9223a",
      "transactionHash": "0x92ec7022f08438d916fd2d98943743e2675e69644821e7cff383912cf8604e8d"
    }
  },
  "schemaVersion": "3.4.9",
  "updatedAt": "2022-09-20T10:10:52.248Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "AnonymAttachToNFT(address,uint256,bytes)": {
        "notice": "The account `anonym` wished to attach data `attachment` to the NFT type `nftId`. There is absolutely no validation. It is the responsibility of the reader of this event to decide who the sender is and what the attachment means."
      },
      "MinterAttachToNFT(address,uint256,bytes)": {
        "notice": "The account `minter` wished to attach data `attachment` to the NFT type `nftId`. The `minter` is the minter who created this NFT type, or may create it in the future if it does not exist."
      },
      "OwnerAttachToNFT(address,uint256,bytes)": {
        "notice": "The account `owner` wished to attach data `attachment` to the NFT type `nftId`. The `owner` owned at least one NFT of this type at the time of the event."
      }
    },
    "kind": "user",
    "methods": {
      "COLLECTION_MANAGER_ROLE()": {
        "notice": "Collection manager role.  Used for configuring the amounts and beneficiaries of royalties on primary and secondary transfers of this NFT."
      },
      "_minterFromNftId(uint256)": {
        "notice": "Parse an NFT ID into its issuer, its supply, and an arbitrary nonce. This does not imply that the NFTs exist. This is specific to Freeport NFTs. See `freeportParts/Issuance.sol`"
      },
      "anonymAttachToNFT(uint256,bytes)": {
        "notice": "Attach data `attachment` to the NFT type `nftId`, as any account."
      },
      "collectionManagerAttachToNFT(uint256,bytes)": {
        "notice": "Attach data `attachment` to the NFT type `nftId`, as manager of collection. This only works with NFTs on Collections."
      },
      "freeport()": {
        "notice": "This attachment contract refers to the NFT contract in this variable."
      },
      "getGlobalNftId(uint32)": {
        "notice": "Calculate the global ID of an NFT type, identifying its inner nft id."
      },
      "initialize(address)": {
        "notice": "Set which NFT contract to refer to. The event `MinterAttachToNFT` is only supported for Freeport-compatible NFTs. The event `OwnerAttachToNFT` is supported for ERC-1155 NFTs, including Freeport."
      },
      "minterAttachToNFT(uint256,bytes)": {
        "notice": "Attach data `attachment` to the NFT type `nftId`, as the minter of this NFT type. This only works for NFT IDs in the Freeport format."
      },
      "ownerAttachToNFT(uint256,bytes)": {
        "notice": "Attach data `attachment` to the NFT type `nftId`, as a current owner of an NFT of this type. This works for NFTs in the ERC-1155 or Freeport standards."
      }
    },
    "notice": "The contract NFTAttachment allows users to attach objects to NFTs. Some application can listen for the events and interpret the objects in some way. There are three roles who can attach objects to an NFT: the minter, any current owner, or any anonymous account. A different event is emitted for each role. The attachment data is meant to identify an object hosted externally, such as a CID, a.k.a. Content Identifier, or a DDC URL. The content may be retrieved from Cere DDC or some other store.",
    "version": 1
  }
}