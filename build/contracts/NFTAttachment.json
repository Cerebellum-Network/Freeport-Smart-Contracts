{
  "contractName": "NFTAttachment",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "anonym",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "attachment",
          "type": "bytes"
        }
      ],
      "name": "AnonymAttachToNFT",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "attachment",
          "type": "bytes"
        }
      ],
      "name": "MinterAttachToNFT",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "attachment",
          "type": "bytes"
        }
      ],
      "name": "OwnerAttachToNFT",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "META_TX_FORWARDER",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "freeport",
      "outputs": [
        {
          "internalType": "contract Freeport",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Freeport",
          "name": "_freeport",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "attachment",
          "type": "bytes"
        }
      ],
      "name": "minterAttachToNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "attachment",
          "type": "bytes"
        }
      ],
      "name": "ownerAttachToNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "attachment",
          "type": "bytes"
        }
      ],
      "name": "anonymAttachToNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "_minterFromNftId",
      "outputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"anonym\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"attachment\",\"type\":\"bytes\"}],\"name\":\"AnonymAttachToNFT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"attachment\",\"type\":\"bytes\"}],\"name\":\"MinterAttachToNFT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"attachment\",\"type\":\"bytes\"}],\"name\":\"OwnerAttachToNFT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"META_TX_FORWARDER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"_minterFromNftId\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"attachment\",\"type\":\"bytes\"}],\"name\":\"anonymAttachToNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"freeport\",\"outputs\":[{\"internalType\":\"contract Freeport\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Freeport\",\"name\":\"_freeport\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"attachment\",\"type\":\"bytes\"}],\"name\":\"minterAttachToNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"attachment\",\"type\":\"bytes\"}],\"name\":\"ownerAttachToNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"events\":{\"AnonymAttachToNFT(address,uint256,bytes)\":{\"notice\":\"The account `anonym` wished to attach data `attachment` to the NFT type `nftId`. There is absolutely no validation. It is the responsibility of the reader of this event to decide who the sender is and what the attachment means.\"},\"MinterAttachToNFT(address,uint256,bytes)\":{\"notice\":\"The account `minter` wished to attach data `attachment` to the NFT type `nftId`. The `minter` is the minter who created this NFT type, or may create it in the future if it does not exist.\"},\"OwnerAttachToNFT(address,uint256,bytes)\":{\"notice\":\"The account `owner` wished to attach data `attachment` to the NFT type `nftId`. The `owner` owned at least one NFT of this type at the time of the event.\"}},\"kind\":\"user\",\"methods\":{\"_minterFromNftId(uint256)\":{\"notice\":\"Parse an NFT ID into its issuer, its supply, and an arbitrary nonce. This does not imply that the NFTs exist. This is specific to Freeport NFTs. See `freeportParts/Issuance.sol`\"},\"anonymAttachToNFT(uint256,bytes)\":{\"notice\":\"Attach data `attachment` to the NFT type `nftId`, as any account.\"},\"freeport()\":{\"notice\":\"This attachment contract refers to the NFT contract in this variable.\"},\"initialize(address)\":{\"notice\":\"Set which NFT contract to refer to. The event `MinterAttachToNFT` is only supported for Freeport-compatible NFTs. The event `OwnerAttachToNFT` is supported for ERC-1155 NFTs, including Freeport.\"},\"minterAttachToNFT(uint256,bytes)\":{\"notice\":\"Attach data `attachment` to the NFT type `nftId`, as the minter of this NFT type. This only works for NFT IDs in the Freeport format.\"},\"ownerAttachToNFT(uint256,bytes)\":{\"notice\":\"Attach data `attachment` to the NFT type `nftId`, as a current owner of an NFT of this type. This works for NFTs in the ERC-1155 or Freeport standards.\"}},\"notice\":\"The contract NFTAttachment allows users to attach objects to NFTs. Some application can listen for the events and interpret the objects in some way. There are three roles who can attach objects to an NFT: the minter, any current owner, or any anonymous account. A different event is emitted for each role. The attachment data is meant to identify an object hosted externally, such as a CID, a.k.a. Content Identifier, or a DDC URL. The content may be retrieved from Cere DDC or some other store.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/NFTAttachment.sol\":\"NFTAttachment\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x719f71989e630280a6902f857ef2b038d761ef2d0d51611f9da463be6c7c4be5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eada89c17578d8ffbadd76c7247397d37ccae1f8e0e2b6d26057117d3de2dbed\",\"dweb:/ipfs/QmS3zjZ5SdridEYWAaS7RXtRB9YnKVmN3T5Lq2Q7rjz2oT\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0xda94a85ba0a26d49cd327cc63b8b54fa5dde8f5d1c5f3c942237096ef896eff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a591e20787048963a028302f0157fea70eab83db641f020169a789effc7d7907\",\"dweb:/ipfs/QmXY3LKPvw5BMrjG4JxWZZ15RR2jhUDktNrZqHqyCewXBG\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0xce27d2053e9b7a970532947213c84eed0289ada2d9a91c92b7e1e15f3a466c54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://429b36651fab917b4cdfa5e9431b96c5bd3ba73392a31e62a4d92b4b4ae85184\",\"dweb:/ipfs/QmY1SgWuSbxgYCPAibNHT4phA71QzzqagZRunwC7Gm19wq\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x67d2f282a9678e58e878a0b774041ba7a01e2740a262aea97a3f681339914713\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://297df5725003e586651278a5d021b176457c5bb05a954c8490f21db2754e7352\",\"dweb:/ipfs/QmSe9AHjVnDn39NqT9hkjuCCGUwtc989WuZ5rWTe3GHrUD\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x6014667ab9e057c1810fcb7ef844123c581a34eb8dafc1aaa15f4e0f704620b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3abfde5dc879cf0ef670cd7357410b4fcf2a7ec76306e82f96cb4715b2c51d0\",\"dweb:/ipfs/Qme48SqUCFLhgtgg9ZSpmQuwvitujCkHjDhmDCAtsDgjA3\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol\":{\"keccak256\":\"0xd841c561258151c3c22f05feb68c702fc414b112606bd72b848e8a65af128c30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e949bb10f10df25903b0ec5eb13a8b9878996abd49897884062645a4123ffb2\",\"dweb:/ipfs/QmQ2Z3qegGykZLAf7Wt1y24wCxxnA3stRMHzy1LBFvxhtX\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol\":{\"keccak256\":\"0xa22cd3d499a04af4dbcc1b15877b69b611004ff02a2ab121e42226a6b6a88ab9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47b5420b49ecc4983f2810d413749289c357c58d2b0f3431b5b99cd3242ce17a\",\"dweb:/ipfs/QmUA8ydnDvHSdbXgkPhL3xSBitYj8vcC8XbWRFvKkCtJzH\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol\":{\"keccak256\":\"0x6d0b5e3282b9f7683eb822a01bd5351d01bd9225cd8153e366c9a54e89213165\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://180ac522b70db433d333f1e3998c9ad334d755bfa009ad7d08021bb446f28819\",\"dweb:/ipfs/QmT34uLFrzTEpDgm1SVrFibWcGTBdg8DbSKGNUH7vMRgVi\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x5642ae1d6b33c5c0b71a8412c6c64cbcf2468b84a002bee3e33cdb5644d25cdb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07ba474854eacf022fca2ab63af2b09653f476a9ef2d144ea3d022a0c0b92726\",\"dweb:/ipfs/QmVNfrArMejFSrPMktAtDte64FJ2fGPQHqgSXDz2SH6dse\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x8e9eb503de1189f50c5f16fef327da310b11898d6b9ab3ca937df07c35233b9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9631a7abcad07067f268b6295668a287e205ea9a8dc0fca02c2bf4db6c39431d\",\"dweb:/ipfs/QmUYFfB2AngTZLEsah4u8Z44riaB6yWkUXeasi1oG7ipfS\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0xc15eeb888d421aa4dedf46768a0502590d88911cfe5750d3ab9f644a7e5ada95\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f270653fd8d1a109e3e3aa77d5035a52f175b66604f924e0db1f71a5b38e708\",\"dweb:/ipfs/QmNiP7PvV47ahSvMwxCifeUExVNhyVXdd8Zu2hGz4XC32j\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6964377da5c19ade6b3e96bae0c0e82494d518af70cf12d2cdb3276f78fb3d85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6fdcd89cc451559fcf17eb5b0a657a4d6217809603ece8439f933f836521f31f\",\"dweb:/ipfs/QmU75qTF1VG5KUaxZv2TrFYDPLmkraeTdmAG4P4j1ehoa6\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x17c9c5d2d6b56527215ee7b3da6dde66b6f23f1b3d5c66cc436e753ef349a97a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd7c775bc6000f44c048796b5e013dbb3ec7592986bc289868b19ff9439ee31d\",\"dweb:/ipfs/QmSuBfTT9z9sEpmEcGihEc5DJGsXery8QyyuNfvub875ej\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0x1c4860acd323e34a67b3e97faab9aaa55fe8e92b1dcf08b5f47f3468d58ce75c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c2746f8ebb4bfb6b8e8a768296c7f85f11b36f4873daabb91933c3602f00590\",\"dweb:/ipfs/QmdumDez8WEdk9FDuP7Jp5pDSJiQeFtFSJw3B5CEHJL4KU\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"project:/contracts/Freeport.sol\":{\"keccak256\":\"0x001501a3c0ca27f755dd356ace2fae4bf88b31eeb2ac39464177861b0d75f9c5\",\"urls\":[\"bzz-raw://81bfe2fa98823dfc4791f279b165492022cca0030927f918294b62589e5a722f\",\"dweb:/ipfs/QmcSjxP44iN1MRHaSocw6aLeySA7g2dWKpsfQ55tH1xbXi\"]},\"project:/contracts/NFTAttachment.sol\":{\"keccak256\":\"0x38f603b6c69541ab197956454fd07a2aecce0c03e19320d7a29902a6af656301\",\"urls\":[\"bzz-raw://5219d3947953ef384ac070fdbacdbb39a6623107ca799383dcec44d86832456e\",\"dweb:/ipfs/QmbiUcxRdGz9cuqoapQuL4pqAguY9Wtf6xq3iw4UncL121\"]},\"project:/contracts/freeportParts/BaseNFT.sol\":{\"keccak256\":\"0x589571f85ae8cc227de3ea3b2c7b3d6f8dd5b977755c4c7303cc18c1aede3322\",\"urls\":[\"bzz-raw://33479f8d906835f681a11ae5eeb51af792726764e7a45dab082b84b617ef175c\",\"dweb:/ipfs/QmWaQQNmegKf1Nd2y4M5pnUNNKJQ6NaHQjXJgUC2MqUKwH\"]},\"project:/contracts/freeportParts/Currency.sol\":{\"keccak256\":\"0xc4e1878c459f9b7741a965245659e9e90d241ded479264c22f31efe15ed04aec\",\"urls\":[\"bzz-raw://d4bcafd88cde0d2cca84f87f999c4ba7d04409c3c62384da56f462a96eac3dc5\",\"dweb:/ipfs/QmfMnUk5CYRp6q9JiXTtc1cpoXDatwzSqRfkZjTAKdGHr2\"]},\"project:/contracts/freeportParts/ERC20Adapter.sol\":{\"keccak256\":\"0x7298ad1106ffa5af90d35bf47e214dc28c705f99a3796d644e92b3a492d273b7\",\"urls\":[\"bzz-raw://2ad2298e77090a93310f10e78ba2bfdd5712f2183d662328e197665e1e1d8857\",\"dweb:/ipfs/QmWdotY9DB6a6W2m6qkNKDXeuL7M7Shff45QTii2ktwBUm\"]},\"project:/contracts/freeportParts/Issuance.sol\":{\"keccak256\":\"0x2ad87f9d53ef79b786e42190971299a4f0e39fb79aee633ca0ab469e9de95bc1\",\"urls\":[\"bzz-raw://c9c3a7f4ea314854a765be29600ca30e5433d4fd28db9185c619471206a2a5df\",\"dweb:/ipfs/QmT3V1DywQ6wkvZ32gH6ai3qQrBYB7XsvYPGMkhWCkbTWt\"]},\"project:/contracts/freeportParts/JointAccounts.sol\":{\"keccak256\":\"0xf35f669c65346b421322355b744f2a071275f298a1fa9a630b7a73df91fdf540\",\"urls\":[\"bzz-raw://7ec2c162ecd046754a762d80eff3c113421bb0c82bc888f1caf50314174d706e\",\"dweb:/ipfs/QmNVdvKAaPwRJLvQBBj381fr1xDhuqD1KFoFDbLDs3z9BQ\"]},\"project:/contracts/freeportParts/MetaTxContext.sol\":{\"keccak256\":\"0xdd37428ab4740cc4cba878f25999c0f94949a1446c2d5ee30d164352a909cc20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95c7a0d9223e6d7ef3cf4cbe2d22db198823c11ffb8ed269a7cd31b1c8ba8e1d\",\"dweb:/ipfs/QmWsD5hNAfT6zktKkUbYrMhF1ZGP8t9cC31jk9mUFSkmgY\"]},\"project:/contracts/freeportParts/SimpleExchange.sol\":{\"keccak256\":\"0x8815647aaba57fe5175439ca22f5cfe7adffdf959cf19f74ad6079b329dc46ba\",\"urls\":[\"bzz-raw://999515bd8f5e71417a672e4426d2b1961bc0a94ffa01c9154f8f4907c0afb15f\",\"dweb:/ipfs/QmfZ2tcZT6LoWVLWyaUGUqUa8wU8bvxpmnnEUERJBuc3g5\"]},\"project:/contracts/freeportParts/TransferFees.sol\":{\"keccak256\":\"0xcb640511c6c8316cc452ec87d9cdc2c74b75dacb01d636e1b94b266f7771ca2d\",\"urls\":[\"bzz-raw://7fd1e06a180dc3995714fd50bba969445a0a1164fd2db6b5407b37edee3eb01a\",\"dweb:/ipfs/QmU75hREyE73AiHioN81T7Sp5z3FFPQx55T7t3nwFwi3uQ\"]},\"project:/contracts/freeportParts/TransferOperator.sol\":{\"keccak256\":\"0x430f18b7e8e7a369ec254705a064d2411fe0fe2cd1ce546baaedd03aa965edc2\",\"urls\":[\"bzz-raw://b4f8a0c647e900ec91c0ea26614b8318fdaf6cfccc9234538b99e31c92ef635f\",\"dweb:/ipfs/QmUASapjiTqxuYC1dp5EmBKjs4Nh9VzaQGbs2CPTokM9TQ\"]},\"project:/contracts/freeportParts/Upgradeable.sol\":{\"keccak256\":\"0x6edf744da7d19533558fd19dd9db50151671d137603363efd2c69c6bad46434a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23dedf9f686f3f736a593d0e3f4b7609c1fe919c969ac82036d1ad68d4c04fdd\",\"dweb:/ipfs/QmU7BcQKJHBVQ91kYacbeUKUC8YBuF2GTrGdrYLBDBzdBi\"]},\"project:/contracts/token/ERC1155/ERC1155Upgradeable.sol\":{\"keccak256\":\"0xd0615c826e26d02b5a981f933b8a9bd27f9459e440397b165e5fcc014b41a835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c02c9558d39e1b6a85b74d07b3c621acdd7740718bb59b2beef8fed0c3b4203\",\"dweb:/ipfs/QmVe9NXaqmuYcWpkaznDqGfv1sGFQsteb5RzaVHZT8UuGZ\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100ce5760003560e01c806301ffc9a7146100d3578063248a9ca3146101085780632f2ff15d1461013657806336568abe146101585780633659cfe6146101785780634f1ef28614610198578063572b6c05146101ab57806391d14854146101cb5780639470ad85146101eb5780639a86e8ce14610218578063a217fddf1461023a578063b85f8ca91461024f578063c0ba9f551461026f578063c4d66de81461028f578063d2e9277b146102af578063d547741f146102d0578063f9715b8f146102f0575b600080fd5b3480156100df57600080fd5b506100f36100ee36600461116d565b610310565b60405190151581526020015b60405180910390f35b34801561011457600080fd5b50610128610123366004611126565b610347565b6040519081526020016100ff565b34801561014257600080fd5b5061015661015136600461113e565b61035c565b005b34801561016457600080fd5b5061015661017336600461113e565b610385565b34801561018457600080fd5b5061015661019336600461104c565b610418565b6101566101a6366004611068565b61043f565b3480156101b757600080fd5b506100f36101c636600461104c565b610454565b3480156101d757600080fd5b506100f36101e636600461113e565b61046a565b3480156101f757600080fd5b5060fb5461020b906001600160a01b031681565b6040516100ff91906112ae565b34801561022457600080fd5b506101286000805160206114aa83398151915281565b34801561024657600080fd5b50610128600081565b34801561025b57600080fd5b5061015661026a3660046111ad565b610495565b34801561027b57600080fd5b5061015661028a3660046111ad565b610566565b34801561029b57600080fd5b506101566102aa36600461104c565b610698565b3480156102bb57600080fd5b5061020b6102ca366004611126565b60601c90565b3480156102dc57600080fd5b506101566102eb36600461113e565b61073a565b3480156102fc57600080fd5b5061015661030b3660046111ad565b610759565b60006001600160e01b03198216637965db0b60e01b148061034157506301ffc9a760e01b6001600160e01b03198316145b92915050565b600090815260c9602052604090206001015490565b61036582610347565b610376816103716107cc565b6107ee565b6103808383610852565b505050565b61038d6107cc565b6001600160a01b0316816001600160a01b03161461040a5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61041482826108d9565b5050565b6104218161095e565b61043c816040518060200160405280600081525060006109a2565b50565b6104488261095e565b610414828260016109a2565b60006103416000805160206114aa833981519152835b600091825260c9602090815260408084206001600160a01b0393909316845291905290205460ff1690565b826104b25760405162461bcd60e51b815260040161040190611372565b60006104bc6107cc565b905060006104ca8560601c90565b9050806001600160a01b0316826001600160a01b03161461051b5760405162461bcd60e51b815260206004820152600b60248201526a27b7363c9036b4b73a32b960a91b6044820152606401610401565b84826001600160a01b03167f5dc5ea79bba163c4e3f9a2bb5350dbe8490685a9191001c5b4422b37f880d32286866040516105579291906112c2565b60405180910390a35050505050565b826105835760405162461bcd60e51b815260040161040190611372565b600061058d6107cc565b60fb54604051627eeac760e11b81526001600160a01b038084166004830152602482018890529293506000929091169062fdd58e9060440160206040518083038186803b1580156105dd57600080fd5b505afa1580156105f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106159190611195565b90506000811161065c5760405162461bcd60e51b815260206004820152601260248201527127b7363c9031bab93932b73a1037bbb732b960711b6044820152606401610401565b84826001600160a01b03167f70b7e5963956c4cbfbe79063259fc0996d3333c155342ae9110ca45e85995a5586866040516105579291906112c2565b600054610100900460ff16806106b1575060005460ff16155b6106cd5760405162461bcd60e51b815260040161040190611324565b600054610100900460ff161580156106ef576000805461ffff19166101011790555b6106f7610b1e565b6001600160a01b03821661070a57600080fd5b60fb80546001600160a01b0319166001600160a01b0384161790558015610414576000805461ff00191690555050565b61074382610347565b61074f816103716107cc565b61038083836108d9565b826107765760405162461bcd60e51b815260040161040190611372565b60006107806107cc565b905083816001600160a01b03167f4d1230ca9d634685a91b90e38709c77299e0c7591f7ac427d6cd88cf0f6114bf85856040516107be9291906112c2565b60405180910390a350505050565b60006107d733610454565b156107e9575060131936013560601c90565b503390565b6107f8828261046a565b61041457610810816001600160a01b03166014610b28565b61081b836020610b28565b60405160200161082c92919061123f565b60408051601f198184030181529082905262461bcd60e51b8252610401916004016112f1565b61085c828261046a565b61041457600082815260c9602090815260408083206001600160a01b03851684529091529020805460ff191660011790556108956107cc565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6108e3828261046a565b1561041457600082815260c9602090815260408083206001600160a01b03851684529091529020805460ff1916905561091a6107cc565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b61096960003361046a565b61043c5760405162461bcd60e51b815260206004820152600a60248201526927b7363c9020b236b4b760b11b6044820152606401610401565b60006109ac610d10565b90506109b784610d2c565b6000835111806109c45750815b156109d5576109d38484610dbf565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff16610b1757805460ff19166001178155604051610a50908690610a219085906024016112ae565b60408051601f198184030181529190526020810180516001600160e01b0316631b2ce7f360e11b179052610dbf565b50805460ff19168155610a61610d10565b6001600160a01b0316826001600160a01b031614610ad95760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201526e75727468657220757067726164657360881b6064820152608401610401565b610ae285610d2c565b6040516001600160a01b038616907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a25b5050505050565b610b26610eaa565b565b60606000610b378360026113bb565b610b429060026113a3565b6001600160401b03811115610b6757634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610b91576020820181803683370190505b509050600360fc1b81600081518110610bba57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610bf757634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000610c1b8460026113bb565b610c269060016113a3565b90505b6001811115610cba576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610c6857634e487b7160e01b600052603260045260246000fd5b1a60f81b828281518110610c8c57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c93610cb38161140a565b9050610c29565b508315610d095760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610401565b9392505050565b600080516020611463833981519152546001600160a01b031690565b803b610d905760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610401565b60008051602061146383398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060823b610e1e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610401565b600080846001600160a01b031684604051610e399190611223565b600060405180830381855af49150503d8060008114610e74576040519150601f19603f3d011682016040523d82523d6000602084013e610e79565b606091505b5091509150610ea1828260405180606001604052806027815260200161148360279139610ec5565b95945050505050565b610eb2610efe565b610eba610f79565b610b26600033610fd8565b60608315610ed4575081610d09565b825115610ee45782518084602001fd5b8160405162461bcd60e51b815260040161040191906112f1565b600054610100900460ff1680610f17575060005460ff16155b610f335760405162461bcd60e51b815260040161040190611324565b600054610100900460ff16158015610f55576000805461ffff19166101011790555b610f5d610fe2565b610f65610fe2565b801561043c576000805461ff001916905550565b600054610100900460ff1680610f92575060005460ff16155b610fae5760405162461bcd60e51b815260040161040190611324565b600054610100900460ff16158015610fd0576000805461ffff19166101011790555b610f55610fe2565b6104148282610852565b600054610100900460ff1680610ffb575060005460ff16155b6110175760405162461bcd60e51b815260040161040190611324565b600054610100900460ff16158015610f65576000805461ffff1916610101179055801561043c576000805461ff001916905550565b60006020828403121561105d578081fd5b8135610d098161144d565b6000806040838503121561107a578081fd5b82356110858161144d565b915060208301356001600160401b03808211156110a0578283fd5b818501915085601f8301126110b3578283fd5b8135818111156110c5576110c5611437565b604051601f8201601f19908116603f011681019083821181831017156110ed576110ed611437565b81604052828152886020848701011115611105578586fd5b82602086016020830137856020848301015280955050505050509250929050565b600060208284031215611137578081fd5b5035919050565b60008060408385031215611150578182fd5b8235915060208301356111628161144d565b809150509250929050565b60006020828403121561117e578081fd5b81356001600160e01b031981168114610d09578182fd5b6000602082840312156111a6578081fd5b5051919050565b6000806000604084860312156111c1578081fd5b8335925060208401356001600160401b03808211156111de578283fd5b818601915086601f8301126111f1578283fd5b8135818111156111ff578384fd5b876020828501011115611210578384fd5b6020830194508093505050509250925092565b600082516112358184602087016113da565b9190910192915050565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b8152600083516112718160178501602088016113da565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516112a28160288401602088016113da565b01602801949350505050565b6001600160a01b0391909116815260200190565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b60208152600082518060208401526113108160408501602087016113da565b601f01601f19169190910160400192915050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252601790820152760c081a5cc81b9bdd0818481d985b1a5908139195081251604a1b604082015260600190565b600082198211156113b6576113b6611421565b500190565b60008160001904831182151516156113d5576113d5611421565b500290565b60005b838110156113f55781810151838201526020016113dd565b83811115611404576000848401525b50505050565b60008161141957611419611421565b506000190190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461043c57600080fdfe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c65643d2e894c222ba979e2dce2c7d940c0e9bb14306669e9f034eb1bb3979a2069d8a264697066735822122060d2cddcfc3159c641e54b8394a422fe4768435ce6a976157e67b92a322b993464736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:11459:65",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:65",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:187:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:65"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:65"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "165:36:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "191:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "178:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "178:23:65"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "169:5:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "235:5:65"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "210:24:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:31:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "210:31:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "250:15:65",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "260:5:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "250:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:65",
                "type": ""
              }
            ],
            "src": "14:257:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "372:1005:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "418:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "427:6:65"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "435:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "420:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "420:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "420:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "393:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "402:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "389:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "389:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "414:2:65",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "385:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "385:32:65"
                  },
                  "nodeType": "YulIf",
                  "src": "382:2:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "453:36:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "479:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "466:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "466:23:65"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "457:5:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "523:5:65"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "498:24:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "498:31:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "498:31:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "538:15:65",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "548:5:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "538:6:65"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "562:46:65",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "593:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "604:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "589:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "589:18:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "576:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "576:32:65"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "566:6:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "617:28:65",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "635:2:65",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "639:1:65",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "631:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:10:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "643:1:65",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "627:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "627:18:65"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "621:2:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "672:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "681:6:65"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "689:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "674:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "674:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "674:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "660:6:65"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "668:2:65"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "657:2:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "657:14:65"
                  },
                  "nodeType": "YulIf",
                  "src": "654:2:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "707:32:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "721:9:65"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "732:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "717:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "717:22:65"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "711:2:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "787:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "796:6:65"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "804:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "789:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "789:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "789:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "766:2:65"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "770:4:65",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "762:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "762:13:65"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "777:7:65"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "758:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "758:27:65"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "751:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "751:35:65"
                  },
                  "nodeType": "YulIf",
                  "src": "748:2:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "822:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "845:2:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "832:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "832:16:65"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "826:2:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "871:22:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "873:16:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "873:18:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "873:18:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "863:2:65"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "867:2:65"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "860:2:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "860:10:65"
                  },
                  "nodeType": "YulIf",
                  "src": "857:2:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "902:17:65",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "916:2:65",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "912:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "912:7:65"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "906:2:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "928:23:65",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "948:2:65",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "942:5:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "942:9:65"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "932:6:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "960:71:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "982:6:65"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "1006:2:65"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1010:4:65",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1002:3:65"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1002:13:65"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1017:2:65"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "998:3:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "998:22:65"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1022:2:65",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "994:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "994:31:65"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "1027:2:65"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "990:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "990:40:65"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "978:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "978:53:65"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "964:10:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1090:22:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1092:16:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1092:18:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1092:18:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1049:10:65"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1061:2:65"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1046:2:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1046:18:65"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1069:10:65"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1081:6:65"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1066:2:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1066:22:65"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1043:2:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1043:46:65"
                  },
                  "nodeType": "YulIf",
                  "src": "1040:2:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1128:2:65",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1132:10:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1121:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1121:22:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1121:22:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1159:6:65"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1167:2:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1152:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1152:18:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1152:18:65"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1216:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1225:6:65"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1233:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1218:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1218:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1218:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1193:2:65"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1197:2:65"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1189:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1189:11:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1202:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1185:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1185:20:65"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1207:7:65"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1182:2:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1182:33:65"
                  },
                  "nodeType": "YulIf",
                  "src": "1179:2:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1268:6:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1276:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1264:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1264:15:65"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1285:2:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1289:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1281:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1281:11:65"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1294:2:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "1251:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1251:46:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1251:46:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1321:6:65"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1329:2:65"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1317:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1317:15:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1334:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1313:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1313:24:65"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1339:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1306:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1306:40:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1306:40:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1355:16:65",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1365:6:65"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1355:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "330:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "341:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "353:6:65",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "361:6:65",
                "type": ""
              }
            ],
            "src": "276:1101:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1452:120:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1498:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1507:6:65"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1515:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1500:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1500:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1500:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1473:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1482:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1469:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1469:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1494:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1465:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1465:32:65"
                  },
                  "nodeType": "YulIf",
                  "src": "1462:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1533:33:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1556:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1543:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1543:23:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1533:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1418:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1429:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1441:6:65",
                "type": ""
              }
            ],
            "src": "1382:190:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1664:238:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1710:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1719:6:65"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1727:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1712:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1712:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1712:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1685:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1694:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1681:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1681:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1706:2:65",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1677:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1677:32:65"
                  },
                  "nodeType": "YulIf",
                  "src": "1674:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1745:33:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1768:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1755:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1755:23:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1745:6:65"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1787:45:65",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1817:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1828:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1813:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1813:18:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1800:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1800:32:65"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1791:5:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1866:5:65"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1841:24:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1841:31:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1841:31:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1881:15:65",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1891:5:65"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1881:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1622:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1633:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1645:6:65",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1653:6:65",
                "type": ""
              }
            ],
            "src": "1577:325:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1976:237:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2022:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2031:6:65"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2039:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2024:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2024:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2024:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1997:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2006:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1993:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1993:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2018:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1989:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1989:32:65"
                  },
                  "nodeType": "YulIf",
                  "src": "1986:2:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2057:36:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2083:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2070:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2070:23:65"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2061:5:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2157:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2166:6:65"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2174:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2159:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2159:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2159:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2115:5:65"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2126:5:65"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2137:3:65",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2142:10:65",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2133:3:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2133:20:65"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2122:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2122:32:65"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2112:2:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2112:43:65"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2105:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2105:51:65"
                  },
                  "nodeType": "YulIf",
                  "src": "2102:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2192:15:65",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2202:5:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2192:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1942:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1953:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1965:6:65",
                "type": ""
              }
            ],
            "src": "1907:306:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2305:187:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2351:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2360:6:65"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2368:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2353:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2353:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2353:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2326:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2335:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2322:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2322:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2347:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2318:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2318:32:65"
                  },
                  "nodeType": "YulIf",
                  "src": "2315:2:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2386:36:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2412:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2399:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2399:23:65"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2390:5:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2456:5:65"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2431:24:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2431:31:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2431:31:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2471:15:65",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2481:5:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2471:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_Freeport_$5302",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2271:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2282:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2294:6:65",
                "type": ""
              }
            ],
            "src": "2218:274:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2567:120:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2613:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2622:6:65"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2630:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2615:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2615:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2615:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2588:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2597:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2584:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2584:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2609:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2580:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2580:32:65"
                  },
                  "nodeType": "YulIf",
                  "src": "2577:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2648:33:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2671:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2658:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2658:23:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2648:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2533:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2544:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2556:6:65",
                "type": ""
              }
            ],
            "src": "2497:190:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2773:113:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2819:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2828:6:65"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2836:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2821:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2821:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2821:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2794:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2803:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2790:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2790:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2815:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2786:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2786:32:65"
                  },
                  "nodeType": "YulIf",
                  "src": "2783:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2854:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2870:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2864:5:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2864:16:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2854:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2739:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2750:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2762:6:65",
                "type": ""
              }
            ],
            "src": "2692:194:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2997:603:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3043:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "3052:6:65"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "3060:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3045:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3045:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3045:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3018:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3027:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3014:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3014:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3039:2:65",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3010:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3010:32:65"
                  },
                  "nodeType": "YulIf",
                  "src": "3007:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3078:33:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3101:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3088:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3088:23:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3078:6:65"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3120:46:65",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3151:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3162:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3147:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3147:18:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3134:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3134:32:65"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "3124:6:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3175:28:65",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3193:2:65",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3197:1:65",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3189:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3189:10:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3201:1:65",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3185:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3185:18:65"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3179:2:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3230:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "3239:6:65"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "3247:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3232:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3232:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3232:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3218:6:65"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3226:2:65"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3215:2:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3215:14:65"
                  },
                  "nodeType": "YulIf",
                  "src": "3212:2:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3265:32:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3279:9:65"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3290:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3275:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3275:22:65"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "3269:2:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3345:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "3354:6:65"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "3362:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3347:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3347:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3347:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "3324:2:65"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3328:4:65",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3320:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3320:13:65"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3335:7:65"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3316:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3316:27:65"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3309:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3309:35:65"
                  },
                  "nodeType": "YulIf",
                  "src": "3306:2:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3380:30:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "3407:2:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3394:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3394:16:65"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3384:6:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3437:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "3446:6:65"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "3454:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3439:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3439:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3439:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3425:6:65"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3433:2:65"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3422:2:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3422:14:65"
                  },
                  "nodeType": "YulIf",
                  "src": "3419:2:65"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3513:26:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "3522:6:65"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "3530:6:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3515:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3515:22:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3515:22:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "3486:2:65"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "3490:6:65"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3482:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3482:15:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3499:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3478:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3478:24:65"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3504:7:65"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3475:2:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3475:37:65"
                  },
                  "nodeType": "YulIf",
                  "src": "3472:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3548:21:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "3562:2:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3566:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3558:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3558:11:65"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3548:6:65"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3578:16:65",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "3588:6:65"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3578:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2947:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2958:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2970:6:65",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2978:6:65",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2986:6:65",
                "type": ""
              }
            ],
            "src": "2891:709:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3742:137:65",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3752:27:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3772:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3766:5:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3766:13:65"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3756:6:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3814:6:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3822:4:65",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3810:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3810:17:65"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3829:3:65"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3834:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3788:21:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3788:53:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3788:53:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3850:23:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3861:3:65"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3866:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3857:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3857:16:65"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3850:3:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3718:3:65",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3723:6:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3734:3:65",
                "type": ""
              }
            ],
            "src": "3605:274:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4273:397:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4290:3:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4295:25:65",
                        "type": "",
                        "value": "AccessControl: account "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4283:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4283:38:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4283:38:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4330:27:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4350:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4344:5:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4344:13:65"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4334:6:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4392:6:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4400:4:65",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4388:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4388:17:65"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4411:3:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4416:2:65",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4407:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4407:12:65"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4421:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "4366:21:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4366:62:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4366:62:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4437:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4451:3:65"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4456:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4447:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4447:16:65"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4441:2:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4483:2:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4487:2:65",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4479:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4479:11:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4492:19:65",
                        "type": "",
                        "value": " is missing role "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4472:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4472:40:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4472:40:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4521:29:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4543:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4537:5:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4537:13:65"
                  },
                  "variables": [
                    {
                      "name": "length_1",
                      "nodeType": "YulTypedName",
                      "src": "4525:8:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4585:6:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4593:4:65",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4581:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4581:17:65"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4604:2:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4608:2:65",
                            "type": "",
                            "value": "40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4600:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4600:11:65"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "4613:8:65"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "4559:21:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4559:63:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4559:63:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4631:33:65",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4646:2:65"
                          },
                          {
                            "name": "length_1",
                            "nodeType": "YulIdentifier",
                            "src": "4650:8:65"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4642:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4642:17:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4661:2:65",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4638:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4638:26:65"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4631:3:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4241:3:65",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4246:6:65",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4254:6:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4265:3:65",
                "type": ""
              }
            ],
            "src": "3884:786:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4776:102:65",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4786:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4798:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4809:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4794:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4794:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4786:4:65"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4828:9:65"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4843:6:65"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4859:3:65",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4864:1:65",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4855:3:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4855:11:65"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4868:1:65",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4851:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4851:19:65"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4839:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4839:32:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4821:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4821:51:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4821:51:65"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4745:9:65",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4756:6:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4767:4:65",
                "type": ""
              }
            ],
            "src": "4675:203:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5012:145:65",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5022:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5034:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5045:2:65",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5030:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5030:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5022:4:65"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5064:9:65"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5079:6:65"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5095:3:65",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5100:1:65",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "5091:3:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5091:11:65"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5104:1:65",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5087:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5087:19:65"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5075:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5075:32:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5057:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5057:51:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5057:51:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5128:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5139:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5124:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5124:18:65"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5144:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5117:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5117:34:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5117:34:65"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4973:9:65",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4984:6:65",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4992:6:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5003:4:65",
                "type": ""
              }
            ],
            "src": "4883:274:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5257:92:65",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5267:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5279:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5290:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5275:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5275:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5267:4:65"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5309:9:65"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5334:6:65"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5327:6:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5327:14:65"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5320:6:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5320:22:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5302:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5302:41:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5302:41:65"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5226:9:65",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5237:6:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5248:4:65",
                "type": ""
              }
            ],
            "src": "5162:187:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5455:76:65",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5465:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5477:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5488:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5473:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5473:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5465:4:65"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5507:9:65"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5518:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5500:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5500:25:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5500:25:65"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5424:9:65",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5435:6:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5446:4:65",
                "type": ""
              }
            ],
            "src": "5354:177:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5665:262:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5682:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5693:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5675:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5675:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5675:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5716:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5727:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5712:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5712:18:65"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5732:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5705:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5705:34:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5705:34:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5765:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5776:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5761:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5761:18:65"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5781:6:65"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5789:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "5748:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5748:48:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5748:48:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5820:9:65"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "5831:6:65"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5816:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5816:22:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5840:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5812:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5812:31:65"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5845:4:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5805:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5805:45:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5805:45:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5859:62:65",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5875:9:65"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5894:6:65"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5902:2:65",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5890:3:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5890:15:65"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5911:2:65",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "5907:3:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5907:7:65"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5886:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5886:29:65"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5871:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5871:45:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5918:2:65",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5867:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5867:54:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5859:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5626:9:65",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5637:6:65",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5645:6:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5656:4:65",
                "type": ""
              }
            ],
            "src": "5536:391:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6050:102:65",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6060:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6072:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6083:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6068:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6068:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6060:4:65"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6102:9:65"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6117:6:65"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6133:3:65",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6138:1:65",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "6129:3:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6129:11:65"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6142:1:65",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "6125:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6125:19:65"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6113:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6113:32:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6095:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6095:51:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6095:51:65"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Freeport_$5302__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6019:9:65",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6030:6:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6041:4:65",
                "type": ""
              }
            ],
            "src": "5932:220:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6278:262:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6295:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6306:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6288:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6288:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6288:21:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6318:27:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6338:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6332:5:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6332:13:65"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "6322:6:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6365:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6376:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6361:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6361:18:65"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6381:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6354:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6354:34:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6354:34:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6423:6:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6431:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6419:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6419:15:65"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6440:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6451:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6436:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6436:18:65"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6456:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "6397:21:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6397:66:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6397:66:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6472:62:65",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6488:9:65"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6507:6:65"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6515:2:65",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6503:3:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6503:15:65"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6524:2:65",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "6520:3:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6520:7:65"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "6499:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6499:29:65"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6484:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6484:45:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6531:2:65",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6480:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6480:54:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6472:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6247:9:65",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6258:6:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6269:4:65",
                "type": ""
              }
            ],
            "src": "6157:383:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6719:182:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6736:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6747:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6729:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6729:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6729:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6770:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6781:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6766:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6766:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6786:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6759:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6759:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6759:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6809:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6820:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6805:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6805:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6825:34:65",
                        "type": "",
                        "value": "Strings: hex length insufficient"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6798:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6798:62:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6798:62:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6869:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6881:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6892:2:65",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6877:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6877:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6869:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6696:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6710:4:65",
                "type": ""
              }
            ],
            "src": "6545:356:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7080:168:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7097:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7108:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7090:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7090:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7090:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7131:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7142:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7127:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7127:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7147:2:65",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7120:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7120:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7120:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7170:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7181:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7166:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7166:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7186:20:65",
                        "type": "",
                        "value": "Only current owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7159:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7159:48:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7159:48:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7216:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7228:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7239:2:65",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7224:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7224:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7216:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_111b7c5d2b16684041cedd75c064e2306dd9ae18e93fc76a7b5be4886458a40b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7057:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7071:4:65",
                "type": ""
              }
            ],
            "src": "6906:342:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7427:237:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7444:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7455:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7437:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7437:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7437:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7478:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7489:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7474:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7474:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7494:2:65",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7467:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7467:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7467:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7517:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7528:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7513:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7513:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7533:34:65",
                        "type": "",
                        "value": "ERC1967Upgrade: upgrade breaks f"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7506:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7506:62:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7506:62:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7588:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7599:2:65",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7584:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7584:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7604:17:65",
                        "type": "",
                        "value": "urther upgrades"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7577:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7577:45:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7577:45:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7631:27:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7643:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7654:3:65",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7639:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7639:19:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7631:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2425ea74e68e4bcd365d89824a06e1475543dcbb6a12bf699e5abf6b11b9b6ed__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7404:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7418:4:65",
                "type": ""
              }
            ],
            "src": "7253:411:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7843:161:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7860:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7871:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7853:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7853:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7853:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7894:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7905:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7890:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7890:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7910:2:65",
                        "type": "",
                        "value": "11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7883:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7883:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7883:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7933:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7944:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7929:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7929:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7949:13:65",
                        "type": "",
                        "value": "Only minter"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7922:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7922:41:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7922:41:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7972:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7984:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7995:2:65",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7980:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7980:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7972:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_578cb4a41adb75340d2cbfbdb0c6610ff4519d15e645cc9b4cc4c64336da99c6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7820:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7834:4:65",
                "type": ""
              }
            ],
            "src": "7669:335:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8183:236:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8200:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8211:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8193:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8193:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8193:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8234:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8245:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8230:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8230:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8250:2:65",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8223:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8223:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8223:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8273:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8284:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8269:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8269:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8289:34:65",
                        "type": "",
                        "value": "Initializable: contract is alrea"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8262:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8262:62:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8262:62:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8344:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8355:2:65",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8340:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8340:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8360:16:65",
                        "type": "",
                        "value": "dy initialized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8333:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8333:44:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8333:44:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8386:27:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8398:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8409:3:65",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8394:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8394:19:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8386:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8160:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8174:4:65",
                "type": ""
              }
            ],
            "src": "8009:410:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8598:235:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8615:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8626:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8608:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8608:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8608:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8649:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8660:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8645:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8645:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8665:2:65",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8638:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8638:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8638:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8688:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8699:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8684:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8684:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8704:34:65",
                        "type": "",
                        "value": "ERC1967: new implementation is n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8677:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8677:62:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8677:62:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8759:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8770:2:65",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8755:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8755:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8775:15:65",
                        "type": "",
                        "value": "ot a contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8748:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8748:43:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8748:43:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8800:27:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8812:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8823:3:65",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8808:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8808:19:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8800:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8575:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8589:4:65",
                "type": ""
              }
            ],
            "src": "8424:409:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9012:173:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9029:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9040:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9022:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9022:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9022:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9063:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9074:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9059:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9059:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9079:2:65",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9052:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9052:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9052:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9102:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9113:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9098:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9098:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9118:25:65",
                        "type": "",
                        "value": "0 is not a valid NFT ID"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9091:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9091:53:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9091:53:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9153:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9165:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9176:2:65",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9161:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9161:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9153:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8989:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9003:4:65",
                "type": ""
              }
            ],
            "src": "8838:347:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9364:228:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9381:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9392:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9374:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9374:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9374:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9415:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9426:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9411:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9411:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9431:2:65",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9404:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9404:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9404:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9454:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9465:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9450:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9450:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9470:34:65",
                        "type": "",
                        "value": "Address: delegate call to non-co"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9443:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9443:62:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9443:62:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9525:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9536:2:65",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9521:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9521:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9541:8:65",
                        "type": "",
                        "value": "ntract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9514:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9514:36:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9514:36:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9559:27:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9571:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9582:3:65",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9567:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9567:19:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9559:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9341:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9355:4:65",
                "type": ""
              }
            ],
            "src": "9190:402:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9771:160:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9788:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9799:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9781:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9781:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9781:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9822:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9833:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9818:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9818:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9838:2:65",
                        "type": "",
                        "value": "10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9811:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9811:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9811:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9861:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9872:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9857:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9857:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9877:12:65",
                        "type": "",
                        "value": "Only Admin"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9850:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9850:40:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9850:40:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9899:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9911:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9922:2:65",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9907:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9907:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9899:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c13c296baebb1f79b18541a06c39b3d56ce1654fd26fe72a62e2fb7efe67be9a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9748:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9762:4:65",
                "type": ""
              }
            ],
            "src": "9597:334:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10110:237:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10127:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10138:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10120:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10120:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10120:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10161:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10172:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10157:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10157:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10177:2:65",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10150:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10150:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10150:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10200:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10211:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10196:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10196:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10216:34:65",
                        "type": "",
                        "value": "AccessControl: can only renounce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10189:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10189:62:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10189:62:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10271:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10282:2:65",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10267:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10267:18:65"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10287:17:65",
                        "type": "",
                        "value": " roles for self"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10260:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10260:45:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10260:45:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10314:27:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10326:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10337:3:65",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10322:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10322:19:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10314:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10087:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10101:4:65",
                "type": ""
              }
            ],
            "src": "9936:411:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10400:80:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10427:22:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10429:16:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10429:18:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10429:18:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10416:1:65"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "10423:1:65"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "10419:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10419:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10413:2:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10413:13:65"
                  },
                  "nodeType": "YulIf",
                  "src": "10410:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10458:16:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10469:1:65"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10472:1:65"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10465:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10465:9:65"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "10458:3:65"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10383:1:65",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10386:1:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "10392:3:65",
                "type": ""
              }
            ],
            "src": "10352:128:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10537:116:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10596:22:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10598:16:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10598:18:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10598:18:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "10568:1:65"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "10561:6:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10561:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "10554:6:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10554:17:65"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "10576:1:65"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10587:1:65",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "10583:3:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10583:6:65"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "10591:1:65"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "10579:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10579:14:65"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "10573:2:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10573:21:65"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "10550:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10550:45:65"
                  },
                  "nodeType": "YulIf",
                  "src": "10547:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10627:20:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10642:1:65"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10645:1:65"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "10638:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10638:9:65"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "10627:7:65"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10516:1:65",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10519:1:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "10525:7:65",
                "type": ""
              }
            ],
            "src": "10485:168:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10711:205:65",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10721:10:65",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "10730:1:65",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "10725:1:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10790:63:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "10815:3:65"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "10820:1:65"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "10811:3:65"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10811:11:65"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "10834:3:65"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "10839:1:65"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "10830:3:65"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "10830:11:65"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "10824:5:65"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10824:18:65"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10804:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10804:39:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10804:39:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "10751:1:65"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10754:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "10748:2:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10748:13:65"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "10762:19:65",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10764:15:65",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "10773:1:65"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10776:2:65",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "10769:3:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10769:10:65"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "10764:1:65"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "10744:3:65",
                    "statements": []
                  },
                  "src": "10740:113:65"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10879:31:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "10892:3:65"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "10897:6:65"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "10888:3:65"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10888:16:65"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10906:1:65",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10881:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10881:27:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10881:27:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "10868:1:65"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10871:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10865:2:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10865:13:65"
                  },
                  "nodeType": "YulIf",
                  "src": "10862:2:65"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "10689:3:65",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "10694:3:65",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "10699:6:65",
                "type": ""
              }
            ],
            "src": "10658:258:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10968:89:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10995:22:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10997:16:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10997:18:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10997:18:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10988:5:65"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10981:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10981:13:65"
                  },
                  "nodeType": "YulIf",
                  "src": "10978:2:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11026:25:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11037:5:65"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11048:1:65",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "11044:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11044:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11033:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11033:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "11026:3:65"
                    }
                  ]
                }
              ]
            },
            "name": "decrement_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10950:5:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "10960:3:65",
                "type": ""
              }
            ],
            "src": "10921:136:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11094:95:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11111:1:65",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11118:3:65",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11123:10:65",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "11114:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11114:20:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11104:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11104:31:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11104:31:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11151:1:65",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11154:4:65",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11144:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11144:15:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11144:15:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11175:1:65",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11178:4:65",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "11168:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11168:15:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11168:15:65"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "11062:127:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11226:95:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11243:1:65",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11250:3:65",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11255:10:65",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "11246:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11246:20:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11236:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11236:31:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11236:31:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11283:1:65",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11286:4:65",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11276:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11276:15:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11276:15:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11307:1:65",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11310:4:65",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "11300:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11300:15:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11300:15:65"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "11194:127:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11371:86:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11435:16:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11444:1:65",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11447:1:65",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11437:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11437:12:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11437:12:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11394:5:65"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11405:5:65"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11420:3:65",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11425:1:65",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "11416:3:65"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11416:11:65"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11429:1:65",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "11412:3:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11412:19:65"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "11401:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11401:31:65"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "11391:2:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11391:42:65"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11384:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11384:50:65"
                  },
                  "nodeType": "YulIf",
                  "src": "11381:2:65"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11360:5:65",
                "type": ""
              }
            ],
            "src": "11326:131:65"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(value1, value1) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value1, value1) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(value1, value1) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), value1)\n        value1 := memPtr\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_Freeport_$5302(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value2, value2) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(value2, value2) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value2, value2) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(value2, value2) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(value2, value2) }\n        value1 := add(_2, 32)\n        value2 := length\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), value1)\n        calldatacopy(add(headStart, 64), value0, value1)\n        mstore(add(add(headStart, value1), 64), tail)\n        tail := add(add(headStart, and(add(value1, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_contract$_Freeport_$5302__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_111b7c5d2b16684041cedd75c064e2306dd9ae18e93fc76a7b5be4886458a40b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Only current owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2425ea74e68e4bcd365d89824a06e1475543dcbb6a12bf699e5abf6b11b9b6ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: upgrade breaks f\")\n        mstore(add(headStart, 96), \"urther upgrades\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_578cb4a41adb75340d2cbfbdb0c6610ff4519d15e645cc9b4cc4c64336da99c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Only minter\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"0 is not a valid NFT ID\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: delegate call to non-co\")\n        mstore(add(headStart, 96), \"ntract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c13c296baebb1f79b18541a06c39b3d56ce1654fd26fe72a62e2fb7efe67be9a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"Only Admin\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
      "id": 65,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "626:3629:35:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "626:3629:35:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4473:225:0;;;;;;;;;;-1:-1:-1;4473:225:0;;;;;:::i;:::-;;:::i;:::-;;;5327:14:65;;5320:22;5302:41;;5290:2;5275:18;4473:225:0;;;;;;;;5781:121;;;;;;;;;;-1:-1:-1;5781:121:0;;;;;:::i;:::-;;:::i;:::-;;;5500:25:65;;;5488:2;5473:18;5781:121:0;5455:76:65;6152:145:0;;;;;;;;;;-1:-1:-1;6152:145:0;;;;;:::i;:::-;;:::i;:::-;;7169:214;;;;;;;;;;-1:-1:-1;7169:214:0;;;;;:::i;:::-;;:::i;882:186:4:-;;;;;;;;;;-1:-1:-1;882:186:4;;;;;:::i;:::-;;:::i;1074:214::-;;;;;;:::i;:::-;;:::i;426:143:49:-;;;;;;;;;;-1:-1:-1;426:143:49;;;;;:::i;:::-;;:::i;4785:137:0:-;;;;;;;;;;-1:-1:-1;4785:137:0;;;;;:::i;:::-;;:::i;780:24:35:-;;;;;;;;;;-1:-1:-1;780:24:35;;;;-1:-1:-1;;;;;780:24:35;;;;;;;;;;:::i;345:74:49:-;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;345:74:49;;2794:49:0;;;;;;;;;;-1:-1:-1;2794:49:0;2839:4;2794:49;;2553:360:35;;;;;;;;;;-1:-1:-1;2553:360:35;;;;;:::i;:::-;;:::i;3101:356::-;;;;;;;;;;-1:-1:-1;3101:356:35;;;;;:::i;:::-;;:::i;1178:180::-;;;;;;;;;;-1:-1:-1;1178:180:35;;;;;:::i;:::-;;:::i;4021:232::-;;;;;;;;;;-1:-1:-1;4021:232:35;;;;;:::i;:::-;4213:7;4135:86;;4021:232;6531:147:0;;;;;;;;;;-1:-1:-1;6531:147:0;;;;;:::i;:::-;;:::i;3545:248:35:-;;;;;;;;;;-1:-1:-1;3545:248:35;;;;;:::i;:::-;;:::i;4473:225:0:-;4558:4;-1:-1:-1;;;;;;4581:58:0;;-1:-1:-1;;;4581:58:0;;:110;;-1:-1:-1;;;;;;;;;;1127:51:15;;;4655:36:0;4574:117;4473:225;-1:-1:-1;;4473:225:0:o;5781:121::-;5847:7;5873:12;;;:6;:12;;;;;:22;;;;5781:121::o;6152:145::-;6235:18;6248:4;6235:12;:18::i;:::-;4358:30;4369:4;4375:12;:10;:12::i;:::-;4358:10;:30::i;:::-;6265:25:::1;6276:4;6282:7;6265:10;:25::i;:::-;6152:145:::0;;;:::o;7169:214::-;7275:12;:10;:12::i;:::-;-1:-1:-1;;;;;7264:23:0;:7;-1:-1:-1;;;;;7264:23:0;;7256:83;;;;-1:-1:-1;;;7256:83:0;;10138:2:65;7256:83:0;;;10120:21:65;10177:2;10157:18;;;10150:30;10216:34;10196:18;;;10189:62;-1:-1:-1;;;10267:18:65;;;10260:45;10322:19;;7256:83:0;;;;;;;;;7350:26;7362:4;7368:7;7350:11;:26::i;:::-;7169:214;;:::o;882:186:4:-;955:36;973:17;955;:36::i;:::-;1001:60;1025:17;1044:9;;;;;;;;;;;;1055:5;1001:23;:60::i;:::-;882:186;:::o;1074:214::-;1181:36;1199:17;1181;:36::i;:::-;1227:54;1251:17;1270:4;1276;1227:23;:54::i;426:143:49:-;502:4;525:37;-1:-1:-1;;;;;;;;;;;552:9:49;4785:137:0;4863:4;4886:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;4886:29:0;;;;;;;;;;;;;;;4785:137::o;2553:360:35:-;2651:17;2643:53;;;;-1:-1:-1;;;2643:53:35;;;;;;;:::i;:::-;2706:14;2723:12;:10;:12::i;:::-;2706:29;;2745:20;2768:23;2785:5;4213:7;4135:86;;4021:232;2768:23;2745:46;;2819:12;-1:-1:-1;;;;;2809:22:35;:6;-1:-1:-1;;;;;2809:22:35;;2801:46;;;;-1:-1:-1;;;2801:46:35;;7871:2:65;2801:46:35;;;7853:21:65;7910:2;7890:18;;;7883:30;-1:-1:-1;;;7929:18:65;;;7922:41;7980:18;;2801:46:35;7843:161:65;2801:46:35;2888:5;2880:6;-1:-1:-1;;;;;2862:44:35;;2895:10;;2862:44;;;;;;;:::i;:::-;;;;;;;;2553:360;;;;;:::o;3101:356::-;3198:17;3190:53;;;;-1:-1:-1;;;3190:53:35;;;;;;;:::i;:::-;3253:13;3269:12;:10;:12::i;:::-;3309:8;;:32;;-1:-1:-1;;;3309:32:35;;-1:-1:-1;;;;;5075:32:65;;;3309::35;;;5057:51:65;5124:18;;;5117:34;;;3253:28:35;;-1:-1:-1;3291:15:35;;3309:8;;;;:18;;5030::65;;3309:32:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3291:50;;3369:1;3359:7;:11;3351:42;;;;-1:-1:-1;;;3351:42:35;;7108:2:65;3351:42:35;;;7090:21:65;7147:2;7127:18;;;7120:30;-1:-1:-1;;;7166:18:65;;;7159:48;7224:18;;3351:42:35;7080:168:65;3351:42:35;3432:5;3425;-1:-1:-1;;;;;3408:42:35;;3439:10;;3408:42;;;;;;;:::i;1178:180::-;1456:13:3;;;;;;;;:30;;-1:-1:-1;1474:12:3;;;;1473:13;1456:30;1448:89;;;;-1:-1:-1;;;1448:89:3;;;;;;;:::i;:::-;1548:19;1571:13;;;;;;1570:14;1594:98;;;;1628:13;:20;;-1:-1:-1;;1662:19:3;;;;;1594:98;1247:22:35::1;:20;:22::i;:::-;-1:-1:-1::0;;;;;1288:32:35;::::1;1280:41;;;::::0;::::1;;1331:8;:20:::0;;-1:-1:-1;;;;;;1331:20:35::1;-1:-1:-1::0;;;;;1331:20:35;::::1;;::::0;;1714:66:3;;;;1764:5;1748:21;;-1:-1:-1;;1748:21:3;;;1178:180:35;;:::o;6531:147:0:-;6615:18;6628:4;6615:12;:18::i;:::-;4358:30;4369:4;4375:12;:10;:12::i;4358:30::-;6645:26:::1;6657:4;6663:7;6645:11;:26::i;3545:248:35:-:0;3643:17;3635:53;;;;-1:-1:-1;;;3635:53:35;;;;;;;:::i;:::-;3698:14;3715:12;:10;:12::i;:::-;3698:29;;3768:5;3760:6;-1:-1:-1;;;;;3742:44:35;;3775:10;;3742:44;;;;;;;:::i;:::-;;;;;;;;3545:248;;;;:::o;575:371:49:-;637:14;667:30;686:10;667:18;:30::i;:::-;663:277;;;-1:-1:-1;;;852:14:49;848:23;835:37;831:2;827:46;575:371;:::o;816:58::-;-1:-1:-1;901:10:11;;575:371:49:o;5203:397:0:-;5282:22;5290:4;5296:7;5282;:22::i;:::-;5278:316;;5411:52;5450:7;-1:-1:-1;;;;;5411:52:0;5460:2;5411:30;:52::i;:::-;5518:49;5557:4;5564:2;5518:30;:49::i;:::-;5334:247;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5334:247:0;;;;;;;;;;-1:-1:-1;;;5320:263:0;;;;;;;:::i;8381:224::-;8455:22;8463:4;8469:7;8455;:22::i;:::-;8450:149;;8493:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8493:29:0;;;;;;;;;:36;;-1:-1:-1;;8493:36:0;8525:4;8493:36;;;8575:12;:10;:12::i;:::-;-1:-1:-1;;;;;8548:40:0;8566:7;-1:-1:-1;;;;;8548:40:0;8560:4;8548:40;;;;;;;;;;8381:224;;:::o;8611:225::-;8685:22;8693:4;8699:7;8685;:22::i;:::-;8681:149;;;8755:5;8723:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8723:29:0;;;;;;;;;:37;;-1:-1:-1;;8723:37:0;;;8806:12;:10;:12::i;:::-;-1:-1:-1;;;;;8779:40:0;8797:7;-1:-1:-1;;;;;8779:40:0;8791:4;8779:40;;;;;;;;;;8611:225;;:::o;575:151:55:-;665:39;2839:4:0;693:10:55;665:7;:39::i;:::-;657:62;;;;-1:-1:-1;;;657:62:55;;9799:2:65;657:62:55;;;9781:21:65;9838:2;9818:18;;;9811:30;-1:-1:-1;;;9857:18:65;;;9850:40;9907:18;;657:62:55;9771:160:65;2851:1322:1;2965:25;2993:20;:18;:20::i;:::-;2965:48;;3066:37;3085:17;3066:18;:37::i;:::-;3131:1;3117:4;:11;:15;:28;;;;3136:9;3117:28;3113:105;;;3161:46;3183:17;3202:4;3161:21;:46::i;:::-;;3113:105;844:66;3417:21;;;;3412:755;;3530:28;;-1:-1:-1;;3530:28:1;3554:4;3530:28;;;3646:122;;3572:210;;3611:17;;3646:122;;3733:17;;3646:122;;;:::i;:::-;;;;-1:-1:-1;;3646:122:1;;;;;;;;;;;;;;-1:-1:-1;;;;;3646:122:1;-1:-1:-1;;;3646:122:1;;;3572:21;:210::i;:::-;-1:-1:-1;3796:29:1;;-1:-1:-1;;3796:29:1;;;3912:20;:18;:20::i;:::-;-1:-1:-1;;;;;3891:41:1;:17;-1:-1:-1;;;;;3891:41:1;;3883:101;;;;-1:-1:-1;;;3883:101:1;;7455:2:65;3883:101:1;;;7437:21:65;7494:2;7474:18;;;7467:30;7533:34;7513:18;;;7506:62;-1:-1:-1;;;7584:18:65;;;7577:45;7639:19;;3883:101:1;7427:237:65;3883:101:1;4073:37;4092:17;4073:18;:37::i;:::-;4129:27;;-1:-1:-1;;;;;4129:27:1;;;;;;;;3412:755;2851:1322;;;;;:::o;261:78:49:-;312:20;:18;:20::i;:::-;261:78::o;1542:437:13:-;1617:13;1642:19;1674:10;1678:6;1674:1;:10;:::i;:::-;:14;;1687:1;1674:14;:::i;:::-;-1:-1:-1;;;;;1664:25:13;;;;;-1:-1:-1;;;1664:25:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1664:25:13;;1642:47;;-1:-1:-1;;;1699:6:13;1706:1;1699:9;;;;;;-1:-1:-1;;;1699:9:13;;;;;;;;;;;;:15;-1:-1:-1;;;;;1699:15:13;;;;;;;;;-1:-1:-1;;;1724:6:13;1731:1;1724:9;;;;;;-1:-1:-1;;;1724:9:13;;;;;;;;;;;;:15;-1:-1:-1;;;;;1724:15:13;;;;;;;;-1:-1:-1;1754:9:13;1766:10;1770:6;1766:1;:10;:::i;:::-;:14;;1779:1;1766:14;:::i;:::-;1754:26;;1749:128;1786:1;1782;:5;1749:128;;;-1:-1:-1;;;1829:5:13;1837:3;1829:11;1820:21;;;;;-1:-1:-1;;;1820:21:13;;;;;;;;;;;;1808:6;1815:1;1808:9;;;;;;-1:-1:-1;;;1808:9:13;;;;;;;;;;;;:33;-1:-1:-1;;;;;1808:33:13;;;;;;;;-1:-1:-1;1865:1:13;1855:11;;;;;1789:3;;;:::i;:::-;;;1749:128;;;-1:-1:-1;1894:10:13;;1886:55;;;;-1:-1:-1;;;1886:55:13;;6747:2:65;1886:55:13;;;6729:21:65;;;6766:18;;;6759:30;6825:34;6805:18;;;6798:62;6877:18;;1886:55:13;6719:182:65;1886:55:13;1965:6;1542:437;-1:-1:-1;;;1542:437:13:o;1456:151:1:-;-1:-1:-1;;;;;;;;;;;1535:65:1;-1:-1:-1;;;;;1535:65:1;;1456:151::o;1698:281::-;1089:20:10;;1771:106:1;;;;-1:-1:-1;;;1771:106:1;;8626:2:65;1771:106:1;;;8608:21:65;8665:2;8645:18;;;8638:30;8704:34;8684:18;;;8677:62;-1:-1:-1;;;8755:18:65;;;8748:43;8808:19;;1771:106:1;8598:235:65;1771:106:1;-1:-1:-1;;;;;;;;;;;1887:85:1;;-1:-1:-1;;;;;;1887:85:1;-1:-1:-1;;;;;1887:85:1;;;;;;;;;;1698:281::o;7352:437::-;7435:12;1089:20:10;;7459:88:1;;;;-1:-1:-1;;;7459:88:1;;9392:2:65;7459:88:1;;;9374:21:65;9431:2;9411:18;;;9404:30;9470:34;9450:18;;;9443:62;-1:-1:-1;;;9521:18:65;;;9514:36;9567:19;;7459:88:1;9364:228:65;7459:88:1;7618:12;7632:23;7659:6;-1:-1:-1;;;;;7659:19:1;7679:4;7659:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7617:67;;;;7701:81;7719:7;7728:10;7701:81;;;;;;;;;;;;;;;;;:17;:81::i;:::-;7694:88;7352:437;-1:-1:-1;;;;;7352:437:1:o;404:165:55:-;453:24;:22;:24::i;:::-;487:22;:20;:22::i;:::-;520:42;2839:4:0;551:10:55;520;:42::i;7795:725:1:-;7910:12;7938:7;7934:580;;;-1:-1:-1;7968:10:1;7961:17;;7934:580;8079:17;;:21;8075:429;;8337:10;8331:17;8397:15;8384:10;8380:2;8376:19;8369:44;8286:145;8476:12;8469:20;;-1:-1:-1;;;8469:20:1;;;;;;;;:::i;650:149:4:-;1456:13:3;;;;;;;;:30;;-1:-1:-1;1474:12:3;;;;1473:13;1456:30;1448:89;;;;-1:-1:-1;;;1448:89:3;;;;;;;:::i;:::-;1548:19;1571:13;;;;;;1570:14;1594:98;;;;1628:13;:20;;-1:-1:-1;;1662:19:3;;;;;1594:98;715:33:4::1;:31;:33::i;:::-;758:34;:32;:34::i;:::-;1718:14:3::0;1714:66;;;1764:5;1748:21;;-1:-1:-1;;1748:21:3;;;650:149:4;:::o;2390:173:0:-;1456:13:3;;;;;;;;:30;;-1:-1:-1;1474:12:3;;;;1473:13;1456:30;1448:89;;;;-1:-1:-1;;;1448:89:3;;;;;;;:::i;:::-;1548:19;1571:13;;;;;;1570:14;1594:98;;;;1628:13;:20;;-1:-1:-1;;1662:19:3;;;;;1594:98;2453:26:0::1;:24;:26::i;7948:110::-:0;8026:25;8037:4;8043:7;8026:10;:25::i;647:71:1:-;1456:13:3;;;;;;;;:30;;-1:-1:-1;1474:12:3;;;;1473:13;1456:30;1448:89;;;;-1:-1:-1;;;1448:89:3;;;;;;;:::i;:::-;1548:19;1571:13;;;;;;1570:14;1594:98;;;;1628:13;:20;;-1:-1:-1;;1662:19:3;;;;;1714:66;;;;1764:5;1748:21;;-1:-1:-1;;1748:21:3;;;647:71:1;:::o;14:257:65:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:31;235:5;210:31;:::i;276:1101::-;353:6;361;414:2;402:9;393:7;389:23;385:32;382:2;;;435:6;427;420:22;382:2;479:9;466:23;498:31;523:5;498:31;:::i;:::-;548:5;-1:-1:-1;604:2:65;589:18;;576:32;-1:-1:-1;;;;;657:14:65;;;654:2;;;689:6;681;674:22;654:2;732:6;721:9;717:22;707:32;;777:7;770:4;766:2;762:13;758:27;748:2;;804:6;796;789:22;748:2;845;832:16;867:2;863;860:10;857:2;;;873:18;;:::i;:::-;948:2;942:9;916:2;1002:13;;-1:-1:-1;;998:22:65;;;1022:2;994:31;990:40;978:53;;;1046:18;;;1066:22;;;1043:46;1040:2;;;1092:18;;:::i;:::-;1132:10;1128:2;1121:22;1167:2;1159:6;1152:18;1207:7;1202:2;1197;1193;1189:11;1185:20;1182:33;1179:2;;;1233:6;1225;1218:22;1179:2;1294;1289;1285;1281:11;1276:2;1268:6;1264:15;1251:46;1339:6;1334:2;1329;1321:6;1317:15;1313:24;1306:40;1365:6;1355:16;;;;;;;372:1005;;;;;:::o;1382:190::-;1441:6;1494:2;1482:9;1473:7;1469:23;1465:32;1462:2;;;1515:6;1507;1500:22;1462:2;-1:-1:-1;1543:23:65;;1452:120;-1:-1:-1;1452:120:65:o;1577:325::-;1645:6;1653;1706:2;1694:9;1685:7;1681:23;1677:32;1674:2;;;1727:6;1719;1712:22;1674:2;1768:9;1755:23;1745:33;;1828:2;1817:9;1813:18;1800:32;1841:31;1866:5;1841:31;:::i;:::-;1891:5;1881:15;;;1664:238;;;;;:::o;1907:306::-;1965:6;2018:2;2006:9;1997:7;1993:23;1989:32;1986:2;;;2039:6;2031;2024:22;1986:2;2070:23;;-1:-1:-1;;;;;;2122:32:65;;2112:43;;2102:2;;2174:6;2166;2159:22;2692:194;2762:6;2815:2;2803:9;2794:7;2790:23;2786:32;2783:2;;;2836:6;2828;2821:22;2783:2;-1:-1:-1;2864:16:65;;2773:113;-1:-1:-1;2773:113:65:o;2891:709::-;2970:6;2978;2986;3039:2;3027:9;3018:7;3014:23;3010:32;3007:2;;;3060:6;3052;3045:22;3007:2;3088:23;;;-1:-1:-1;3162:2:65;3147:18;;3134:32;-1:-1:-1;;;;;3215:14:65;;;3212:2;;;3247:6;3239;3232:22;3212:2;3290:6;3279:9;3275:22;3265:32;;3335:7;3328:4;3324:2;3320:13;3316:27;3306:2;;3362:6;3354;3347:22;3306:2;3407;3394:16;3433:2;3425:6;3422:14;3419:2;;;3454:6;3446;3439:22;3419:2;3504:7;3499:2;3490:6;3486:2;3482:15;3478:24;3475:37;3472:2;;;3530:6;3522;3515:22;3472:2;3566;3562;3558:11;3548:21;;3588:6;3578:16;;;;;2997:603;;;;;:::o;3605:274::-;3734:3;3772:6;3766:13;3788:53;3834:6;3829:3;3822:4;3814:6;3810:17;3788:53;:::i;:::-;3857:16;;;;;3742:137;-1:-1:-1;;3742:137:65:o;3884:786::-;-1:-1:-1;;;4290:3:65;4283:38;4265:3;4350:6;4344:13;4366:62;4421:6;4416:2;4411:3;4407:12;4400:4;4392:6;4388:17;4366:62;:::i;:::-;-1:-1:-1;;;4487:2:65;4447:16;;;4479:11;;;4472:40;4537:13;;4559:63;4537:13;4608:2;4600:11;;4593:4;4581:17;;4559:63;:::i;:::-;4642:17;4661:2;4638:26;;4273:397;-1:-1:-1;;;;4273:397:65:o;4675:203::-;-1:-1:-1;;;;;4839:32:65;;;;4821:51;;4809:2;4794:18;;4776:102::o;5536:391::-;5693:2;5682:9;5675:21;5732:6;5727:2;5716:9;5712:18;5705:34;5789:6;5781;5776:2;5765:9;5761:18;5748:48;5656:4;5816:22;;;5840:2;5812:31;;;5805:45;;;;5911:2;5890:15;;;-1:-1:-1;;5886:29:65;5871:45;5867:54;;5665:262;-1:-1:-1;5665:262:65:o;6157:383::-;6306:2;6295:9;6288:21;6269:4;6338:6;6332:13;6381:6;6376:2;6365:9;6361:18;6354:34;6397:66;6456:6;6451:2;6440:9;6436:18;6431:2;6423:6;6419:15;6397:66;:::i;:::-;6524:2;6503:15;-1:-1:-1;;6499:29:65;6484:45;;;;6531:2;6480:54;;6278:262;-1:-1:-1;;6278:262:65:o;8009:410::-;8211:2;8193:21;;;8250:2;8230:18;;;8223:30;8289:34;8284:2;8269:18;;8262:62;-1:-1:-1;;;8355:2:65;8340:18;;8333:44;8409:3;8394:19;;8183:236::o;8838:347::-;9040:2;9022:21;;;9079:2;9059:18;;;9052:30;-1:-1:-1;;;9113:2:65;9098:18;;9091:53;9176:2;9161:18;;9012:173::o;10352:128::-;10392:3;10423:1;10419:6;10416:1;10413:13;10410:2;;;10429:18;;:::i;:::-;-1:-1:-1;10465:9:65;;10400:80::o;10485:168::-;10525:7;10591:1;10587;10583:6;10579:14;10576:1;10573:21;10568:1;10561:9;10554:17;10550:45;10547:2;;;10598:18;;:::i;:::-;-1:-1:-1;10638:9:65;;10537:116::o;10658:258::-;10730:1;10740:113;10754:6;10751:1;10748:13;10740:113;;;10830:11;;;10824:18;10811:11;;;10804:39;10776:2;10769:10;10740:113;;;10871:6;10868:1;10865:13;10862:2;;;10906:1;10897:6;10892:3;10888:16;10881:27;10862:2;;10711:205;;;:::o;10921:136::-;10960:3;10988:5;10978:2;;10997:18;;:::i;:::-;-1:-1:-1;;;11033:18:65;;10968:89::o;11062:127::-;11123:10;11118:3;11114:20;11111:1;11104:31;11154:4;11151:1;11144:15;11178:4;11175:1;11168:15;11194:127;11255:10;11250:3;11246:20;11243:1;11236:31;11286:4;11283:1;11276:15;11310:4;11307:1;11300:15;11326:131;-1:-1:-1;;;;;11401:31:65;;11391:42;;11381:2;;11447:1;11444;11437:12",
  "source": "pragma solidity ^0.8.0;\n\nimport \"./freeportParts/MetaTxContext.sol\";\nimport \"./Freeport.sol\";\n\n/** The contract NFTAttachment allows users to attach objects to NFTs.\n * Some application can listen for the events and interpret the objects in some way.\n *\n * There are three roles who can attach objects to an NFT:\n * the minter, any current owner, or any anonymous account.\n * A different event is emitted for each role.\n *\n * The attachment data is meant to identify an object hosted externally,\n * such as a CID, a.k.a. Content Identifier, or a DDC URL.\n * The content may be retrieved from Cere DDC or some other store.\n */\ncontract NFTAttachment is /* AccessControl, */ MetaTxContext {\n\n    /** This attachment contract refers to the NFT contract in this variable.\n     */\n    Freeport public freeport;\n\n    /** The token ID that represents the internal currency for all payments in Freeport. */\n    uint256 constant CURRENCY = 0;\n\n    /** Set which NFT contract to refer to.\n     *\n     * The event `MinterAttachToNFT` is only supported for Freeport-compatible NFTs.\n     *\n     * The event `OwnerAttachToNFT` is supported for ERC-1155 NFTs, including Freeport.\n     */\n    function initialize(Freeport _freeport) public initializer {\n        __MetaTxContext_init();\n\n        require(address(_freeport) != address(0));\n        freeport = _freeport;\n    }\n\n    /** The account `minter` wished to attach data `attachment` to the NFT type `nftId`.\n     *\n     * The `minter` is the minter who created this NFT type, or may create it in the future if it does not exist.\n     */\n    event MinterAttachToNFT(\n        address indexed minter,\n        uint256 indexed nftId,\n        bytes attachment);\n\n    /** The account `owner` wished to attach data `attachment` to the NFT type `nftId`.\n     *\n     * The `owner` owned at least one NFT of this type at the time of the event.\n     */\n    event OwnerAttachToNFT(\n        address indexed owner,\n        uint256 indexed nftId,\n        bytes attachment);\n\n    /** The account `anonym` wished to attach data `attachment` to the NFT type `nftId`.\n     *\n     * There is absolutely no validation. It is the responsibility of the reader of this event to decide\n     * who the sender is and what the attachment means.\n     */\n    event AnonymAttachToNFT(\n        address indexed anonym,\n        uint256 indexed nftId,\n        bytes attachment);\n\n    /** Attach data `attachment` to the NFT type `nftId`, as the minter of this NFT type.\n     *\n     * This only works for NFT IDs in the Freeport format.\n     */\n    function minterAttachToNFT(uint256 nftId, bytes calldata attachment)\n    public {\n        require(nftId != CURRENCY, \"0 is not a valid NFT ID\");\n        address minter = _msgSender();\n        address actualMinter = _minterFromNftId(nftId);\n        require(minter == actualMinter, \"Only minter\");\n        emit MinterAttachToNFT(minter, nftId, attachment);\n    }\n\n    /** Attach data `attachment` to the NFT type `nftId`, as a current owner of an NFT of this type.\n     *\n     * This works for NFTs in the ERC-1155 or Freeport standards.\n     */\n    function ownerAttachToNFT(uint256 nftId, bytes calldata attachment)\n    public {\n        require(nftId != CURRENCY, \"0 is not a valid NFT ID\");\n        address owner = _msgSender();\n        uint256 balance = freeport.balanceOf(owner, nftId);\n        require(balance > 0, \"Only current owner\");\n        emit OwnerAttachToNFT(owner, nftId, attachment);\n    }\n\n    /** Attach data `attachment` to the NFT type `nftId`, as any account.\n     */\n    function anonymAttachToNFT(uint256 nftId, bytes calldata attachment)\n    public {\n        require(nftId != CURRENCY, \"0 is not a valid NFT ID\");\n        address anonym = _msgSender();\n        emit AnonymAttachToNFT(anonym, nftId, attachment);\n    }\n\n    /** Parse an NFT ID into its issuer, its supply, and an arbitrary nonce.\n     *\n     * This does not imply that the NFTs exist.\n     *\n     * This is specific to Freeport NFTs. See `freeportParts/Issuance.sol`\n     */\n    function _minterFromNftId(uint256 id)\n    public pure returns (address minter) {\n        minter = address(uint160((id & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000) >> (32 + 64)));\n        return minter;\n    }\n}\n",
  "sourcePath": "/Users/neanvo/WorkFlow/cere/Freeport-Smart-Contracts/contracts/NFTAttachment.sol",
  "ast": {
    "absolutePath": "project:/contracts/NFTAttachment.sol",
    "exportedSymbols": {
      "AccessControlUpgradeable": [
        395
      ],
      "AddressUpgradeable": [
        1519
      ],
      "BaseNFT": [
        11291
      ],
      "ContextUpgradeable": [
        1564
      ],
      "Currency": [
        11439
      ],
      "ERC1155Upgradeable": [
        14735
      ],
      "ERC165Upgradeable": [
        2017
      ],
      "ERC1967UpgradeUpgradeable": [
        829
      ],
      "ERC20Adapter": [
        11567
      ],
      "Freeport": [
        5302
      ],
      "IAccessControlUpgradeable": [
        44
      ],
      "IBeaconUpgradeable": [
        839
      ],
      "IERC1155MetadataURIUpgradeable": [
        1137
      ],
      "IERC1155ReceiverUpgradeable": [
        1000
      ],
      "IERC1155Upgradeable": [
        1122
      ],
      "IERC165Upgradeable": [
        2029
      ],
      "IERC20": [
        2982
      ],
      "Initializable": [
        885
      ],
      "Issuance": [
        11887
      ],
      "JointAccounts": [
        12231
      ],
      "MetaTxContext": [
        12308
      ],
      "NFTAttachment": [
        5888
      ],
      "SimpleExchange": [
        12588
      ],
      "StorageSlotUpgradeable": [
        1624
      ],
      "StringsUpgradeable": [
        1827
      ],
      "TransferFees": [
        13204
      ],
      "TransferOperator": [
        13248
      ],
      "UUPSUpgradeable": [
        959
      ],
      "Upgradeable": [
        13289
      ]
    },
    "id": 5889,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5680,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:35"
      },
      {
        "absolutePath": "project:/contracts/freeportParts/MetaTxContext.sol",
        "file": "./freeportParts/MetaTxContext.sol",
        "id": 5681,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5889,
        "sourceUnit": 12309,
        "src": "25:43:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Freeport.sol",
        "file": "./Freeport.sol",
        "id": 5682,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5889,
        "sourceUnit": 5303,
        "src": "69:24:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5684,
              "name": "MetaTxContext",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12308,
              "src": "673:13:35"
            },
            "id": 5685,
            "nodeType": "InheritanceSpecifier",
            "src": "673:13:35"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5683,
          "nodeType": "StructuredDocumentation",
          "src": "95:530:35",
          "text": "The contract NFTAttachment allows users to attach objects to NFTs.\n Some application can listen for the events and interpret the objects in some way.\n There are three roles who can attach objects to an NFT:\n the minter, any current owner, or any anonymous account.\n A different event is emitted for each role.\n The attachment data is meant to identify an object hosted externally,\n such as a CID, a.k.a. Content Identifier, or a DDC URL.\n The content may be retrieved from Cere DDC or some other store."
        },
        "fullyImplemented": true,
        "id": 5888,
        "linearizedBaseContracts": [
          5888,
          12308,
          13289,
          395,
          2017,
          2029,
          44,
          1564,
          959,
          829,
          885
        ],
        "name": "NFTAttachment",
        "nameLocation": "635:13:35",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 5686,
              "nodeType": "StructuredDocumentation",
              "src": "694:81:35",
              "text": "This attachment contract refers to the NFT contract in this variable."
            },
            "functionSelector": "9470ad85",
            "id": 5689,
            "mutability": "mutable",
            "name": "freeport",
            "nameLocation": "796:8:35",
            "nodeType": "VariableDeclaration",
            "scope": 5888,
            "src": "780:24:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Freeport_$5302",
              "typeString": "contract Freeport"
            },
            "typeName": {
              "id": 5688,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 5687,
                "name": "Freeport",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5302,
                "src": "780:8:35"
              },
              "referencedDeclaration": 5302,
              "src": "780:8:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Freeport_$5302",
                "typeString": "contract Freeport"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 5690,
              "nodeType": "StructuredDocumentation",
              "src": "811:87:35",
              "text": "The token ID that represents the internal currency for all payments in Freeport. "
            },
            "id": 5693,
            "mutability": "constant",
            "name": "CURRENCY",
            "nameLocation": "920:8:35",
            "nodeType": "VariableDeclaration",
            "scope": 5888,
            "src": "903:29:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5691,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "903:7:35",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 5692,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "931:1:35",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5721,
              "nodeType": "Block",
              "src": "1237:121:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5702,
                      "name": "__MetaTxContext_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12243,
                      "src": "1247:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 5703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1247:22:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5704,
                  "nodeType": "ExpressionStatement",
                  "src": "1247:22:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 5708,
                              "name": "_freeport",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5697,
                              "src": "1296:9:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Freeport_$5302",
                                "typeString": "contract Freeport"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Freeport_$5302",
                                "typeString": "contract Freeport"
                              }
                            ],
                            "id": 5707,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1288:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5706,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1288:7:35",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1288:18:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5712,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1318:1:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5711,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1310:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5710,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1310:7:35",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1310:10:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1288:32:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 5705,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1280:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 5715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1280:41:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5716,
                  "nodeType": "ExpressionStatement",
                  "src": "1280:41:35"
                },
                {
                  "expression": {
                    "id": 5719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5717,
                      "name": "freeport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5689,
                      "src": "1331:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freeport_$5302",
                        "typeString": "contract Freeport"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5718,
                      "name": "_freeport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5697,
                      "src": "1342:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freeport_$5302",
                        "typeString": "contract Freeport"
                      }
                    },
                    "src": "1331:20:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freeport_$5302",
                      "typeString": "contract Freeport"
                    }
                  },
                  "id": 5720,
                  "nodeType": "ExpressionStatement",
                  "src": "1331:20:35"
                }
              ]
            },
            "documentation": {
              "id": 5694,
              "nodeType": "StructuredDocumentation",
              "src": "939:234:35",
              "text": "Set which NFT contract to refer to.\n The event `MinterAttachToNFT` is only supported for Freeport-compatible NFTs.\n The event `OwnerAttachToNFT` is supported for ERC-1155 NFTs, including Freeport."
            },
            "functionSelector": "c4d66de8",
            "id": 5722,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5700,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5699,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 884,
                  "src": "1225:11:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "1225:11:35"
              }
            ],
            "name": "initialize",
            "nameLocation": "1187:10:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5697,
                  "mutability": "mutable",
                  "name": "_freeport",
                  "nameLocation": "1207:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 5722,
                  "src": "1198:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Freeport_$5302",
                    "typeString": "contract Freeport"
                  },
                  "typeName": {
                    "id": 5696,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5695,
                      "name": "Freeport",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5302,
                      "src": "1198:8:35"
                    },
                    "referencedDeclaration": 5302,
                    "src": "1198:8:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freeport_$5302",
                      "typeString": "contract Freeport"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1197:20:35"
            },
            "returnParameters": {
              "id": 5701,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1237:0:35"
            },
            "scope": 5888,
            "src": "1178:180:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 5723,
              "nodeType": "StructuredDocumentation",
              "src": "1364:213:35",
              "text": "The account `minter` wished to attach data `attachment` to the NFT type `nftId`.\n The `minter` is the minter who created this NFT type, or may create it in the future if it does not exist."
            },
            "id": 5731,
            "name": "MinterAttachToNFT",
            "nameLocation": "1588:17:35",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5730,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5725,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "1631:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 5731,
                  "src": "1615:22:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5724,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1615:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5727,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "1663:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 5731,
                  "src": "1647:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5726,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1647:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5729,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "1684:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 5731,
                  "src": "1678:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5728,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1678:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1605:90:35"
            },
            "src": "1582:114:35"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 5732,
              "nodeType": "StructuredDocumentation",
              "src": "1702:179:35",
              "text": "The account `owner` wished to attach data `attachment` to the NFT type `nftId`.\n The `owner` owned at least one NFT of this type at the time of the event."
            },
            "id": 5740,
            "name": "OwnerAttachToNFT",
            "nameLocation": "1892:16:35",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5734,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1934:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 5740,
                  "src": "1918:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5733,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1918:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5736,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "1965:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 5740,
                  "src": "1949:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5735,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1949:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5738,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "1986:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 5740,
                  "src": "1980:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5737,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1980:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1908:89:35"
            },
            "src": "1886:112:35"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 5741,
              "nodeType": "StructuredDocumentation",
              "src": "2004:260:35",
              "text": "The account `anonym` wished to attach data `attachment` to the NFT type `nftId`.\n There is absolutely no validation. It is the responsibility of the reader of this event to decide\n who the sender is and what the attachment means."
            },
            "id": 5749,
            "name": "AnonymAttachToNFT",
            "nameLocation": "2275:17:35",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5748,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5743,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "anonym",
                  "nameLocation": "2318:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 5749,
                  "src": "2302:22:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5742,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2302:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5745,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "2350:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 5749,
                  "src": "2334:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5744,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2334:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5747,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "2371:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 5749,
                  "src": "2365:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5746,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2365:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2292:90:35"
            },
            "src": "2269:114:35"
          },
          {
            "body": {
              "id": 5788,
              "nodeType": "Block",
              "src": "2633:280:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5758,
                          "name": "nftId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5752,
                          "src": "2651:5:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 5759,
                          "name": "CURRENCY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5693,
                          "src": "2660:8:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2651:17:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "30206973206e6f7420612076616c6964204e4654204944",
                        "id": 5761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2670:25:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        },
                        "value": "0 is not a valid NFT ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        }
                      ],
                      "id": 5757,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2643:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2643:53:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5763,
                  "nodeType": "ExpressionStatement",
                  "src": "2643:53:35"
                },
                {
                  "assignments": [
                    5765
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5765,
                      "mutability": "mutable",
                      "name": "minter",
                      "nameLocation": "2714:6:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 5788,
                      "src": "2706:14:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 5764,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2706:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5768,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5766,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12280
                      ],
                      "referencedDeclaration": 12280,
                      "src": "2723:10:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 5767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2723:12:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2706:29:35"
                },
                {
                  "assignments": [
                    5770
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5770,
                      "mutability": "mutable",
                      "name": "actualMinter",
                      "nameLocation": "2753:12:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 5788,
                      "src": "2745:20:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 5769,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2745:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5774,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 5772,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5752,
                        "src": "2785:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5771,
                      "name": "_minterFromNftId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5887,
                      "src": "2768:16:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) pure returns (address)"
                      }
                    },
                    "id": 5773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2768:23:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2745:46:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5776,
                          "name": "minter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5765,
                          "src": "2809:6:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 5777,
                          "name": "actualMinter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5770,
                          "src": "2819:12:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2809:22:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206d696e746572",
                        "id": 5779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2833:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_578cb4a41adb75340d2cbfbdb0c6610ff4519d15e645cc9b4cc4c64336da99c6",
                          "typeString": "literal_string \"Only minter\""
                        },
                        "value": "Only minter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_578cb4a41adb75340d2cbfbdb0c6610ff4519d15e645cc9b4cc4c64336da99c6",
                          "typeString": "literal_string \"Only minter\""
                        }
                      ],
                      "id": 5775,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2801:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2801:46:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5781,
                  "nodeType": "ExpressionStatement",
                  "src": "2801:46:35"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5783,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5765,
                        "src": "2880:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5784,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5752,
                        "src": "2888:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5785,
                        "name": "attachment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5754,
                        "src": "2895:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 5782,
                      "name": "MinterAttachToNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5731,
                      "src": "2862:17:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 5786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2862:44:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5787,
                  "nodeType": "EmitStatement",
                  "src": "2857:49:35"
                }
              ]
            },
            "documentation": {
              "id": 5750,
              "nodeType": "StructuredDocumentation",
              "src": "2389:159:35",
              "text": "Attach data `attachment` to the NFT type `nftId`, as the minter of this NFT type.\n This only works for NFT IDs in the Freeport format."
            },
            "functionSelector": "b85f8ca9",
            "id": 5789,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "minterAttachToNFT",
            "nameLocation": "2562:17:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5752,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "2588:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 5789,
                  "src": "2580:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5751,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2580:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5754,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "2610:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 5789,
                  "src": "2595:25:35",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5753,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2595:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2579:42:35"
            },
            "returnParameters": {
              "id": 5756,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2633:0:35"
            },
            "scope": 5888,
            "src": "2553:360:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5830,
              "nodeType": "Block",
              "src": "3180:277:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5798,
                          "name": "nftId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5792,
                          "src": "3198:5:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 5799,
                          "name": "CURRENCY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5693,
                          "src": "3207:8:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3198:17:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "30206973206e6f7420612076616c6964204e4654204944",
                        "id": 5801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3217:25:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        },
                        "value": "0 is not a valid NFT ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        }
                      ],
                      "id": 5797,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3190:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3190:53:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5803,
                  "nodeType": "ExpressionStatement",
                  "src": "3190:53:35"
                },
                {
                  "assignments": [
                    5805
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5805,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "3261:5:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 5830,
                      "src": "3253:13:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 5804,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3253:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5808,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5806,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12280
                      ],
                      "referencedDeclaration": 12280,
                      "src": "3269:10:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 5807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3269:12:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3253:28:35"
                },
                {
                  "assignments": [
                    5810
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5810,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "3299:7:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 5830,
                      "src": "3291:15:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5809,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3291:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5816,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 5813,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5805,
                        "src": "3328:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5814,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5792,
                        "src": "3335:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5811,
                        "name": "freeport",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5689,
                        "src": "3309:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Freeport_$5302",
                          "typeString": "contract Freeport"
                        }
                      },
                      "id": 5812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13814,
                      "src": "3309:18:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 5815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3309:32:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3291:50:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5818,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5810,
                          "src": "3359:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 5819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3369:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3359:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792063757272656e74206f776e6572",
                        "id": 5821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3372:20:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_111b7c5d2b16684041cedd75c064e2306dd9ae18e93fc76a7b5be4886458a40b",
                          "typeString": "literal_string \"Only current owner\""
                        },
                        "value": "Only current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_111b7c5d2b16684041cedd75c064e2306dd9ae18e93fc76a7b5be4886458a40b",
                          "typeString": "literal_string \"Only current owner\""
                        }
                      ],
                      "id": 5817,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3351:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3351:42:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5823,
                  "nodeType": "ExpressionStatement",
                  "src": "3351:42:35"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5825,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5805,
                        "src": "3425:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5826,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5792,
                        "src": "3432:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5827,
                        "name": "attachment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5794,
                        "src": "3439:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 5824,
                      "name": "OwnerAttachToNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5740,
                      "src": "3408:16:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 5828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3408:42:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5829,
                  "nodeType": "EmitStatement",
                  "src": "3403:47:35"
                }
              ]
            },
            "documentation": {
              "id": 5790,
              "nodeType": "StructuredDocumentation",
              "src": "2919:177:35",
              "text": "Attach data `attachment` to the NFT type `nftId`, as a current owner of an NFT of this type.\n This works for NFTs in the ERC-1155 or Freeport standards."
            },
            "functionSelector": "c0ba9f55",
            "id": 5831,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerAttachToNFT",
            "nameLocation": "3110:16:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5795,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5792,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "3135:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 5831,
                  "src": "3127:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5791,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3127:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5794,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "3157:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 5831,
                  "src": "3142:25:35",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5793,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3142:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3126:42:35"
            },
            "returnParameters": {
              "id": 5796,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3180:0:35"
            },
            "scope": 5888,
            "src": "3101:356:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5857,
              "nodeType": "Block",
              "src": "3625:168:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5840,
                          "name": "nftId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5834,
                          "src": "3643:5:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 5841,
                          "name": "CURRENCY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5693,
                          "src": "3652:8:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3643:17:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "30206973206e6f7420612076616c6964204e4654204944",
                        "id": 5843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3662:25:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        },
                        "value": "0 is not a valid NFT ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        }
                      ],
                      "id": 5839,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3635:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3635:53:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5845,
                  "nodeType": "ExpressionStatement",
                  "src": "3635:53:35"
                },
                {
                  "assignments": [
                    5847
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5847,
                      "mutability": "mutable",
                      "name": "anonym",
                      "nameLocation": "3706:6:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 5857,
                      "src": "3698:14:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 5846,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3698:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5850,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5848,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12280
                      ],
                      "referencedDeclaration": 12280,
                      "src": "3715:10:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 5849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3715:12:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3698:29:35"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5852,
                        "name": "anonym",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5847,
                        "src": "3760:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5853,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5834,
                        "src": "3768:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5854,
                        "name": "attachment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5836,
                        "src": "3775:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 5851,
                      "name": "AnonymAttachToNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5749,
                      "src": "3742:17:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 5855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3742:44:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5856,
                  "nodeType": "EmitStatement",
                  "src": "3737:49:35"
                }
              ]
            },
            "documentation": {
              "id": 5832,
              "nodeType": "StructuredDocumentation",
              "src": "3463:77:35",
              "text": "Attach data `attachment` to the NFT type `nftId`, as any account."
            },
            "functionSelector": "f9715b8f",
            "id": 5858,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "anonymAttachToNFT",
            "nameLocation": "3554:17:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5834,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "3580:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 5858,
                  "src": "3572:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5833,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3572:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5836,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "3602:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 5858,
                  "src": "3587:25:35",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5835,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3587:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3571:42:35"
            },
            "returnParameters": {
              "id": 5838,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3625:0:35"
            },
            "scope": 5888,
            "src": "3545:248:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5886,
              "nodeType": "Block",
              "src": "4100:153:35",
              "statements": [
                {
                  "expression": {
                    "id": 5882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5866,
                      "name": "minter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5864,
                      "src": "4110:6:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5879,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 5873,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 5871,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5861,
                                      "src": "4136:2:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&",
                                    "rightExpression": {
                                      "hexValue": "307846464646464646464646464646464646464646464646464646464646464646464646464646464646303030303030303030303030303030303030303030303030",
                                      "id": 5872,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4141:66:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665561335876943319670319585689600_by_1",
                                        "typeString": "int_const 1157...(70 digits omitted)...9600"
                                      },
                                      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000"
                                    },
                                    "src": "4136:71:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 5874,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "4135:73:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">>",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_rational_96_by_1",
                                      "typeString": "int_const 96"
                                    },
                                    "id": 5877,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "3332",
                                      "id": 5875,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4213:2:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_32_by_1",
                                        "typeString": "int_const 32"
                                      },
                                      "value": "32"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "hexValue": "3634",
                                      "id": 5876,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4218:2:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_64_by_1",
                                        "typeString": "int_const 64"
                                      },
                                      "value": "64"
                                    },
                                    "src": "4213:7:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_96_by_1",
                                      "typeString": "int_const 96"
                                    }
                                  }
                                ],
                                "id": 5878,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "4212:9:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_96_by_1",
                                  "typeString": "int_const 96"
                                }
                              },
                              "src": "4135:86:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 5870,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4127:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint160_$",
                              "typeString": "type(uint160)"
                            },
                            "typeName": {
                              "id": 5869,
                              "name": "uint160",
                              "nodeType": "ElementaryTypeName",
                              "src": "4127:7:35",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4127:95:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        ],
                        "id": 5868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4119:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 5867,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4119:7:35",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 5881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4119:104:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4110:113:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5883,
                  "nodeType": "ExpressionStatement",
                  "src": "4110:113:35"
                },
                {
                  "expression": {
                    "id": 5884,
                    "name": "minter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5864,
                    "src": "4240:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 5865,
                  "id": 5885,
                  "nodeType": "Return",
                  "src": "4233:13:35"
                }
              ]
            },
            "documentation": {
              "id": 5859,
              "nodeType": "StructuredDocumentation",
              "src": "3799:217:35",
              "text": "Parse an NFT ID into its issuer, its supply, and an arbitrary nonce.\n This does not imply that the NFTs exist.\n This is specific to Freeport NFTs. See `freeportParts/Issuance.sol`"
            },
            "functionSelector": "d2e9277b",
            "id": 5887,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_minterFromNftId",
            "nameLocation": "4030:16:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5861,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "4055:2:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 5887,
                  "src": "4047:10:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5860,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4047:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4046:12:35"
            },
            "returnParameters": {
              "id": 5865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5864,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "4092:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 5887,
                  "src": "4084:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5863,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4084:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4083:16:35"
            },
            "scope": 5888,
            "src": "4021:232:35",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 5889,
        "src": "626:3629:35",
        "usedErrors": []
      }
    ],
    "src": "0:4256:35"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {
    "137": {
      "events": {},
      "links": {},
      "address": "0x651f2C6942F1c290632Ad5bB61D9ece789f82f35",
      "transactionHash": "0xef845d373ce27fdd9561113a6c4600bdc790c0ba64e7fb82680fcdb748be6e3a"
    },
    "80001": {
      "events": {},
      "links": {},
      "address": "0x84766787c6b9131927A76634F7DDCfcf3ff2e9d1",
      "transactionHash": "0x92ec7022f08438d916fd2d98943743e2675e69644821e7cff383912cf8604e8d"
    }
  },
  "schemaVersion": "3.4.8",
  "updatedAt": "2022-09-01T12:16:26.761Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "AnonymAttachToNFT(address,uint256,bytes)": {
        "notice": "The account `anonym` wished to attach data `attachment` to the NFT type `nftId`. There is absolutely no validation. It is the responsibility of the reader of this event to decide who the sender is and what the attachment means."
      },
      "MinterAttachToNFT(address,uint256,bytes)": {
        "notice": "The account `minter` wished to attach data `attachment` to the NFT type `nftId`. The `minter` is the minter who created this NFT type, or may create it in the future if it does not exist."
      },
      "OwnerAttachToNFT(address,uint256,bytes)": {
        "notice": "The account `owner` wished to attach data `attachment` to the NFT type `nftId`. The `owner` owned at least one NFT of this type at the time of the event."
      }
    },
    "kind": "user",
    "methods": {
      "_minterFromNftId(uint256)": {
        "notice": "Parse an NFT ID into its issuer, its supply, and an arbitrary nonce. This does not imply that the NFTs exist. This is specific to Freeport NFTs. See `freeportParts/Issuance.sol`"
      },
      "anonymAttachToNFT(uint256,bytes)": {
        "notice": "Attach data `attachment` to the NFT type `nftId`, as any account."
      },
      "freeport()": {
        "notice": "This attachment contract refers to the NFT contract in this variable."
      },
      "initialize(address)": {
        "notice": "Set which NFT contract to refer to. The event `MinterAttachToNFT` is only supported for Freeport-compatible NFTs. The event `OwnerAttachToNFT` is supported for ERC-1155 NFTs, including Freeport."
      },
      "minterAttachToNFT(uint256,bytes)": {
        "notice": "Attach data `attachment` to the NFT type `nftId`, as the minter of this NFT type. This only works for NFT IDs in the Freeport format."
      },
      "ownerAttachToNFT(uint256,bytes)": {
        "notice": "Attach data `attachment` to the NFT type `nftId`, as a current owner of an NFT of this type. This works for NFTs in the ERC-1155 or Freeport standards."
      }
    },
    "notice": "The contract NFTAttachment allows users to attach objects to NFTs. Some application can listen for the events and interpret the objects in some way. There are three roles who can attach objects to an NFT: the minter, any current owner, or any anonymous account. A different event is emitted for each role. The attachment data is meant to identify an object hosted externally, such as a CID, a.k.a. Content Identifier, or a DDC URL. The content may be retrieved from Cere DDC or some other store.",
    "version": 1
  }
}